{"version":3,"file":"9684.0cdb60d.js","mappings":"0KAeIA,E,mEACJ,SAAWA,GACPA,EAAWC,OAAS,iBACvB,CAFD,CAEGD,IAAeA,EAAa,CAAC,IAIhC,MAWA,EAXe,CACXE,SAcJ,SAAkBC,EAAKC,EAAYC,EAAUC,GACzC,MAAM,SAAEC,EAAQ,MAAEC,GAAUL,EACtBM,EAAQL,EAAWM,KAAK,cACxBC,EAAQ,IAAI,EAAAC,cAwDlB,OAvDAL,EAASM,WAAWb,EAAWC,OAAQ,CACnCa,MAAOL,EAAMM,GAAG,gBAChBC,QAAUC,IACN,MAAMC,EAAMD,EAAU,IAAIE,OAAOF,EAAU,KAAK,GAC1CG,EAAK,YAAYC,EAAQD,KAIzBE,EAAW,IAAI,EAAAC,SAAS,CAC1BZ,QACAO,MACAM,SANcC,IACdjB,EAAMkB,IAAID,EAAM,OAAQ,CAAEE,IAAKP,GAAK,EAMpCb,WACAH,eAEJkB,EAASX,MAAQA,EACjBW,EAASM,MAAMC,KAAO,EAAAC,aACtBR,EAASM,MAAMd,MAAQL,EAAMM,GAAG,YAChC,MAAMgB,EAAO,IAAI,EAAAC,eAAe,CAAEC,QAASX,IAc3C,OAZAS,EAAKH,MAAMM,YAAa,IAAAC,SAAQ3B,EAAM4B,QAAQ,SAASC,OACvDN,EAAKX,GAAKA,EACVZ,EAAMkB,IAAIK,EAAM,OAAQ,CACpB7B,SAAUe,EAAe,SACzBU,IAAKV,EAAU,MAEfZ,GACAA,EAASiC,eAAeC,SAAQ,KAE5BR,EAAKH,MAAMM,UAAW,IAAAC,SAAQ9B,EAAS+B,QAAQ,SAASC,OAAS,CAAC,GACnEN,GAEAA,CAAI,IAGfzB,GACAA,EAAQkC,QAAQ,CACZC,QAASzC,EAAWC,OACpByC,SAAUjC,EAAMM,GAAG,cAGvBV,IACAA,EAASsC,kBAAmB,EAC5BtC,EAASuC,aAAaL,SAAQ,CAACM,EAAQC,KACnC,IAAIC,EAEJ,MAAMpB,GAAmC,QAA3BoB,EAAKD,EAAIE,oBAAiC,IAAPD,OAAgB,EAASA,EAAGE,MAAM7B,KAC/E0B,EAAII,OAAOJ,EAAII,OAAOb,OAAS,GAAGY,MAAM7B,GAC5C,OAAIb,EAAS4C,WAAW,oCAEb5C,EAASS,QAAQ,mCAAoC,CAAEW,QAE3DpB,EAASS,QAAQhB,EAAWC,OAAQ,CAAE0B,OAAM,KAGpDhB,CACX,EAzEIS,GAAI,wCACJgC,SAAU,CAAC,EAAAC,aACXC,SAAU,CAAC,EAAAC,UAAW,EAAAC,iBACtBC,SAAU,EAAAC,UACVC,WAAW,GAyEf,IAAItC,GACJ,SAAWA,GAIPA,EAAQD,GAAK,CAChB,CALD,CAKGC,IAAYA,EAAU,CAAC,G","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/launcher-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module launcher-extension\n */\nimport { ILabShell } from '@jupyterlab/application';\nimport { ICommandPalette, MainAreaWidget } from '@jupyterlab/apputils';\nimport { ILauncher, Launcher, LauncherModel } from '@jupyterlab/launcher';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { launcherIcon } from '@jupyterlab/ui-components';\nimport { toArray } from '@lumino/algorithm';\n/**\n * The command IDs used by the launcher plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'launcher:create';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A service providing an interface to the the launcher.\n */\nconst plugin = {\n    activate,\n    id: '@jupyterlab/launcher-extension:plugin',\n    requires: [ITranslator],\n    optional: [ILabShell, ICommandPalette],\n    provides: ILauncher,\n    autoStart: true\n};\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n/**\n * Activate the launcher.\n */\nfunction activate(app, translator, labShell, palette) {\n    const { commands, shell } = app;\n    const trans = translator.load('jupyterlab');\n    const model = new LauncherModel();\n    commands.addCommand(CommandIDs.create, {\n        label: trans.__('New Launcher'),\n        execute: (args) => {\n            const cwd = args['cwd'] ? String(args['cwd']) : '';\n            const id = `launcher-${Private.id++}`;\n            const callback = (item) => {\n                shell.add(item, 'main', { ref: id });\n            };\n            const launcher = new Launcher({\n                model,\n                cwd,\n                callback,\n                commands,\n                translator\n            });\n            launcher.model = model;\n            launcher.title.icon = launcherIcon;\n            launcher.title.label = trans.__('Launcher');\n            const main = new MainAreaWidget({ content: launcher });\n            // If there are any other widgets open, remove the launcher close icon.\n            main.title.closable = !!toArray(shell.widgets('main')).length;\n            main.id = id;\n            shell.add(main, 'main', {\n                activate: args['activate'],\n                ref: args['ref']\n            });\n            if (labShell) {\n                labShell.layoutModified.connect(() => {\n                    // If there is only a launcher open, remove the close icon.\n                    main.title.closable = toArray(labShell.widgets('main')).length > 1;\n                }, main);\n            }\n            return main;\n        }\n    });\n    if (palette) {\n        palette.addItem({\n            command: CommandIDs.create,\n            category: trans.__('Launcher')\n        });\n    }\n    if (labShell) {\n        labShell.addButtonEnabled = true;\n        labShell.addRequested.connect((sender, arg) => {\n            var _a;\n            // Get the ref for the current tab of the tabbar which the add button was clicked\n            const ref = ((_a = arg.currentTitle) === null || _a === void 0 ? void 0 : _a.owner.id) ||\n                arg.titles[arg.titles.length - 1].owner.id;\n            if (commands.hasCommand('filebrowser:create-main-launcher')) {\n                // If a file browser is defined connect the launcher to it\n                return commands.execute('filebrowser:create-main-launcher', { ref });\n            }\n            return commands.execute(CommandIDs.create, { ref });\n        });\n    }\n    return model;\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The incrementing id used for launcher widgets.\n     */\n    Private.id = 0;\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"],"names":["CommandIDs","create","activate","app","translator","labShell","palette","commands","shell","trans","load","model","LauncherModel","addCommand","label","__","execute","args","cwd","String","id","Private","launcher","Launcher","callback","item","add","ref","title","icon","launcherIcon","main","MainAreaWidget","content","closable","toArray","widgets","length","layoutModified","connect","addItem","command","category","addButtonEnabled","addRequested","sender","arg","_a","currentTitle","owner","titles","hasCommand","requires","ITranslator","optional","ILabShell","ICommandPalette","provides","ILauncher","autoStart"],"sourceRoot":""}