{"version":3,"file":"5115.65cbeea.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/blacklist/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/create-react-class/factory.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/create-react-class/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/escape-string-regexp/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/object-assign/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/prop-types/factoryWithThrowingShims.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/prop-types/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/react-highlighter/lib/highlighter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/react-highlighter/lib/regExpPropType.js"],"sourcesContent":["module.exports = function blacklist (src) {\n  var copy = {}\n  var filter = arguments[1]\n\n  if (typeof filter === 'string') {\n    filter = {}\n    for (var i = 1; i < arguments.length; i++) {\n      filter[arguments[i]] = true\n    }\n  }\n\n  for (var key in src) {\n    // blacklist?\n    if (filter[key]) continue\n\n    copy[key] = src[key]\n  }\n\n  return copy\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\n// -- Inlined from fbjs --\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction _invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nvar warning = function(){};\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\n// /-- Inlined from fbjs --\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Similar to ReactClassInterface but for static methods.\n   */\n  var ReactClassStaticInterface = {\n    /**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */\n    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isAlreadyDefined = name in Constructor;\n      if (isAlreadyDefined) {\n        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)\n          ? ReactClassStaticInterface[name]\n          : null;\n\n        _invariant(\n          specPolicy === 'DEFINE_MANY_MERGED',\n          'ReactClass: You are attempting to define ' +\n            '`%s` on your component more than once. This conflict may be ' +\n            'due to a mixin.',\n          name\n        );\n\n        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n\n        return;\n      }\n\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.UNSAFE_componentWillRecieveProps,\n        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +\n          'Did you mean UNSAFE_componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar React = require('react');\nvar factory = require('./factory');\n\nif (typeof React === 'undefined') {\n  throw Error(\n    'create-react-class could not find the React object. If you are using script tags, ' +\n      'make sure that React is being loaded before create-react-class.'\n  );\n}\n\n// Hack to grab NoopUpdateQueue from isomorphic React\nvar ReactNoopUpdateQueue = new React.Component().updater;\n\nmodule.exports = factory(\n  React.Component,\n  React.isValidElement,\n  ReactNoopUpdateQueue\n);\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","var React = require('react');\nvar RegExpPropType = require('./regExpPropType');\nvar escapeStringRegexp = require('escape-string-regexp');\nvar blacklist = require('blacklist');\nvar createReactClass = require('create-react-class');\nvar PropTypes = require('prop-types');\n\nfunction removeDiacritics(str, blacklist) {\n  if (!String.prototype.normalize) {\n    // Fall back to original string\n    return str;\n  }\n\n  if (!blacklist) {\n    // No blacklist, just remove all\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  else {\n    var blacklistChars = blacklist.split('');\n\n    // Remove all diacritics that are not a part of a blacklisted character\n    // First char cannot be a diacritic\n    return str.normalize('NFD').replace(/.[\\u0300-\\u036f]+/g, function(m) {\n      return blacklistChars.indexOf(m.normalize()) > -1 ? m.normalize() : m[0];\n    });\n  }\n}\n\nvar Highlighter = createReactClass({\n  displayName: 'Highlighter',\n  count: 0,\n  propTypes: {\n    search: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.bool,\n      RegExpPropType\n    ]).isRequired,\n    caseSensitive: PropTypes.bool,\n    ignoreDiacritics: PropTypes.bool,\n    diacriticsBlacklist: PropTypes.string,\n    matchElement: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    matchClass: PropTypes.string,\n    matchStyle: PropTypes.object\n  },\n\n  render: function() {\n    var props = blacklist(\n      this.props,\n      'search',\n      'caseSensitive',\n      'ignoreDiacritics',\n      'diacriticsBlacklist',\n      'matchElement',\n      'matchClass',\n      'matchStyle'\n    );\n\n    return React.createElement('span', props, this.renderElement(this.props.children));\n  },\n\n  /**\n   * A wrapper to the highlight method to determine when the highlighting\n   * process should occur.\n   *\n   * @param  {string} subject\n   *   The body of text that will be searched for highlighted words.\n   *\n   * @return {Array}\n   *   An array of ReactElements\n   */\n  renderElement: function(subject) {\n    if (this.isScalar() && this.hasSearch()) {\n      var search = this.getSearch();\n      return this.highlightChildren(subject, search);\n    }\n\n    return this.props.children;\n  },\n\n  /**\n   * Determine if props are valid types for processing.\n   *\n   * @return {Boolean}\n   */\n  isScalar: function() {\n    return (/string|number|boolean/).test(typeof this.props.children);\n  },\n\n  /**\n   * Determine if required search prop is defined and valid.\n   *\n   * @return {Boolean}\n   */\n  hasSearch: function() {\n    return (typeof this.props.search !== 'undefined') && this.props.search;\n  },\n\n  /**\n   * Get the search prop, but always in the form of a regular expression. Use\n   * this as a proxy to this.props.search for consistency.\n   *\n   * @return {RegExp}\n   */\n  getSearch: function() {\n    if (this.props.search instanceof RegExp) {\n      return this.props.search;\n    }\n\n    var flags = '';\n    if (!this.props.caseSensitive) {\n      flags +='i';\n    }\n\n    var search = this.props.search;\n    if (typeof this.props.search === 'string') {\n      search = escapeStringRegexp(search);\n    }\n\n    if (this.props.ignoreDiacritics) {\n      search = removeDiacritics(search, this.props.diacriticsBlacklist);\n    }\n\n    return new RegExp(search, flags);\n  },\n\n  /**\n   * Get the indexes of the first and last characters of the matched string.\n   *\n   * @param  {string} subject\n   *   The string to search against.\n   *\n   * @param  {RegExp} search\n   *   The regex search query.\n   *\n   * @return {Object}\n   *   An object consisting of \"first\" and \"last\" properties representing the\n   *   indexes of the first and last characters of a matching string.\n   */\n  getMatchBoundaries: function(subject, search) {\n    var matches = search.exec(subject);\n    if (matches) {\n      return {\n        first: matches.index,\n        last: matches.index + matches[0].length\n      };\n    }\n  },\n\n  /**\n   * Determines which strings of text should be highlighted or not.\n   *\n   * @param  {string} subject\n   *   The body of text that will be searched for highlighted words.\n   * @param  {string} search\n   *   The search used to search for highlighted words.\n   *\n   * @return {Array}\n   *   An array of ReactElements\n   */\n  highlightChildren: function(subject, search) {\n    var children = [];\n    var remaining = subject;\n\n    while (remaining) {\n      var remainingCleaned = (this.props.ignoreDiacritics\n        ? removeDiacritics(remaining, this.props.diacriticsBlacklist)\n        : remaining\n      );\n\n      if (!search.test(remainingCleaned)) {\n        children.push(this.renderPlain(remaining));\n        return children;\n      }\n\n      var boundaries = this.getMatchBoundaries(remainingCleaned, search);\n\n      if (boundaries.first === 0 && boundaries.last === 0) {\n        // Regex zero-width match\n        return children;\n      }\n\n      // Capture the string that leads up to a match...\n      var nonMatch = remaining.slice(0, boundaries.first);\n      if (nonMatch) {\n        children.push(this.renderPlain(nonMatch));\n      }\n\n      // Now, capture the matching string...\n      var match = remaining.slice(boundaries.first, boundaries.last);\n      if (match) {\n        children.push(this.renderHighlight(match));\n      }\n\n      // And if there's anything left over, recursively run this method again.\n      remaining = remaining.slice(boundaries.last);\n\n    }\n\n    return children;\n  },\n\n  /**\n   * Responsible for rending a non-highlighted element.\n   *\n   * @param  {string} string\n   *   A string value to wrap an element around.\n   *\n   * @return {ReactElement}\n   */\n  renderPlain: function(string) {\n    this.count++;\n    return React.createElement('span', { key: this.count, children: string });\n  },\n\n  /**\n   * Responsible for rending a highlighted element.\n   *\n   * @param  {string} string\n   *   A string value to wrap an element around.\n   *\n   * @return {ReactElement}\n   */\n  renderHighlight: function(string) {\n    this.count++;\n    return React.createElement(this.props.matchElement, {\n      key: this.count,\n      className: this.props.matchClass,\n      style: this.props.matchStyle,\n      children: string\n    });\n  }\n});\n\nHighlighter.defaultProps = {\n  caseSensitive: false,\n  ignoreDiacritics: false,\n  diacriticsBlacklist: '',\n  matchElement: 'mark',\n  matchClass: 'highlight',\n  matchStyle: {}\n};\n\nmodule.exports = Highlighter;\n","var regExpPropType = function (props, propName, componentName, location) {\n  if (!(props[propName] instanceof RegExp)) {\n    var propType = typeof props[propName];\n\n    return new Error(\n      (\"Invalid \" + location + \" `\" + propName + \"` of type `\" + propType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `RegExp`.\")\n    );\n  }\n};\n\nmodule.exports = regExpPropType;\n"],"names":["module","exports","src","copy","filter","arguments","i","length","key","_assign","emptyObject","_invariant","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","MIXINS_KEY","ReactComponent","isValidElement","ReactNoopUpdateQueue","injectedMixins","ReactClassInterface","mixins","statics","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","updateComponent","ReactClassStaticInterface","getDerivedStateFromProps","RESERVED_SPEC_KEYS","displayName","Constructor","mixSpecIntoComponent","createMergedResultFunction","property","hasOwnProperty","mixStaticSpecIntoComponent","autobind","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassMixin","spec","proto","prototype","autoBindPairs","__reactAutoBindPairs","isReactClassMethod","createChainedFunction","push","mergeIntoWithNoDuplicateKeys","one","two","apply","this","bindAutoBindMethod","component","method","bind","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","updater","enqueueReplaceState","isMounted","ReactClassComponent","props","context","pairs","autoBindKey","bindAutoBindMethods","refs","state","initialState","Array","isArray","methodName","constructor","forEach","defaultProps","React","factory","Component","matchOperatorsRe","str","TypeError","getOwnPropertySymbols","Object","propIsEnumerable","propertyIsEnumerable","toObject","val","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","n","join","test3","split","letter","keys","err","shouldUseNative","target","source","from","symbols","to","s","call","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","RegExpPropType","escapeStringRegexp","blacklist","createReactClass","removeDiacritics","normalize","blacklistChars","m","indexOf","Highlighter","count","search","caseSensitive","ignoreDiacritics","diacriticsBlacklist","matchElement","matchClass","matchStyle","createElement","renderElement","children","subject","isScalar","hasSearch","getSearch","highlightChildren","test","RegExp","flags","getMatchBoundaries","matches","exec","first","index","last","remaining","remainingCleaned","renderPlain","boundaries","nonMatch","slice","match","renderHighlight","className","style","propType"],"sourceRoot":""}