{"version":3,"file":"6191.cad5f11.js","mappings":"uOAWA,MAwHA,EANgB,CAlHC,CACbA,GAAI,mCACJC,SAAU,CAAC,EAAAC,oBAAqB,EAAAC,aAChCC,WAAW,EACXC,SAAU,CAACC,EAAKC,EAAaC,KACzB,MAAM,SAAEC,GAAaH,EACfI,EAAUH,EAAYI,eACtBC,EAAQJ,EAAWK,KAAK,YAExBC,EAAqB,oBAC3BL,EAASM,WAAWD,EAAoB,CACpCE,MAAOJ,EAAMK,GAAG,gBAChBC,KAAM,EAAAC,aACNC,QAAS,IACEX,EAASW,QAAQ,yBAGhC,MAAMC,EAAc,IAAI,EAAAC,qBAAqB,CACzCb,SAAAA,EACAT,GAAIc,IAEFS,EAAU,IAAI,EAAAD,qBAAqB,CACrCb,SAAAA,EACAT,GAAI,gCAERU,EAAQc,QAAQC,WAAW,EAAG,eAAgBJ,GAC9CX,EAAQc,QAAQC,WAAW,EAAG,WAAYF,KAM/B,CACfvB,GAAI,uCACJC,SAAU,CAAC,EAAAC,oBAAqB,EAAAC,aAChCC,WAAW,EACXC,SAAU,CAACC,EAAKC,EAAaC,KACzB,MAAM,SAAEC,GAAaH,EACfI,EAAUH,EAAYI,eACtBC,EAAQJ,EAAWK,KAAK,YACxBa,EAAoB,mBAC1BjB,EAASM,WAAWW,EAAmB,CACnCV,MAAOJ,EAAMK,GAAG,eAChBC,KAAM,EAAAS,YACNP,QAAS,IACEX,EAASW,QAAQ,oBAGhC,MAAMQ,EAAa,IAAI,EAAAN,qBAAqB,CACxCb,SAAAA,EACAT,GAAI0B,IAERhB,EAAQc,QAAQC,WAAW,EAAG,cAAeG,KAMjC,CAChB5B,GAAI,wCACJC,SAAU,CAAC,EAAAC,oBAAqB,EAAAC,aAChCC,WAAW,EACXC,SAAU,CAACC,EAAKC,EAAaC,KACzB,MAAM,SAAEC,GAAaH,EACfI,EAAUH,EAAYI,eACtBC,EAAQJ,EAAWK,KAAK,YACxBgB,EAAqB,oBAC3BpB,EAASM,WAAWc,EAAoB,CACpCb,MAAOJ,EAAMK,GAAG,gBAChBC,KAAM,EAAAY,aACNV,QAAS,IACEX,EAASW,QAAQ,yBAGhC,MAAMW,EAAc,IAAI,EAAAT,qBAAqB,CACzCb,SAAAA,EACAT,GAAI6B,IAERnB,EAAQc,QAAQC,WAAW,EAAG,eAAgBM,KAMhC,CAClB/B,GAAI,kCACJC,SAAU,CAAC,EAAAC,oBAAqB,EAAAC,aAChC6B,SAAU,CAAC,EAAAC,yBACX7B,WAAW,EACXC,SAAU,CAACC,EAAK4B,EAAS1B,EAAY2B,KACjC,MAAMC,EAAW,IAAI,EAAAC,SAAS,CAAEC,aAAc,MAAOC,aAAa,IAClEH,EAASI,SAAS,gBAClB,MAAM5B,EAAQJ,EAAWK,KAAK,aACtBF,eAAgBD,GAAYwB,EAOpC,GANAxB,EAAQ+B,MAAMzB,MAAQJ,EAAMK,GAAG,SAC/BP,EAAQgC,KAAKC,aAAa,OAAQ,UAClCjC,EAAQgC,KAAKC,aAAa,aAAc/B,EAAMK,GAAG,yBACjDP,EAAQ+B,MAAMvB,KAAO,EAAA0B,WACrBR,EAASS,UAAUnC,GACnB0B,EAASU,OAAOC,OAAOrC,EAAQ+B,OAC3BN,EAAS,CACT,MAAMa,EAAU,IAAI,EAAAC,gBAAgBd,EAAS3B,GAC7CwC,EAAQhD,GAAK,sBACbgD,EAAQP,MAAMzB,MAAQJ,EAAMK,GAAG,WAC/B+B,EAAQP,MAAMvB,KAAO,EAAAgC,YACrBd,EAASS,UAAUG,GACnBZ,EAASU,OAAOC,OAAOC,EAAQP,OAEnCnC,EAAI6C,MAAMC,IAAIhB,EAAU,OAAQ,CAAEiB,KAAM","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/tree-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { CommandToolbarButton } from '@jupyterlab/apputils';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { IRunningSessionManagers, RunningSessions } from '@jupyterlab/running';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { consoleIcon, folderIcon, notebookIcon, runningIcon, terminalIcon } from '@jupyterlab/ui-components';\nimport { TabPanel } from '@lumino/widgets';\n/**\n * Plugin to add extra buttons to the file browser to create new notebooks and files\n */\nconst newFiles = {\n    id: '@retrolab/tree-extension:buttons',\n    requires: [IFileBrowserFactory, ITranslator],\n    autoStart: true,\n    activate: (app, filebrowser, translator) => {\n        const { commands } = app;\n        const browser = filebrowser.defaultBrowser;\n        const trans = translator.load('retrolab');\n        // wrapper commands to be able to override the label\n        const newNotebookCommand = 'tree:new-notebook';\n        commands.addCommand(newNotebookCommand, {\n            label: trans.__('New Notebook'),\n            icon: notebookIcon,\n            execute: () => {\n                return commands.execute('notebook:create-new');\n            }\n        });\n        const newNotebook = new CommandToolbarButton({\n            commands,\n            id: newNotebookCommand\n        });\n        const newFile = new CommandToolbarButton({\n            commands,\n            id: 'filebrowser:create-new-file'\n        });\n        browser.toolbar.insertItem(0, 'new-notebook', newNotebook);\n        browser.toolbar.insertItem(1, 'new-file', newFile);\n    }\n};\n/**\n * Plugin to add a \"New Console\" button to the file browser toolbar.\n */\nconst newConsole = {\n    id: '@retrolab/tree-extension:new-console',\n    requires: [IFileBrowserFactory, ITranslator],\n    autoStart: true,\n    activate: (app, filebrowser, translator) => {\n        const { commands } = app;\n        const browser = filebrowser.defaultBrowser;\n        const trans = translator.load('retrolab');\n        const newConsoleCommand = 'tree:new-console';\n        commands.addCommand(newConsoleCommand, {\n            label: trans.__('New Console'),\n            icon: consoleIcon,\n            execute: () => {\n                return commands.execute('console:create');\n            }\n        });\n        const newConsole = new CommandToolbarButton({\n            commands,\n            id: newConsoleCommand\n        });\n        browser.toolbar.insertItem(2, 'new-console', newConsole);\n    }\n};\n/**\n * Plugin to add a \"New Terminal\" button to the file browser toolbar.\n */\nconst newTerminal = {\n    id: '@retrolab/tree-extension:new-terminal',\n    requires: [IFileBrowserFactory, ITranslator],\n    autoStart: true,\n    activate: (app, filebrowser, translator) => {\n        const { commands } = app;\n        const browser = filebrowser.defaultBrowser;\n        const trans = translator.load('retrolab');\n        const newTerminalCommand = 'tree:new-terminal';\n        commands.addCommand(newTerminalCommand, {\n            label: trans.__('New Terminal'),\n            icon: terminalIcon,\n            execute: () => {\n                return commands.execute('terminal:create-new');\n            }\n        });\n        const newTerminal = new CommandToolbarButton({\n            commands,\n            id: newTerminalCommand\n        });\n        browser.toolbar.insertItem(3, 'new-terminal', newTerminal);\n    }\n};\n/**\n * A plugin to add the file browser widget to an ILabShell\n */\nconst browserWidget = {\n    id: '@retrolab/tree-extension:widget',\n    requires: [IFileBrowserFactory, ITranslator],\n    optional: [IRunningSessionManagers],\n    autoStart: true,\n    activate: (app, factory, translator, manager) => {\n        const tabPanel = new TabPanel({ tabPlacement: 'top', tabsMovable: true });\n        tabPanel.addClass('jp-TreePanel');\n        const trans = translator.load('retrolab');\n        const { defaultBrowser: browser } = factory;\n        browser.title.label = trans.__('Files');\n        browser.node.setAttribute('role', 'region');\n        browser.node.setAttribute('aria-label', trans.__('File Browser Section'));\n        browser.title.icon = folderIcon;\n        tabPanel.addWidget(browser);\n        tabPanel.tabBar.addTab(browser.title);\n        if (manager) {\n            const running = new RunningSessions(manager, translator);\n            running.id = 'jp-running-sessions';\n            running.title.label = trans.__('Running');\n            running.title.icon = runningIcon;\n            tabPanel.addWidget(running);\n            tabPanel.tabBar.addTab(running.title);\n        }\n        app.shell.add(tabPanel, 'main', { rank: 100 });\n    }\n};\n/**\n * Export the plugins as default.\n */\nconst plugins = [\n    newFiles,\n    newConsole,\n    newTerminal,\n    browserWidget\n];\nexport default plugins;\n"],"names":["id","requires","IFileBrowserFactory","ITranslator","autoStart","activate","app","filebrowser","translator","commands","browser","defaultBrowser","trans","load","newNotebookCommand","addCommand","label","__","icon","notebookIcon","execute","newNotebook","CommandToolbarButton","newFile","toolbar","insertItem","newConsoleCommand","consoleIcon","newConsole","newTerminalCommand","terminalIcon","newTerminal","optional","IRunningSessionManagers","factory","manager","tabPanel","TabPanel","tabPlacement","tabsMovable","addClass","title","node","setAttribute","folderIcon","addWidget","tabBar","addTab","running","RunningSessions","runningIcon","shell","add","rank"],"sourceRoot":""}