{"version":3,"file":"4196.d0c799a.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/componentStyle/ShortcutUIStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/componentStyle/ShortcutListStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/componentStyle/ShortcutItemStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/componentStyle/ShortcutInputStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutInput.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutItem.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutList.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/componentStyle/TopNavStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/componentStyle/ShortcutTitleItemStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutTitleItem.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/TopNav.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutUI.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/renderer.js"],"sourcesContent":["import { style } from 'typestyle';\nexport const TopWhitespaceStyle = style({\n    content: ' ',\n    height: 'var(--jp-toolbar-micro-height)',\n    borderBottom: 'var(--jp-border-width) solid var(--jp-toolbar-border-color)',\n    boxShadow: 'var(--jp-toolbar-box-shadow)',\n    zIndex: 2,\n    width: '100%',\n    background: 'var(--jp-toolbar-background)',\n    position: 'relative'\n});\nexport const ShortcutUIStyle = style({\n    display: 'flex',\n    flexDirection: 'column',\n    fontSize: 'var(--jp-ui-font-size1)',\n    fontFamily: 'var(--jp-ui-font-family)',\n    color: 'var(--jp-content-font-color1)',\n    minWidth: '450px',\n    width: '100%'\n});\n//# sourceMappingURL=ShortcutUIStyle.js.map","import { style } from 'typestyle';\nexport const ShortcutListStyle = style({\n    width: '100%',\n    display: 'table',\n    borderCollapse: 'collapse'\n});\nexport function ShortcutListContainerStyle(topNavHeight, widgetHeight) {\n    return style({\n        overflowY: 'scroll',\n        height: widgetHeight - topNavHeight,\n        borderTop: 'solid',\n        borderTopColor: 'var(--jp-border-color1)',\n        borderTopWidth: 'var(--jp-border-width)'\n    });\n}\n//# sourceMappingURL=ShortcutListStyle.js.map","import { style } from 'typestyle';\nexport const CellStyle = style({\n    padding: '6px 12px',\n    display: 'table-cell',\n    width: '20%',\n    verticalAlign: 'middle'\n});\nexport const ShortcutCellStyle = style({\n    display: 'flex',\n    minWidth: '100px',\n    flexWrap: 'wrap'\n});\nexport const EmptyShortcutCellStyle = style({\n    height: '32px',\n    $nest: {\n        '& #add-link': {}\n    }\n});\nexport const SingleShortcutCellStyle = style({});\nexport const RowStyle = style({\n    padding: '10px',\n    width: '100%',\n    display: 'table-row',\n    borderBottom: 'solid',\n    borderBottomColor: 'var(--jp-border-color1)',\n    borderBottomWidth: 'var(--jp-border-width)',\n    verticalAlign: 'middle',\n    backgroundColor: 'var(--jp-layout-color0)',\n    $nest: {\n        '&:hover #shortcut-keys': {\n            borderColor: 'var(--jp-border-color1)',\n            background: 'var(--jp-layout-color2)'\n        },\n        '&:hover #add-link': {\n            display: 'block'\n        },\n        '&:hover #or': {\n            display: 'block'\n        }\n    }\n});\nfunction getMarginLeft(showSelectors, errorSize) {\n    if (errorSize === 0 /* Regular */) {\n        return showSelectors ? '20%' : '25%';\n    }\n    else {\n        return '0';\n    }\n}\nexport function ConflictContainerStyle(showSelectors, errorSize) {\n    return style({\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: '6px 12px',\n        marginLeft: getMarginLeft(showSelectors, errorSize)\n    });\n}\nexport const ErrorMessageStyle = style({\n    color: 'var(--jp-error-color1)',\n    marginTop: '9px'\n});\nexport const ErrorButtonStyle = style({\n    lineHeight: '34px',\n    marginLeft: '10px',\n    $nest: {\n        '& button:nth-of-type(1)': {\n            height: '25px',\n            marginRight: '5px',\n            backgroundColor: 'var(--jp-border-color0)',\n            color: 'white',\n            outline: 'none',\n            $nest: {\n                '&:hover': {},\n                '&:active': {\n                    outline: 'none',\n                    border: 'none'\n                },\n                '&focus': {\n                    outline: 'none',\n                    border: 'none'\n                }\n            }\n        },\n        '& button:nth-of-type(2)': {\n            height: '25px',\n            backgroundColor: 'var(--jp-error-color1)',\n            color: 'white',\n            outline: 'none',\n            $nest: {\n                '&:hover': {},\n                '&:active': {\n                    outline: 'none',\n                    border: 'none'\n                },\n                '&focus': {\n                    outline: 'none',\n                    border: 'none'\n                }\n            }\n        }\n    }\n});\nexport const ShortcutContainerStyle = style({\n    display: 'flex',\n    flexWrap: 'wrap',\n    $nest: {\n        '&:hover #shortcut-keys': {\n            borderColor: 'var(--jp-border-color3)',\n            background: 'var(--jp-layout-color3)'\n        }\n    }\n});\nexport const ShortcutKeysContainerStyle = style({\n    fontSize: 'var(--jp-code-font-size)',\n    fontFamily: 'var(--jp-ui-font-family)',\n    display: 'flex'\n});\nexport const ShortcutKeysStyle = style({\n    borderWidth: 'var(--jp-border-width)',\n    borderColor: 'var(--jp-layout-color0)',\n    background: 'var(--jp-layout-color0)',\n    padding: '5px 6px',\n    borderRadius: 'var(--jp-border-radius)',\n    margin: '3px 0'\n});\nexport const OrStyle = style({\n    marginRight: '12px',\n    marginLeft: '12px',\n    marginTop: '8px',\n    color: 'var(--jp-content-font-color3)',\n    display: 'none',\n    $nest: {\n        '&:hover': {\n            display: 'block'\n        }\n    }\n});\nexport const OrTwoStyle = style({\n    marginRight: '12px',\n    marginLeft: '12px',\n    marginTop: '8px',\n    color: 'var(--jp-content-font-color3)',\n    display: 'block'\n});\nexport const CommaStyle = style({\n    marginTop: '10px',\n    marginRight: '2px',\n    marginLeft: '2px'\n});\nexport const PlusStyle = style({\n    display: 'none',\n    background: 'var(--jp-brand-color3)',\n    borderColor: 'var(--jp-layout-color0)',\n    borderRadius: 'var(--jp-border-radius)',\n    borderWidth: 'var(--jp-border-width)',\n    margin: '3px 0',\n    padding: '5px 6px',\n    $nest: {\n        '&:hover': {\n            backgroundColor: 'var(--jp-brand-color2)'\n        },\n        '&:active': {\n            backgroundColor: 'var(--jp-brand-color2)'\n        }\n    }\n});\nexport const ResetStyle = style({\n    color: 'var(--jp-brand-color2)',\n    paddingLeft: '10px',\n    $nest: {\n        '&:hover': {\n            color: 'var(--jp-brand-color1)'\n        }\n    }\n});\nexport const SourceCellStyle = style({\n    display: 'inline-block'\n});\n//# sourceMappingURL=ShortcutItemStyle.js.map","import { keyframes, style } from 'typestyle';\nexport const InputBoxStyle = style({\n    display: 'inline-flex',\n    paddingTop: '2px'\n});\nexport const InputBoxNewStyle = style({\n    marginLeft: '10px'\n});\nexport const InputBoxHiddenStyle = style({\n    display: 'hidden'\n});\nconst slideAnimation = keyframes({\n    from: {\n        width: '0',\n        left: '0'\n    },\n    to: {\n        width: '120px',\n        left: '0'\n    }\n});\nexport const InputStyle = style({\n    animationDuration: '0.5s',\n    animationTimingFunction: 'ease-out',\n    animationName: slideAnimation,\n    borderWidth: 'var(--jp-border-width)',\n    borderColor: 'var(--jp-border-color3)',\n    borderStyle: 'solid',\n    backgroundColor: 'var(--jp-layout-color0)',\n    marginLeft: 'auto',\n    paddingLeft: '10px',\n    width: '120px',\n    height: '25px',\n    lineHeight: '25px',\n    display: 'block',\n    $nest: {\n        '&:focus': {\n            outline: 'none',\n            color: 'var(--jp-content-font-color1)',\n            borderColor: 'var(--jp-brand-color2)'\n        }\n    }\n});\nexport const InputUnavailableStyle = style({\n    $nest: {\n        '&:focus': {\n            borderColor: 'var(--jp-error-color2)'\n        }\n    }\n});\nexport const InputTextStyle = style({\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    margin: '0',\n    marginTop: '4px',\n    padding: '0 5px',\n    height: '17px',\n    lineHeight: '17px',\n    width: 'fit-content'\n});\nexport const InputSelectedTextStyle = style({\n    backgroundColor: 'var(--jp-brand-color3)',\n    overflow: 'hidden'\n});\nexport const InputWaitingStyle = style({\n    color: 'var(--jp-content-font-color3)'\n});\nexport const SubmitStyle = style({\n    background: 'var(--jp-brand-color1)',\n    borderRadius: '0px',\n    border: 'none',\n    color: 'var(--jp-layout-color0)',\n    fontFamily: 'var(--jp-ui-font-family)',\n    display: 'block',\n    height: '27px',\n    backgroundImage: 'var( --jp-icon-checkmark-white )',\n    backgroundRepeat: 'no-repeat',\n    width: '26px',\n    $nest: {\n        '&:focus': {\n            outline: 'none'\n        }\n    }\n});\nexport const SubmitNonFunctionalStyle = style({\n    backgroundImage: 'var( --jp-icon-checkmark-white )',\n    background: 'var(--jp-layout-color3)'\n});\nexport const SubmitConflictStyle = style({\n    background: 'var(--jp-error-color1)',\n    backgroundImage: 'var(--jp-icon-error-white )',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '20px',\n    backgroundPositionX: '2px',\n    backgroundPositionY: '2px',\n    border: 'none'\n});\n//# sourceMappingURL=ShortcutInputStyle.js.map","import * as React from 'react';\nimport { classes } from 'typestyle';\nimport { EN_US } from '@lumino/keyboard';\nimport { InputBoxHiddenStyle, InputBoxNewStyle, InputBoxStyle, InputSelectedTextStyle, InputStyle, InputTextStyle, InputUnavailableStyle, InputWaitingStyle, SubmitConflictStyle, SubmitNonFunctionalStyle, SubmitStyle } from '../componentStyle/ShortcutInputStyle';\n/** Object for shortcut items */\nexport class ShortcutObject {\n    constructor() {\n        this.commandName = '';\n        this.label = '';\n        this.keys = {};\n        this.source = '';\n        this.selector = '';\n        this.category = '';\n        this.id = '';\n        this.numberOfShortcuts = 0;\n        this.hasConflict = false;\n    }\n    get(sortCriteria) {\n        if (sortCriteria === 'label') {\n            return this.label;\n        }\n        else if (sortCriteria === 'selector') {\n            return this.selector;\n        }\n        else if (sortCriteria === 'category') {\n            return this.category;\n        }\n        else if (sortCriteria === 'source') {\n            return this.source;\n        }\n        else {\n            return '';\n        }\n    }\n}\n/** Object for conflicting shortcut error messages */\nexport class ErrorObject extends ShortcutObject {\n    constructor() {\n        super();\n        this.takenBy = new TakenByObject();\n    }\n}\n/** Object for showing which shortcut conflicts with the new one */\nexport class TakenByObject {\n    constructor(shortcut) {\n        if (shortcut) {\n            this.takenBy = shortcut;\n            this.takenByKey = '';\n            this.takenByLabel = shortcut.category + ': ' + shortcut.label;\n            this.id = shortcut.commandName + '_' + shortcut.selector;\n        }\n        else {\n            this.takenBy = new ShortcutObject();\n            this.takenByKey = '';\n            this.takenByLabel = '';\n            this.id = '';\n        }\n    }\n}\nexport class ShortcutInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdate = () => {\n            let keys = this.state.keys;\n            keys.push(this.state.currentChain);\n            this.setState({ keys: keys });\n            this.props.handleUpdate(this.props.shortcut, this.state.keys);\n        };\n        this.handleOverwrite = async () => {\n            this.props\n                .deleteShortcut(this.state.takenByObject.takenBy, this.state.takenByObject.takenByKey)\n                .then(this.handleUpdate());\n        };\n        this.handleReplace = async () => {\n            let keys = this.state.keys;\n            keys.push(this.state.currentChain);\n            this.props.toggleInput();\n            await this.props.deleteShortcut(this.props.shortcut, this.props.shortcutId);\n            this.props.handleUpdate(this.props.shortcut, keys);\n        };\n        /** Parse user input for chained shortcuts */\n        this.parseChaining = (event, value, userInput, keys, currentChain) => {\n            let key = EN_US.keyForKeydownEvent(event.nativeEvent);\n            const modKeys = ['Shift', 'Control', 'Alt', 'Meta', 'Ctrl', 'Accel'];\n            if (event.key === 'Backspace') {\n                userInput = '';\n                value = '';\n                keys = [];\n                currentChain = '';\n                this.setState({\n                    value: value,\n                    userInput: userInput,\n                    keys: keys,\n                    currentChain: currentChain\n                });\n            }\n            else if (event.key !== 'CapsLock') {\n                const lastKey = userInput\n                    .substr(userInput.lastIndexOf(' ') + 1, userInput.length)\n                    .trim();\n                /** if last key was not a modefier then there is a chain */\n                if (modKeys.lastIndexOf(lastKey) === -1 && lastKey != '') {\n                    userInput = userInput + ',';\n                    keys.push(currentChain);\n                    currentChain = '';\n                    /** check if a modefier key was held down through chain */\n                    if (event.ctrlKey && event.key != 'Control') {\n                        userInput = (userInput + ' Ctrl').trim();\n                        currentChain = (currentChain + ' Ctrl').trim();\n                    }\n                    if (event.metaKey && event.key != 'Meta') {\n                        userInput = (userInput + ' Accel').trim();\n                        currentChain = (currentChain + ' Accel').trim();\n                    }\n                    if (event.altKey && event.key != 'Alt') {\n                        userInput = (userInput + ' Alt').trim();\n                        currentChain = (currentChain + ' Alt').trim();\n                    }\n                    if (event.shiftKey && event.key != 'Shift') {\n                        userInput = (userInput + ' Shift').trim();\n                        currentChain = (currentChain + ' Shift').trim();\n                    }\n                    /** if not a modefier key, add to user input and current chain */\n                    if (modKeys.lastIndexOf(event.key) === -1) {\n                        userInput = (userInput + ' ' + key).trim();\n                        currentChain = (currentChain + ' ' + key).trim();\n                        /** if a modefier key, add to user input and current chain */\n                    }\n                    else {\n                        if (event.key === 'Meta') {\n                            userInput = (userInput + ' Accel').trim();\n                            currentChain = (currentChain + ' Accel').trim();\n                        }\n                        else if (event.key === 'Control') {\n                            userInput = (userInput + ' Ctrl').trim();\n                            currentChain = (currentChain + ' Ctrl').trim();\n                        }\n                        else if (event.key === 'Shift') {\n                            userInput = (userInput + ' Shift').trim();\n                            currentChain = (currentChain + ' Shift').trim();\n                        }\n                        else if (event.key === 'Alt') {\n                            userInput = (userInput + ' Alt').trim();\n                            currentChain = (currentChain + ' Alt').trim();\n                        }\n                        else {\n                            userInput = (userInput + ' ' + event.key).trim();\n                            currentChain = (currentChain + ' ' + event.key).trim();\n                        }\n                    }\n                    /** if not a chain, add the key to user input and current chain */\n                }\n                else {\n                    /** if modefier key, rename */\n                    if (event.key === 'Control') {\n                        userInput = (userInput + ' Ctrl').trim();\n                        currentChain = (currentChain + ' Ctrl').trim();\n                    }\n                    else if (event.key === 'Meta') {\n                        userInput = (userInput + ' Accel').trim();\n                        currentChain = (currentChain + ' Accel').trim();\n                    }\n                    else if (event.key === 'Shift') {\n                        userInput = (userInput + ' Shift').trim();\n                        currentChain = (currentChain + ' Shift').trim();\n                    }\n                    else if (event.key === 'Alt') {\n                        userInput = (userInput + ' Alt').trim();\n                        currentChain = (currentChain + ' Alt').trim();\n                        /** if not a modefier key, add it regularly */\n                    }\n                    else {\n                        userInput = (userInput + ' ' + key).trim();\n                        currentChain = (currentChain + ' ' + key).trim();\n                    }\n                }\n            }\n            /** update state of keys and currentChain */\n            this.setState({\n                keys: keys,\n                currentChain: currentChain\n            });\n            return [userInput, keys, currentChain];\n        };\n        /**\n         * Check if shorcut being typed will work\n         * (does not end with ctrl, alt, command, or shift)\n         * */\n        this.checkNonFunctional = (shortcut) => {\n            const dontEnd = ['Ctrl', 'Alt', 'Accel', 'Shift'];\n            const shortcutKeys = this.state.currentChain.split(' ');\n            const last = shortcutKeys[shortcutKeys.length - 1];\n            this.setState({\n                isFunctional: !(dontEnd.indexOf(last) !== -1)\n            });\n            return dontEnd.indexOf(last) !== -1;\n        };\n        /** Check if shortcut being typed is already taken */\n        this.checkShortcutAvailability = (userInput, keys, currentChain) => {\n            /** First, check whole shortcut */\n            let isAvailable = Object.keys(this.props.keyBindingsUsed).indexOf(keys.join(' ') + currentChain + '_' + this.props.shortcut.selector) === -1 || userInput === '';\n            let takenByObject = new TakenByObject();\n            if (isAvailable) {\n                /** Next, check each piece of a chain */\n                for (let binding of keys) {\n                    if (Object.keys(this.props.keyBindingsUsed).indexOf(binding + '_' + this.props.shortcut.selector) !== -1 &&\n                        binding !== '') {\n                        isAvailable = false;\n                        takenByObject = this.props.keyBindingsUsed[binding + '_' + this.props.shortcut.selector];\n                        break;\n                    }\n                }\n                /** Check current chain */\n                if (isAvailable &&\n                    Object.keys(this.props.keyBindingsUsed).indexOf(currentChain + '_' + this.props.shortcut.selector) !== -1 &&\n                    currentChain !== '') {\n                    isAvailable = false;\n                    takenByObject = this.props.keyBindingsUsed[currentChain + '_' + this.props.shortcut.selector];\n                }\n                /** If unavailable set takenByObject */\n            }\n            else {\n                takenByObject = this.props.keyBindingsUsed[keys.join(' ') + currentChain + '_' + this.props.shortcut.selector];\n            }\n            /** allow to set shortcut to what it initially was if replacing */\n            if (!isAvailable) {\n                if (takenByObject.takenBy.id === this.props.shortcut.id &&\n                    this.props.newOrReplace === 'replace') {\n                    isAvailable = true;\n                    takenByObject = new TakenByObject();\n                }\n            }\n            this.setState({ isAvailable: isAvailable });\n            return takenByObject;\n        };\n        /** Parse and normalize user input */\n        this.handleInput = (event) => {\n            event.preventDefault();\n            this.setState({ selected: false });\n            const parsed = this.parseChaining(event, this.state.value, this.state.userInput, this.state.keys, this.state.currentChain);\n            const userInput = parsed[0];\n            const keys = parsed[1];\n            const currentChain = parsed[2];\n            const value = this.props.toSymbols(userInput);\n            let takenByObject = this.checkShortcutAvailability(userInput, keys, currentChain);\n            this.checkConflict(takenByObject, keys);\n            this.setState({\n                value: value,\n                userInput: userInput,\n                takenByObject: takenByObject,\n                keys: keys,\n                currentChain: currentChain\n            }, () => this.checkNonFunctional(this.state.userInput));\n        };\n        this.handleBlur = (event) => {\n            if (event.relatedTarget === null ||\n                (event.relatedTarget.id !== 'no-blur' &&\n                    event.relatedTarget.id !== 'overwrite')) {\n                this.props.toggleInput();\n                this.setState({\n                    value: '',\n                    userInput: ''\n                });\n                this.props.clearConflicts();\n            }\n        };\n        this.state = {\n            value: this.props.placeholder,\n            userInput: '',\n            isAvailable: true,\n            isFunctional: this.props.newOrReplace === 'replace',\n            takenByObject: new TakenByObject(),\n            keys: new Array(),\n            currentChain: '',\n            selected: true\n        };\n    }\n    checkConflict(takenByObject, keys) {\n        if (takenByObject.id !== '' &&\n            takenByObject.takenBy.id !== this.props.shortcut.id) {\n            this.props.sortConflict(this.props.shortcut, takenByObject, takenByObject.takenByLabel, '');\n        }\n        else {\n            this.props.clearConflicts();\n        }\n    }\n    render() {\n        const trans = this.props.translator.load('jupyterlab');\n        let inputClassName = InputStyle;\n        if (!this.state.isAvailable) {\n            inputClassName = classes(inputClassName, InputUnavailableStyle);\n        }\n        return (React.createElement(\"div\", { className: this.props.displayInput\n                ? this.props.newOrReplace === 'new'\n                    ? classes(InputBoxStyle, InputBoxNewStyle)\n                    : InputBoxStyle\n                : InputBoxHiddenStyle, onBlur: event => this.handleBlur(event) },\n            React.createElement(\"div\", { tabIndex: 0, id: \"no-blur\", className: inputClassName, onKeyDown: this.handleInput, ref: input => input && input.focus() },\n                React.createElement(\"p\", { className: this.state.selected && this.props.newOrReplace === 'replace'\n                        ? classes(InputTextStyle, InputSelectedTextStyle)\n                        : this.state.value === ''\n                            ? classes(InputTextStyle, InputWaitingStyle)\n                            : InputTextStyle }, this.state.value === ''\n                    ? trans.__('press keys')\n                    : this.state.value)),\n            React.createElement(\"button\", { className: !this.state.isFunctional\n                    ? classes(SubmitStyle, SubmitNonFunctionalStyle)\n                    : !this.state.isAvailable\n                        ? classes(SubmitStyle, SubmitConflictStyle)\n                        : classes(SubmitStyle), id: 'no-blur', disabled: !this.state.isAvailable || !this.state.isFunctional, onClick: () => {\n                    if (this.props.newOrReplace === 'new') {\n                        this.handleUpdate();\n                        this.setState({\n                            value: '',\n                            keys: [],\n                            currentChain: ''\n                        });\n                        this.props.toggleInput();\n                    }\n                    else {\n                        /** don't replace if field has not been edited */\n                        if (this.state.selected) {\n                            this.props.toggleInput();\n                            this.setState({\n                                value: '',\n                                userInput: ''\n                            });\n                            this.props.clearConflicts();\n                        }\n                        else {\n                            void this.handleReplace();\n                        }\n                    }\n                } }),\n            !this.state.isAvailable && (React.createElement(\"button\", { hidden: true, id: \"overwrite\", onClick: () => {\n                    void this.handleOverwrite();\n                    this.props.clearConflicts();\n                    this.props.toggleInput();\n                } }, trans.__('Overwrite')))));\n    }\n}\n//# sourceMappingURL=ShortcutInput.js.map","import { Platform } from '@lumino/domutils';\nimport * as React from 'react';\nimport { classes } from 'typestyle';\nimport { CellStyle, CommaStyle, ConflictContainerStyle, EmptyShortcutCellStyle, ErrorButtonStyle, ErrorMessageStyle, OrStyle, OrTwoStyle, PlusStyle, ResetStyle, RowStyle, ShortcutCellStyle, ShortcutContainerStyle, ShortcutKeysContainerStyle, ShortcutKeysStyle, SingleShortcutCellStyle, SourceCellStyle } from '../componentStyle/ShortcutItemStyle';\nimport { ShortcutInput } from './ShortcutInput';\nvar ShortCutLocation;\n(function (ShortCutLocation) {\n    ShortCutLocation[ShortCutLocation[\"Left\"] = 0] = \"Left\";\n    ShortCutLocation[ShortCutLocation[\"Right\"] = 1] = \"Right\";\n})(ShortCutLocation || (ShortCutLocation = {}));\n/** Describe commands that are used by shortcuts */\nfunction getCommands(trans) {\n    return {\n        shortcutEditLeft: {\n            commandId: 'shortcutui:EditLeft',\n            label: trans.__('Edit First'),\n            caption: trans.__('Edit existing shortcut')\n        },\n        shortcutEditRight: {\n            commandId: 'shortcutui:EditRight',\n            label: trans.__('Edit Second'),\n            caption: trans.__('Edit existing shortcut')\n        },\n        shortcutEdit: {\n            commandId: 'shortcutui:Edit',\n            label: trans.__('Edit'),\n            caption: trans.__('Edit existing shortcut')\n        },\n        shortcutAddNew: {\n            commandId: 'shortcutui:AddNew',\n            label: trans.__('Add'),\n            caption: trans.__('Add new shortcut')\n        },\n        shortcutAddAnother: {\n            commandId: 'shortcutui:AddAnother',\n            label: trans.__('Add'),\n            caption: trans.__('Add another shortcut')\n        },\n        shortcutReset: {\n            commandId: 'shortcutui:Reset',\n            label: trans.__('Reset'),\n            caption: trans.__('Reset shortcut back to default')\n        }\n    };\n}\n/** React component for each command shortcut item */\nexport class ShortcutItem extends React.Component {\n    constructor(props) {\n        super(props);\n        /** Toggle display state of input box */\n        this.toggleInputNew = () => {\n            this.setState({\n                displayNewInput: !this.state.displayNewInput\n            });\n        };\n        this.toggleInputReplaceLeft = () => {\n            this.setState({\n                displayReplaceInputLeft: !this.state.displayReplaceInputLeft\n            });\n        };\n        this.toggleInputReplaceRight = () => {\n            this.setState({\n                displayReplaceInputRight: !this.state.displayReplaceInputRight\n            });\n        };\n        this.addCommandIfNeeded = (command, action) => {\n            const key = this.props.shortcut.commandName + '_' + this.props.shortcut.selector;\n            if (!this.props.external.hasCommand(command.commandId + key)) {\n                this.props.external.addCommand(command.commandId + key, {\n                    label: command.label,\n                    caption: command.caption,\n                    execute: action\n                });\n            }\n        };\n        this.handleRightClick = (e) => {\n            this.addCommandIfNeeded(this._commands.shortcutEdit, () => this.toggleInputReplaceLeft());\n            this.addCommandIfNeeded(this._commands.shortcutEditLeft, () => this.toggleInputReplaceLeft());\n            this.addCommandIfNeeded(this._commands.shortcutEditRight, () => this.toggleInputReplaceRight());\n            this.addCommandIfNeeded(this._commands.shortcutAddNew, () => this.toggleInputNew());\n            this.addCommandIfNeeded(this._commands.shortcutAddAnother, () => this.toggleInputNew());\n            this.addCommandIfNeeded(this._commands.shortcutReset, () => this.props.resetShortcut(this.props.shortcut));\n            const key = this.props.shortcut.commandName + '_' + this.props.shortcut.selector;\n            this.setState({\n                numShortcuts: Object.keys(this.props.shortcut.keys).filter(key => this.props.shortcut.keys[key][0] !== '').length\n            }, () => {\n                let commandList = [];\n                if (this.state.numShortcuts == 2) {\n                    commandList = commandList.concat([\n                        this._commands.shortcutEditLeft.commandId + key,\n                        this._commands.shortcutEditRight.commandId + key\n                    ]);\n                }\n                else if (this.state.numShortcuts == 1) {\n                    commandList = commandList.concat([\n                        this._commands.shortcutEdit.commandId + key,\n                        this._commands.shortcutAddAnother.commandId + key\n                    ]);\n                }\n                else {\n                    commandList = commandList.concat([\n                        this._commands.shortcutAddNew.commandId + key\n                    ]);\n                }\n                if (this.props.shortcut.source === 'Custom') {\n                    commandList = commandList.concat([\n                        this._commands.shortcutReset.commandId + key\n                    ]);\n                }\n                this.props.contextMenu(e, commandList);\n            });\n        };\n        /** Transform special key names into unicode characters */\n        this.toSymbols = (value) => {\n            return value.split(' ').reduce((result, key) => {\n                if (key === 'Ctrl') {\n                    return (result + ' ⌃').trim();\n                }\n                else if (key === 'Alt') {\n                    return (result + ' ⌥').trim();\n                }\n                else if (key === 'Shift') {\n                    return (result + ' ⇧').trim();\n                }\n                else if (key === 'Accel' && Platform.IS_MAC) {\n                    return (result + ' ⌘').trim();\n                }\n                else if (key === 'Accel') {\n                    return (result + ' ⌃').trim();\n                }\n                else {\n                    return (result + ' ' + key).trim();\n                }\n            }, '');\n        };\n        this._commands = getCommands(props.external.translator.load('jupyterlab'));\n        this.state = {\n            displayNewInput: false,\n            displayReplaceInputLeft: false,\n            displayReplaceInputRight: false,\n            numShortcuts: Object.keys(this.props.shortcut.keys).filter(key => this.props.shortcut.keys[key][0] !== '').length\n        };\n    }\n    getErrorRow() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"div\", { className: classes(RowStyle) },\n            React.createElement(\"div\", { className: ConflictContainerStyle(this.props.showSelectors, this.props.errorSize) },\n                React.createElement(\"div\", { className: ErrorMessageStyle }, trans.__('Shortcut already in use by %1. Overwrite it?', this.props.shortcut.takenBy.takenByLabel)),\n                React.createElement(\"div\", { className: ErrorButtonStyle },\n                    React.createElement(\"button\", null, trans.__('Cancel')),\n                    React.createElement(\"button\", { id: \"no-blur\", onClick: () => {\n                            var _a;\n                            (_a = document.getElementById('overwrite')) === null || _a === void 0 ? void 0 : _a.click();\n                        } }, trans.__('Overwrite'))))));\n    }\n    getCategoryCell() {\n        return React.createElement(\"div\", { className: CellStyle }, this.props.shortcut.category);\n    }\n    getLabelCell() {\n        return (React.createElement(\"div\", { className: CellStyle },\n            React.createElement(\"div\", { className: \"jp-label\" }, this.props.shortcut.label)));\n    }\n    getResetShortCutLink() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"a\", { className: ResetStyle, onClick: () => this.props.resetShortcut(this.props.shortcut) }, trans.__('Reset')));\n    }\n    getSourceCell() {\n        return (React.createElement(\"div\", { className: CellStyle },\n            React.createElement(\"div\", { className: SourceCellStyle }, this.props.shortcut.source),\n            this.props.shortcut.source === 'Custom' && this.getResetShortCutLink()));\n    }\n    getOptionalSelectorCell() {\n        return this.props.showSelectors ? (React.createElement(\"div\", { className: CellStyle },\n            React.createElement(\"div\", { className: \"jp-selector\" }, this.props.shortcut.selector))) : (React.createElement(\"div\", null));\n    }\n    getClassNameForShortCuts(nonEmptyKeys) {\n        return nonEmptyKeys.length === 0\n            ? classes(ShortcutCellStyle, EmptyShortcutCellStyle)\n            : nonEmptyKeys.length === 1\n                ? classes(ShortcutCellStyle, SingleShortcutCellStyle)\n                : ShortcutCellStyle;\n    }\n    getToggleInputReplaceMethod(location) {\n        switch (location) {\n            case ShortCutLocation.Left:\n                return this.toggleInputReplaceLeft;\n            case ShortCutLocation.Right:\n                return this.toggleInputReplaceRight;\n        }\n    }\n    getDisplayReplaceInput(location) {\n        switch (location) {\n            case ShortCutLocation.Left:\n                return this.state.displayReplaceInputLeft;\n            case ShortCutLocation.Right:\n                return this.state.displayReplaceInputRight;\n        }\n    }\n    getOrDiplayIfNeeded(nonEmptyKeys) {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"div\", { className: nonEmptyKeys.length == 2 || this.state.displayNewInput\n                ? OrTwoStyle\n                : OrStyle, id: nonEmptyKeys.length == 2\n                ? 'secondor'\n                : this.state.displayReplaceInputLeft\n                    ? 'noor'\n                    : 'or' }, trans.__('or')));\n    }\n    getShortCutAsInput(key, location) {\n        return (React.createElement(ShortcutInput, { handleUpdate: this.props.handleUpdate, deleteShortcut: this.props.deleteShortcut, toggleInput: this.getToggleInputReplaceMethod(location), shortcut: this.props.shortcut, shortcutId: key, toSymbols: this.toSymbols, keyBindingsUsed: this.props.keyBindingsUsed, sortConflict: this.props.sortConflict, clearConflicts: this.props.clearConflicts, displayInput: this.getDisplayReplaceInput(location), newOrReplace: 'replace', placeholder: this.toSymbols(this.props.shortcut.keys[key].join(', ')), translator: this.props.external.translator }));\n    }\n    getShortCutForDisplayOnly(key) {\n        return this.props.shortcut.keys[key].map((keyBinding, index) => (React.createElement(\"div\", { className: ShortcutKeysContainerStyle, key: index },\n            React.createElement(\"div\", { className: ShortcutKeysStyle, id: 'shortcut-keys' }, this.toSymbols(keyBinding)),\n            index + 1 < this.props.shortcut.keys[key].length ? (React.createElement(\"div\", { className: CommaStyle }, \",\")) : null)));\n    }\n    isLocationBeingEdited(location) {\n        return ((location === ShortCutLocation.Left &&\n            this.state.displayReplaceInputLeft) ||\n            (location === ShortCutLocation.Right &&\n                this.state.displayReplaceInputRight));\n    }\n    getLocationFromIndex(index) {\n        return index === 0 ? ShortCutLocation.Left : ShortCutLocation.Right;\n    }\n    getDivForKey(index, key, nonEmptyKeys) {\n        const location = this.getLocationFromIndex(index);\n        return (React.createElement(\"div\", { className: ShortcutContainerStyle, key: this.props.shortcut.id + '_' + index, onClick: this.getToggleInputReplaceMethod(location) },\n            this.isLocationBeingEdited(location)\n                ? this.getShortCutAsInput(key, location)\n                : this.getShortCutForDisplayOnly(key),\n            location === ShortCutLocation.Left &&\n                this.getOrDiplayIfNeeded(nonEmptyKeys)));\n    }\n    getAddLink() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"a\", { className: !this.state.displayNewInput ? PlusStyle : '', onClick: () => {\n                this.toggleInputNew(), this.props.clearConflicts();\n            }, id: \"add-link\" }, trans.__('Add')));\n    }\n    getInputBoxWhenToggled() {\n        return this.state.displayNewInput ? (React.createElement(ShortcutInput, { handleUpdate: this.props.handleUpdate, deleteShortcut: this.props.deleteShortcut, toggleInput: this.toggleInputNew, shortcut: this.props.shortcut, shortcutId: \"\", toSymbols: this.toSymbols, keyBindingsUsed: this.props.keyBindingsUsed, sortConflict: this.props.sortConflict, clearConflicts: this.props.clearConflicts, displayInput: this.state.displayNewInput, newOrReplace: 'new', placeholder: '', translator: this.props.external.translator })) : (React.createElement(\"div\", null));\n    }\n    getShortCutsCell(nonEmptyKeys) {\n        return (React.createElement(\"div\", { className: CellStyle },\n            React.createElement(\"div\", { className: this.getClassNameForShortCuts(nonEmptyKeys) },\n                nonEmptyKeys.map((key, index) => this.getDivForKey(index, key, nonEmptyKeys)),\n                nonEmptyKeys.length === 1 &&\n                    !this.state.displayNewInput &&\n                    !this.state.displayReplaceInputLeft &&\n                    this.getAddLink(),\n                nonEmptyKeys.length === 0 &&\n                    !this.state.displayNewInput &&\n                    this.getAddLink(),\n                this.getInputBoxWhenToggled())));\n    }\n    render() {\n        const nonEmptyKeys = Object.keys(this.props.shortcut.keys).filter((key) => this.props.shortcut.keys[key][0] !== '');\n        if (this.props.shortcut.id === 'error_row') {\n            return this.getErrorRow();\n        }\n        else {\n            return (React.createElement(\"div\", { className: RowStyle, onContextMenu: e => {\n                    e.persist();\n                    this.handleRightClick(e);\n                } },\n                this.getCategoryCell(),\n                this.getLabelCell(),\n                this.getShortCutsCell(nonEmptyKeys),\n                this.getSourceCell(),\n                this.getOptionalSelectorCell()));\n        }\n    }\n}\n//# sourceMappingURL=ShortcutItem.js.map","import * as React from 'react';\nimport { ShortcutListContainerStyle, ShortcutListStyle } from '../componentStyle/ShortcutListStyle';\nimport { ShortcutItem } from './ShortcutItem';\nconst TOPNAV_HEIGHT = 115;\n/** React component for list of shortcuts */\nexport class ShortcutList extends React.Component {\n    render() {\n        return (React.createElement(\"div\", { className: ShortcutListContainerStyle(TOPNAV_HEIGHT, this.props.height), id: \"shortcutListContainer\" },\n            React.createElement(\"div\", { className: ShortcutListStyle }, this.props.shortcuts.map((shortcut) => {\n                return (React.createElement(ShortcutItem, { key: shortcut.commandName + '_' + shortcut.selector, resetShortcut: this.props.resetShortcut, shortcut: shortcut, handleUpdate: this.props.handleUpdate, deleteShortcut: this.props.deleteShortcut, showSelectors: this.props.showSelectors, keyBindingsUsed: this.props.keyBindingsUsed, sortConflict: this.props.sortConflict, clearConflicts: this.props.clearConflicts, errorSize: this.props.errorSize, contextMenu: this.props.contextMenu, external: this.props.external }));\n            }))));\n    }\n}\n//# sourceMappingURL=ShortcutList.js.map","import { style } from 'typestyle';\nexport const TopStyle = style({\n    display: 'block'\n});\nexport const TopNavStyle = style({\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    fontSize: 'var(--jp-ui-font-size1)',\n    backgroundColor: 'var(--jp-layout-color0)',\n    zIndex: 1,\n    height: '56px'\n});\nexport const SymbolsStyle = style({\n    width: '15%',\n    display: 'table',\n    paddingLeft: '12px',\n    lineHeight: '24px',\n    paddingTop: '5px'\n});\nexport const SymbolsSmallStyle = style({\n    lineHeight: '14px'\n});\nexport const SymbolsRowStyle = style({\n    justifyContent: 'center',\n    marginBottom: '8px',\n    display: 'table-row',\n    $nest: {\n        '& div': {\n            margin: '0px 10px',\n            fontSize: 'var(--jp-ui-font-size1)',\n            display: 'table-cell'\n        },\n        '& span': {\n            fontSize: 'var(--jp-ui-font-size1)'\n        }\n    }\n});\nexport const SearchContainerStyle = style({\n    width: '60%',\n    textAlign: 'center'\n});\nexport const SearchStyle = style({\n    borderWidth: 'var(--jp-border-width)',\n    borderStyle: 'solid',\n    borderColor: 'var(--jp-layout-color3)',\n    height: '30px',\n    width: '65%',\n    fontSize: 'var(--jp-ui-font-size1)',\n    color: 'var(--jp-ui-font-color0)',\n    paddingLeft: '6px',\n    backgroundColor: 'var(--jp-layout-color1)',\n    backgroundImage: 'var(--jp-icon-search)',\n    backgroundSize: '18px',\n    backgroundPositionY: '6px',\n    backgroundPositionX: '98%',\n    backgroundRepeat: 'no-repeat',\n    marginTop: '8px',\n    outline: 'none',\n    $nest: {\n        '&:focus': {\n            border: 'var(--jp-border-width) solid var(--md-blue-500)',\n            boxShadow: 'inset 0 0 4px var(--md-blue-300)'\n        },\n        '&::placeholder': {\n            color: 'var(--jp-ui-font-color2)'\n        }\n    }\n});\nexport const AdvancedOptionsContainerStyle = style({\n    display: 'contents'\n});\nexport const AdvancedOptionsStyle = style({\n    display: 'block',\n    paddingTop: '5px'\n});\nexport const AdvancedOptionsSmallStyle = style({\n    width: '30%'\n});\nexport const AdvancedOptionsRightStyle = style({\n    marginTop: '8px'\n});\nexport function AdvancedOptionsLinkStyle(size) {\n    if (size === 0 /* Regular */) {\n        return style({\n            color: 'var(--jp-brand-color2)',\n            textDecoration: 'none',\n            marginRight: '15px',\n            $nest: {\n                '&:hover': {\n                    color: 'var(--jp-brand-color1)'\n                },\n                '&:active': {\n                    color: 'var(--jp-brand-color0)'\n                }\n            }\n        });\n    }\n    else {\n        return style({\n            color: 'var(--jp-brand-color2)',\n            textDecoration: 'none',\n            textAlign: 'center',\n            display: 'block',\n            $nest: {\n                '&:hover': {\n                    color: 'var(--jp-brand-color1)'\n                },\n                '&:active': {\n                    color: 'var(--jp-brand-color0)'\n                }\n            }\n        });\n    }\n}\nexport const HeaderRowContainerStyle = style({\n    paddingRight: '14px'\n});\nexport const HeaderRowStyle = style({\n    fontWeight: 'bold',\n    fontSize: 'var(--jp-ui-font-size1)',\n    backgroundColor: 'var(--jp-layout-color0)',\n    width: '100%',\n    zIndex: 1,\n    display: 'table',\n    padding: '10px 0'\n});\nexport const commandIconStyle = style({\n    marginRight: '13px'\n});\nexport const altIconStyle = style({\n    marginLeft: '14px'\n});\nexport const controlIconStyle = style({\n    marginLeft: '8px',\n    marginRight: '16px'\n});\n//# sourceMappingURL=TopNavStyle.js.map","import { style } from 'typestyle';\nexport const HeaderStyle = style({\n    display: 'flex',\n    $nest: {\n        '&:hover div': {\n            fontWeight: 600,\n            color: 'var(--jp-ui-font-color0)'\n        },\n        '&:focus div': {\n            outline: 'none'\n        },\n        '&:active div': {\n            fontWeight: 600,\n            color: 'var(--jp-ui-font-color0)'\n        }\n    }\n});\nexport const CurrentHeaderStyle = style({\n    $nest: {\n        '& div': {\n            color: 'var(--jp-ui-font-color0)',\n            fontWeight: 'bold'\n        }\n    }\n});\nexport const SortButtonStyle = style({\n    transform: 'rotate(180deg)',\n    marginLeft: '10px',\n    color: 'var(--jp-ui-font-color2)',\n    border: 'none',\n    backgroundColor: 'var(--jp-layout-color0)',\n    fontSize: 'var(--jp-ui-font-size1)'\n});\n//# sourceMappingURL=ShortcutTitleItemStyle.js.map","import * as React from 'react';\nimport { classes } from 'typestyle';\nimport { CurrentHeaderStyle, HeaderStyle, SortButtonStyle } from '../componentStyle/ShortcutTitleItemStyle';\nexport class ShortcutTitleItem extends React.Component {\n    render() {\n        return (React.createElement(\"div\", { className: this.props.title.toLowerCase() === this.props.active\n                ? classes(HeaderStyle, CurrentHeaderStyle)\n                : HeaderStyle, onClick: () => this.props.updateSort(this.props.title.toLowerCase()) },\n            this.props.title,\n            React.createElement(\"div\", { className: SortButtonStyle }, \"\\u2303\")));\n    }\n}\n//# sourceMappingURL=ShortcutTitleItem.js.map","import * as React from 'react';\nimport { classes } from 'typestyle';\nimport { CellStyle } from '../componentStyle/ShortcutItemStyle';\nimport { AdvancedOptionsContainerStyle, AdvancedOptionsLinkStyle, AdvancedOptionsSmallStyle, AdvancedOptionsStyle, altIconStyle, commandIconStyle, controlIconStyle, HeaderRowContainerStyle, HeaderRowStyle, SearchContainerStyle, SearchStyle, SymbolsRowStyle, SymbolsSmallStyle, SymbolsStyle, TopNavStyle, TopStyle } from '../componentStyle/TopNavStyle';\nimport { ShortcutTitleItem } from './ShortcutTitleItem';\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.showSelectors = 'shortcutui:showSelectors';\n    CommandIDs.resetAll = 'shortcutui:resetAll';\n})(CommandIDs || (CommandIDs = {}));\nclass Symbols extends React.Component {\n    getRegularSymbols() {\n        return (React.createElement(\"div\", { className: SymbolsStyle },\n            React.createElement(\"div\", { className: SymbolsRowStyle },\n                React.createElement(\"div\", null, \"Cmd \\u2318\"),\n                React.createElement(\"div\", null, \"Alt \\u2325\"),\n                React.createElement(\"div\", null, \"Ctrl \\u2303\"),\n                React.createElement(\"div\", null, \"Shift \\u21E7\"))));\n    }\n    getSmallSymbols() {\n        return (React.createElement(\"div\", { className: classes(SymbolsStyle, SymbolsSmallStyle) },\n            React.createElement(\"div\", { className: SymbolsRowStyle },\n                React.createElement(\"span\", null, \"Cmd \"),\n                React.createElement(\"span\", { className: commandIconStyle }, \"\\u2318\"),\n                React.createElement(\"span\", null, \"Alt \"),\n                React.createElement(\"span\", { className: altIconStyle }, \"\\u2325\")),\n            React.createElement(\"div\", { className: SymbolsRowStyle },\n                React.createElement(\"span\", null, \"Ctrl \"),\n                React.createElement(\"span\", { className: controlIconStyle }, \"\\u2303\"),\n                React.createElement(\"span\", null, \"Shift \"),\n                React.createElement(\"span\", null, \"\\u21E7\"))));\n    }\n    getTinySymbols() {\n        return (React.createElement(\"div\", { className: classes(SymbolsStyle, SymbolsSmallStyle) },\n            React.createElement(\"div\", { className: SymbolsRowStyle },\n                React.createElement(\"span\", null, \"Cmd\"),\n                React.createElement(\"span\", null, \"\\u2318\")),\n            React.createElement(\"div\", { className: SymbolsRowStyle },\n                React.createElement(\"span\", null, \"Alt\"),\n                React.createElement(\"span\", null, \"\\u2325\")),\n            React.createElement(\"div\", { className: SymbolsRowStyle },\n                React.createElement(\"span\", null, \"Ctrl\"),\n                React.createElement(\"span\", null, \"\\u2303\")),\n            React.createElement(\"div\", { className: SymbolsRowStyle },\n                React.createElement(\"span\", null, \"Shift\"),\n                React.createElement(\"span\", null, \"\\u21E7\"))));\n    }\n    render() {\n        switch (this.props.size) {\n            case 0 /* Regular */:\n                return this.getRegularSymbols();\n            case 1 /* Small */:\n                return this.getSmallSymbols();\n            case 2 /* Tiny */:\n                return this.getTinySymbols();\n        }\n    }\n}\nclass AdvancedOptions extends React.Component {\n    render() {\n        const trans = this.props.translator.load('jupyterlab');\n        if (this.props.size === 0 /* Regular */) {\n            return (React.createElement(\"div\", { className: AdvancedOptionsContainerStyle },\n                React.createElement(\"div\", { className: AdvancedOptionsStyle },\n                    React.createElement(\"a\", { className: AdvancedOptionsLinkStyle(this.props.size), onClick: () => this.props.toggleSelectors() }, this.props.showSelectors\n                        ? trans.__('Hide Selectors')\n                        : trans.__('Show Selectors')),\n                    React.createElement(\"a\", { className: classes(AdvancedOptionsLinkStyle(this.props.size)), onClick: () => this.props.resetShortcuts() }, trans.__('Reset All')))));\n        }\n        else {\n            return (React.createElement(\"div\", { className: classes(AdvancedOptionsStyle, AdvancedOptionsSmallStyle) },\n                React.createElement(\"a\", { className: AdvancedOptionsLinkStyle(this.props.size), onClick: () => this.props.toggleSelectors() }, this.props.showSelectors\n                    ? trans.__('Hide Selectors')\n                    : trans.__('Show Selectors')),\n                React.createElement(\"a\", { className: classes(AdvancedOptionsLinkStyle(this.props.size)), onClick: () => this.props.resetShortcuts() }, trans.__('Reset All'))));\n        }\n    }\n}\n/** React component for top navigation */\nexport class TopNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getSize = (width) => {\n            if (width < 730) {\n                return 2 /* Tiny */;\n            }\n            else if (width < 1260) {\n                return 1 /* Small */;\n            }\n            else {\n                return 0 /* Regular */;\n            }\n        };\n        this.addMenuCommands();\n        this.menu = this.props.external.createMenu();\n        this.menu.addItem({ command: CommandIDs.showSelectors });\n        this.menu.addItem({ command: CommandIDs.resetAll });\n    }\n    addMenuCommands() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        if (!this.props.external.hasCommand(CommandIDs.showSelectors)) {\n            this.props.external.addCommand(CommandIDs.showSelectors, {\n                label: trans.__('Toggle Selectors'),\n                caption: trans.__('Toggle command selectors'),\n                execute: () => {\n                    this.props.toggleSelectors();\n                }\n            });\n        }\n        if (!this.props.external.hasCommand(CommandIDs.resetAll)) {\n            this.props.external.addCommand(CommandIDs.resetAll, {\n                label: trans.__('Reset All'),\n                caption: trans.__('Reset all shortcuts'),\n                execute: () => {\n                    this.props.resetShortcuts();\n                }\n            });\n        }\n    }\n    getShortCutTitleItem(title) {\n        return (React.createElement(\"div\", { className: CellStyle },\n            React.createElement(ShortcutTitleItem, { title: title, updateSort: this.props.updateSort, active: this.props.currentSort })));\n    }\n    render() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"div\", { className: TopStyle },\n            React.createElement(\"div\", { className: TopNavStyle },\n                React.createElement(Symbols, { size: this.getSize(this.props.width) }),\n                React.createElement(\"div\", { className: SearchContainerStyle },\n                    React.createElement(\"input\", { onChange: event => this.props.updateSearchQuery(event), className: SearchStyle, placeholder: trans.__('Search') })),\n                React.createElement(AdvancedOptions, { size: this.getSize(this.props.width), toggleSelectors: this.props.toggleSelectors, showSelectors: this.props.showSelectors, resetShortcuts: this.props.resetShortcuts, menu: this.menu, translator: this.props.external.translator })),\n            React.createElement(\"div\", { className: HeaderRowContainerStyle },\n                React.createElement(\"div\", { className: HeaderRowStyle },\n                    this.getShortCutTitleItem(trans.__('Category')),\n                    this.getShortCutTitleItem(trans.__('Command')),\n                    React.createElement(\"div\", { className: CellStyle },\n                        React.createElement(\"div\", { className: \"title-div\" }, trans.__('Shortcut'))),\n                    this.getShortCutTitleItem(trans.__('Source')),\n                    this.props.showSelectors &&\n                        this.getShortCutTitleItem(trans.__('Selectors'))))));\n    }\n}\n//# sourceMappingURL=TopNav.js.map","import { ArrayExt, StringExt } from '@lumino/algorithm';\nimport { ShortcutUIStyle, TopWhitespaceStyle } from '../componentStyle/ShortcutUIStyle';\nimport { ShortcutList } from './ShortcutList';\nimport { TopNav } from './TopNav';\nimport * as React from 'react';\nimport { ErrorObject, ShortcutObject, TakenByObject } from './ShortcutInput';\n/** Normalize the query text for a fuzzy search. */\nfunction normalizeQuery(text) {\n    return text.replace(/\\s+/g, '').toLowerCase();\n}\n/** Perform a fuzzy search on a single command item. */\nfunction fuzzySearch(item, query) {\n    // Create the source text to be searched.\n    const category = item.category.toLowerCase();\n    const label = item['label'].toLowerCase();\n    const source = `${category} ${label}`;\n    // Set up the match score and indices array.\n    let score = Infinity;\n    let indices = null;\n    // The regex for search word boundaries\n    const rgx = /\\b\\w/g;\n    // Search the source by word boundary.\n    // eslint-disable-next-line\n    while (true) {\n        // Find the next word boundary in the source.\n        const rgxMatch = rgx.exec(source);\n        // Break if there is no more source context.\n        if (!rgxMatch) {\n            break;\n        }\n        // Run the string match on the relevant substring.\n        const match = StringExt.matchSumOfDeltas(source, query, rgxMatch.index);\n        // Break if there is no match.\n        if (!match) {\n            break;\n        }\n        // Update the match if the score is better.\n        if (match && match.score <= score) {\n            score = match.score;\n            indices = match.indices;\n        }\n    }\n    // Bail if there was no match.\n    if (!indices || score === Infinity) {\n        return null;\n    }\n    // Compute the pivot index between category and label text.\n    const pivot = category.length + 1;\n    // Find the slice index to separate matched indices.\n    const j = ArrayExt.lowerBound(indices, pivot, (a, b) => a - b);\n    // Extract the matched category and label indices.\n    const categoryIndices = indices.slice(0, j);\n    const labelIndices = indices.slice(j);\n    // Adjust the label indices for the pivot offset.\n    for (let i = 0, n = labelIndices.length; i < n; ++i) {\n        labelIndices[i] -= pivot;\n    }\n    // Handle a pure label match.\n    if (categoryIndices.length === 0) {\n        return {\n            matchType: 0 /* Label */,\n            categoryIndices: null,\n            labelIndices,\n            score,\n            item\n        };\n    }\n    // Handle a pure category match.\n    if (labelIndices.length === 0) {\n        return {\n            matchType: 1 /* Category */,\n            categoryIndices,\n            labelIndices: null,\n            score,\n            item\n        };\n    }\n    // Handle a split match.\n    return {\n        matchType: 2 /* Split */,\n        categoryIndices,\n        labelIndices,\n        score,\n        item\n    };\n}\n/** Perform a fuzzy match on an array of command items. */\nfunction matchItems(items, query) {\n    // Normalize the query text to lower case with no whitespace.\n    query = normalizeQuery(query);\n    // Create the array to hold the scores.\n    let scores = [];\n    // Iterate over the items and match against the query.\n    let itemList = Object.keys(items);\n    for (let i = 0, n = itemList.length; i < n; ++i) {\n        let item = items[itemList[i]];\n        // If the query is empty, all items are matched by default.\n        if (!query) {\n            scores.push({\n                matchType: 3 /* Default */,\n                categoryIndices: null,\n                labelIndices: null,\n                score: 0,\n                item\n            });\n            continue;\n        }\n        // Run the fuzzy search for the item and query.\n        let score = fuzzySearch(item, query);\n        // Ignore the item if it is not a match.\n        if (!score) {\n            continue;\n        }\n        // Add the score to the results.\n        scores.push(score);\n    }\n    // Return the final array of scores.\n    return scores;\n}\n/** Transform SettingRegistry's shortcut list to list of ShortcutObjects */\nfunction getShortcutObjects(external, settings) {\n    const shortcuts = settings.composite.shortcuts;\n    let shortcutObjects = {};\n    shortcuts.forEach((shortcut) => {\n        let key = shortcut.command + '_' + shortcut.selector;\n        if (Object.keys(shortcutObjects).indexOf(key) !== -1) {\n            let currentCount = shortcutObjects[key].numberOfShortcuts;\n            shortcutObjects[key].keys[currentCount] = shortcut.keys;\n            shortcutObjects[key].numberOfShortcuts++;\n        }\n        else {\n            let shortcutObject = new ShortcutObject();\n            shortcutObject.commandName = shortcut.command;\n            let label = external.getLabel(shortcut.command);\n            if (!label) {\n                label = shortcut.command.split(':')[1];\n            }\n            shortcutObject.label = label;\n            shortcutObject.category = shortcut.command.split(':')[0];\n            shortcutObject.keys[0] = shortcut.keys;\n            shortcutObject.selector = shortcut.selector;\n            // TODO needs translation\n            shortcutObject.source = 'Default';\n            shortcutObject.id = key;\n            shortcutObject.numberOfShortcuts = 1;\n            shortcutObjects[key] = shortcutObject;\n        }\n    });\n    // find all the shortcuts that have custom settings\n    const userShortcuts = settings.user.shortcuts;\n    userShortcuts.forEach((userSetting) => {\n        const command = userSetting.command;\n        const selector = userSetting.selector;\n        const keyTo = command + '_' + selector;\n        if (shortcutObjects[keyTo]) {\n            // TODO needs translation\n            shortcutObjects[keyTo].source = 'Custom';\n        }\n    });\n    return shortcutObjects;\n}\n/** Get list of all shortcut keybindings currently in use\n * An object where keys are unique keyBinding_selector and values are shortcut objects **/\nfunction getKeyBindingsUsed(shortcutObjects) {\n    let keyBindingsUsed = {};\n    Object.keys(shortcutObjects).forEach((shortcut) => {\n        Object.keys(shortcutObjects[shortcut].keys).forEach((key) => {\n            const takenBy = new TakenByObject(shortcutObjects[shortcut]);\n            takenBy.takenByKey = key;\n            keyBindingsUsed[shortcutObjects[shortcut].keys[key].join(' ') +\n                '_' +\n                shortcutObjects[shortcut].selector] = takenBy;\n        });\n    });\n    return keyBindingsUsed;\n}\n/** Top level React component for widget */\nexport class ShortcutUI extends React.Component {\n    constructor(props) {\n        super(props);\n        /** Set the current seach query */\n        this.updateSearchQuery = (event) => {\n            this.setState({\n                searchQuery: event.target['value']\n            }, () => this.setState({\n                filteredShortcutList: this.searchFilterShortcuts(this.state.shortcutList)\n            }, () => {\n                this.sortShortcuts();\n            }));\n        };\n        /** Reset all shortcuts to their defaults */\n        this.resetShortcuts = async () => {\n            const settings = await this.props.external.getAllShortCutSettings();\n            for (const key of Object.keys(settings.user)) {\n                await this.props.external.removeShortCut(key);\n            }\n            await this._refreshShortcutList();\n        };\n        /** Set new shortcut for command, refresh state */\n        this.handleUpdate = async (shortcutObject, keys) => {\n            const settings = await this.props.external.getAllShortCutSettings();\n            const userShortcuts = settings.user.shortcuts;\n            const newUserShortcuts = [];\n            let found = false;\n            for (let shortcut of userShortcuts) {\n                if (shortcut['command'] === shortcutObject.commandName &&\n                    shortcut['selector'] === shortcutObject.selector) {\n                    newUserShortcuts.push({\n                        command: shortcut['command'],\n                        selector: shortcut['selector'],\n                        keys: keys\n                    });\n                    found = true;\n                }\n                else {\n                    newUserShortcuts.push(shortcut);\n                }\n            }\n            if (!found) {\n                newUserShortcuts.push({\n                    command: shortcutObject.commandName,\n                    selector: shortcutObject.selector,\n                    keys: keys\n                });\n            }\n            await settings.set('shortcuts', newUserShortcuts);\n            await this._refreshShortcutList();\n        };\n        /** Delete shortcut for command, refresh state */\n        this.deleteShortcut = async (shortcutObject, shortcutId) => {\n            await this.handleUpdate(shortcutObject, ['']);\n            await this._refreshShortcutList();\n        };\n        /** Reset a specific shortcut to its default settings */\n        this.resetShortcut = async (shortcutObject) => {\n            const settings = await this.props.external.getAllShortCutSettings();\n            const userShortcuts = settings.user.shortcuts;\n            const newUserShortcuts = [];\n            for (let shortcut of userShortcuts) {\n                if (shortcut['command'] !== shortcutObject.commandName ||\n                    shortcut['selector'] !== shortcutObject.selector) {\n                    newUserShortcuts.push(shortcut);\n                }\n            }\n            await settings.set('shortcuts', newUserShortcuts);\n            await this._refreshShortcutList();\n        };\n        /** Toggles showing command selectors */\n        this.toggleSelectors = () => {\n            this.setState({ showSelectors: !this.state.showSelectors });\n        };\n        /** Set the current list sort order */\n        this.updateSort = (value) => {\n            if (value !== this.state.currentSort) {\n                this.setState({ currentSort: value }, this.sortShortcuts);\n            }\n        };\n        /** Sort shortcut list so that an error row is right below the one currently being set */\n        this.sortConflict = (newShortcut, takenBy) => {\n            const shortcutList = this.state.filteredShortcutList;\n            if (shortcutList.filter(shortcut => shortcut.id === 'error_row').length === 0) {\n                const errorRow = new ErrorObject();\n                errorRow.takenBy = takenBy;\n                errorRow.id = 'error_row';\n                shortcutList.splice(shortcutList.indexOf(newShortcut) + 1, 0, errorRow);\n                errorRow.hasConflict = true;\n                this.setState({ filteredShortcutList: shortcutList });\n            }\n        };\n        /** Remove conflict flag from all shortcuts */\n        this.clearConflicts = () => {\n            /** Remove error row */\n            const shortcutList = this.state.filteredShortcutList.filter(shortcut => shortcut.id !== 'error_row');\n            shortcutList.forEach((shortcut) => {\n                shortcut.hasConflict = false;\n            });\n            this.setState({ filteredShortcutList: shortcutList });\n        };\n        this.contextMenu = (event, commandIDs) => {\n            event.persist();\n            this.setState({\n                contextMenu: this.props.external.createMenu()\n            }, () => {\n                event.preventDefault();\n                for (let command of commandIDs) {\n                    this.state.contextMenu.addItem({ command });\n                }\n                this.state.contextMenu.open(event.clientX, event.clientY);\n            });\n        };\n        this.state = {\n            shortcutList: {},\n            filteredShortcutList: new Array(),\n            shortcutsFetched: false,\n            searchQuery: '',\n            showSelectors: false,\n            currentSort: 'category',\n            keyBindingsUsed: {},\n            contextMenu: this.props.external.createMenu()\n        };\n    }\n    /** Fetch shortcut list on mount */\n    componentDidMount() {\n        void this._refreshShortcutList();\n    }\n    /** Fetch shortcut list from SettingRegistry  */\n    async _refreshShortcutList() {\n        const shortcuts = await this.props.external.getAllShortCutSettings();\n        const shortcutObjects = getShortcutObjects(this.props.external, shortcuts);\n        this.setState({\n            shortcutList: shortcutObjects,\n            filteredShortcutList: this.searchFilterShortcuts(shortcutObjects),\n            shortcutsFetched: true\n        }, () => {\n            let keyBindingsUsed = getKeyBindingsUsed(shortcutObjects);\n            this.setState({ keyBindingsUsed });\n            this.sortShortcuts();\n        });\n    }\n    /** Filter shortcut list using current search query */\n    searchFilterShortcuts(shortcutObjects) {\n        const filteredShortcuts = matchItems(shortcutObjects, this.state.searchQuery).map((item) => {\n            return item.item;\n        });\n        return filteredShortcuts;\n    }\n    /** Sort shortcut list using current sort property  */\n    sortShortcuts() {\n        const shortcuts = this.state.filteredShortcutList;\n        let filterCritera = this.state.currentSort;\n        if (filterCritera === 'command') {\n            filterCritera = 'label';\n        }\n        if (filterCritera !== '') {\n            shortcuts.sort((a, b) => {\n                const compareA = a.get(filterCritera);\n                const compareB = b.get(filterCritera);\n                if (compareA < compareB) {\n                    return -1;\n                }\n                else if (compareA > compareB) {\n                    return 1;\n                }\n                else {\n                    return a['label'] < b['label'] ? -1 : a['label'] > b['label'] ? 1 : 0;\n                }\n            });\n        }\n        this.setState({ filteredShortcutList: shortcuts });\n    }\n    render() {\n        if (!this.state.shortcutsFetched) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: ShortcutUIStyle, id: \"jp-shortcutui\" },\n            React.createElement(\"div\", { className: TopWhitespaceStyle }),\n            React.createElement(TopNav, { updateSearchQuery: this.updateSearchQuery, resetShortcuts: this.resetShortcuts, toggleSelectors: this.toggleSelectors, showSelectors: this.state.showSelectors, updateSort: this.updateSort, currentSort: this.state.currentSort, width: this.props.width, external: this.props.external }),\n            React.createElement(ShortcutList, { shortcuts: this.state.filteredShortcutList, resetShortcut: this.resetShortcut, handleUpdate: this.handleUpdate, deleteShortcut: this.deleteShortcut, showSelectors: this.state.showSelectors, keyBindingsUsed: this.state.keyBindingsUsed, sortConflict: this.sortConflict, clearConflicts: this.clearConflicts, height: this.props.height, errorSize: this.props.width < 775 ? 1 /* Small */ : 0 /* Regular */, contextMenu: this.contextMenu, external: this.props.external })));\n    }\n}\n//# sourceMappingURL=ShortcutUI.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module shortcuts-extension\n */\nimport { ISettingRegistry, SettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { IFormComponentRegistry } from '@jupyterlab/ui-components';\nimport { CommandRegistry } from '@lumino/commands';\nimport { JSONExt } from '@lumino/coreutils';\nimport { DisposableSet } from '@lumino/disposable';\nimport { Platform } from '@lumino/domutils';\nimport { Menu } from '@lumino/widgets';\nimport { renderShortCut } from './renderer';\nfunction getExternalForJupyterLab(settingRegistry, app, translator) {\n    const { commands } = app;\n    const shortcutPluginLocation = '@jupyterlab/shortcuts-extension:shortcuts';\n    return {\n        translator,\n        getAllShortCutSettings: () => settingRegistry.reload(shortcutPluginLocation),\n        removeShortCut: (key) => settingRegistry.remove(shortcutPluginLocation, key),\n        createMenu: () => new Menu({ commands }),\n        hasCommand: (id) => commands.hasCommand(id),\n        addCommand: (id, options) => commands.addCommand(id, options),\n        getLabel: (id) => commands.label(id)\n    };\n}\n/**\n * The default shortcuts extension.\n *\n * #### Notes\n * Shortcut values are stored in the setting system. The default values for each\n * shortcut are preset in the settings schema file of this extension.\n * Additionally, each shortcut can be individually set by the end user by\n * modifying its setting (either in the text editor or by modifying its\n * underlying JSON schema file).\n *\n * When setting shortcut selectors, there are two concepts to consider:\n * specificity and matchability. These two interact in sometimes\n * counterintuitive ways. Keyboard events are triggered from an element and\n * they propagate up the DOM until they reach the `documentElement` (`<body>`).\n *\n * When a registered shortcut sequence is fired, the shortcut manager checks\n * the node that fired the event and each of its ancestors until a node matches\n * one or more registered selectors. The *first* matching selector in the\n * chain of ancestors will invoke the shortcut handler and the traversal will\n * end at that point. If a node matches more than one selector, the handler for\n * whichever selector is more *specific* fires.\n * @see https://www.w3.org/TR/css3-selectors/#specificity\n *\n * The practical consequence of this is that a very broadly matching selector,\n * e.g. `'*'` or `'div'` may match and therefore invoke a handler *before* a\n * more specific selector. The most common pitfall is to use the universal\n * (`'*'`) selector. For almost any use case where a global keyboard shortcut is\n * required, using the `'body'` selector is more appropriate.\n */\nconst shortcuts = {\n    id: '@jupyterlab/shortcuts-extension:shortcuts',\n    requires: [ISettingRegistry],\n    optional: [ITranslator, IFormComponentRegistry],\n    activate: async (app, registry, translator, editorRegistry) => {\n        const translator_ = translator !== null && translator !== void 0 ? translator : nullTranslator;\n        const trans = translator_.load('jupyterlab');\n        const { commands } = app;\n        let canonical;\n        let loaded = {};\n        if (editorRegistry) {\n            editorRegistry.addRenderer('shortcuts', (props) => {\n                return renderShortCut(Object.assign({ external: getExternalForJupyterLab(registry, app, translator_) }, props));\n            });\n        }\n        /**\n         * Populate the plugin's schema defaults.\n         */\n        function populate(schema) {\n            const commands = app.commands.listCommands().join('\\n');\n            loaded = {};\n            schema.properties.shortcuts.default = Object.keys(registry.plugins)\n                .map(plugin => {\n                const shortcuts = registry.plugins[plugin].schema['jupyter.lab.shortcuts'] || [];\n                loaded[plugin] = shortcuts;\n                return shortcuts;\n            })\n                .concat([schema.properties.shortcuts.default])\n                .reduce((acc, val) => {\n                if (Platform.IS_MAC) {\n                    return acc.concat(val);\n                }\n                else {\n                    // If platform is not MacOS, remove all shortcuts containing Cmd\n                    // as they will be modified; e.g. `Cmd A` becomes `A`\n                    return acc.concat(val.filter(shortcut => !shortcut.keys.some(key => {\n                        const { cmd } = CommandRegistry.parseKeystroke(key);\n                        return cmd;\n                    })));\n                }\n            }, []) // flatten one level\n                .sort((a, b) => a.command.localeCompare(b.command));\n            schema.properties.shortcuts.description = trans.__(`Note: To disable a system default shortcut,\ncopy it to User Preferences and add the\n\"disabled\" key, for example:\n{\n    \"command\": \"application:activate-next-tab\",\n    \"keys\": [\n        \"Ctrl Shift ]\"\n    ],\n    \"selector\": \"body\",\n    \"disabled\": true\n}\n\nList of commands followed by keyboard shortcuts:\n%1\n\nList of keyboard shortcuts:`, commands);\n        }\n        registry.pluginChanged.connect(async (sender, plugin) => {\n            if (plugin !== shortcuts.id) {\n                // If the plugin changed its shortcuts, reload everything.\n                const oldShortcuts = loaded[plugin];\n                const newShortcuts = registry.plugins[plugin].schema['jupyter.lab.shortcuts'] || [];\n                if (oldShortcuts === undefined ||\n                    !JSONExt.deepEqual(oldShortcuts, newShortcuts)) {\n                    canonical = null;\n                    await registry.reload(shortcuts.id);\n                }\n            }\n        });\n        // Transform the plugin object to return different schema than the default.\n        registry.transform(shortcuts.id, {\n            compose: plugin => {\n                var _a, _b, _c, _d;\n                // Only override the canonical schema the first time.\n                if (!canonical) {\n                    canonical = JSONExt.deepCopy(plugin.schema);\n                    populate(canonical);\n                }\n                const defaults = (_c = (_b = (_a = canonical.properties) === null || _a === void 0 ? void 0 : _a.shortcuts) === null || _b === void 0 ? void 0 : _b.default) !== null && _c !== void 0 ? _c : [];\n                const user = {\n                    shortcuts: (_d = plugin.data.user.shortcuts) !== null && _d !== void 0 ? _d : []\n                };\n                const composite = {\n                    shortcuts: SettingRegistry.reconcileShortcuts(defaults, user.shortcuts)\n                };\n                plugin.data = { composite, user };\n                return plugin;\n            },\n            fetch: plugin => {\n                // Only override the canonical schema the first time.\n                if (!canonical) {\n                    canonical = JSONExt.deepCopy(plugin.schema);\n                    populate(canonical);\n                }\n                return {\n                    data: plugin.data,\n                    id: plugin.id,\n                    raw: plugin.raw,\n                    schema: canonical,\n                    version: plugin.version\n                };\n            }\n        });\n        try {\n            // Repopulate the canonical variable after the setting registry has\n            // preloaded all initial plugins.\n            canonical = null;\n            const settings = await registry.load(shortcuts.id);\n            Private.loadShortcuts(commands, settings.composite);\n            settings.changed.connect(() => {\n                Private.loadShortcuts(commands, settings.composite);\n            });\n        }\n        catch (error) {\n            console.error(`Loading ${shortcuts.id} failed.`, error);\n        }\n    },\n    autoStart: true\n};\n/**\n * Export the shortcut plugin as default.\n */\nexport default shortcuts;\n/**\n * A namespace for private module data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The internal collection of currently loaded shortcuts.\n     */\n    let disposables;\n    /**\n     * Load the keyboard shortcuts from settings.\n     */\n    function loadShortcuts(commands, composite) {\n        var _a;\n        const shortcuts = ((_a = composite === null || composite === void 0 ? void 0 : composite.shortcuts) !== null && _a !== void 0 ? _a : []);\n        if (disposables) {\n            disposables.dispose();\n        }\n        disposables = shortcuts.reduce((acc, val) => {\n            const options = normalizeOptions(val);\n            if (options) {\n                acc.add(commands.addKeyBinding(options));\n            }\n            return acc;\n        }, new DisposableSet());\n    }\n    Private.loadShortcuts = loadShortcuts;\n    /**\n     * Normalize potential keyboard shortcut options.\n     */\n    function normalizeOptions(value) {\n        if (!value || typeof value !== 'object') {\n            return undefined;\n        }\n        const { isArray } = Array;\n        const valid = 'command' in value &&\n            'keys' in value &&\n            'selector' in value &&\n            isArray(value.keys);\n        return valid ? value : undefined;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map","import React from 'react';\nimport { ShortcutUI } from './components';\nexport const renderShortCut = (props) => {\n    return React.createElement(ShortcutUI, { external: props.external, height: 1000, width: 1000 });\n};\n//# sourceMappingURL=renderer.js.map"],"names":["TopWhitespaceStyle","style","content","height","borderBottom","boxShadow","zIndex","width","background","position","ShortcutUIStyle","display","flexDirection","fontSize","fontFamily","color","minWidth","ShortcutListStyle","borderCollapse","CellStyle","padding","verticalAlign","ShortcutCellStyle","flexWrap","EmptyShortcutCellStyle","$nest","SingleShortcutCellStyle","RowStyle","borderBottomColor","borderBottomWidth","backgroundColor","borderColor","getMarginLeft","showSelectors","errorSize","ErrorMessageStyle","marginTop","ErrorButtonStyle","lineHeight","marginLeft","marginRight","outline","border","ShortcutContainerStyle","ShortcutKeysContainerStyle","ShortcutKeysStyle","borderWidth","borderRadius","margin","OrStyle","OrTwoStyle","CommaStyle","PlusStyle","ResetStyle","paddingLeft","SourceCellStyle","InputBoxStyle","paddingTop","InputBoxNewStyle","InputBoxHiddenStyle","slideAnimation","keyframes","from","left","to","InputStyle","animationDuration","animationTimingFunction","animationName","borderStyle","InputUnavailableStyle","InputTextStyle","overflowX","overflowY","InputSelectedTextStyle","overflow","InputWaitingStyle","SubmitStyle","backgroundImage","backgroundRepeat","SubmitNonFunctionalStyle","SubmitConflictStyle","backgroundSize","backgroundPositionX","backgroundPositionY","ShortcutObject","constructor","this","commandName","label","keys","source","selector","category","id","numberOfShortcuts","hasConflict","get","sortCriteria","ErrorObject","super","takenBy","TakenByObject","shortcut","takenByKey","takenByLabel","ShortcutInput","props","handleUpdate","state","push","currentChain","setState","handleOverwrite","async","deleteShortcut","takenByObject","then","handleReplace","toggleInput","shortcutId","parseChaining","event","value","userInput","key","EN_US","nativeEvent","modKeys","lastKey","substr","lastIndexOf","length","trim","ctrlKey","metaKey","altKey","shiftKey","checkNonFunctional","dontEnd","shortcutKeys","split","last","isFunctional","indexOf","checkShortcutAvailability","isAvailable","Object","keyBindingsUsed","join","binding","newOrReplace","handleInput","preventDefault","selected","parsed","toSymbols","checkConflict","handleBlur","relatedTarget","clearConflicts","placeholder","Array","sortConflict","render","trans","translator","load","inputClassName","classes","className","displayInput","onBlur","tabIndex","onKeyDown","ref","input","focus","__","disabled","onClick","hidden","ShortCutLocation","ShortcutItem","toggleInputNew","displayNewInput","toggleInputReplaceLeft","displayReplaceInputLeft","toggleInputReplaceRight","displayReplaceInputRight","addCommandIfNeeded","command","action","external","hasCommand","commandId","addCommand","caption","execute","handleRightClick","e","_commands","shortcutEdit","shortcutEditLeft","shortcutEditRight","shortcutAddNew","shortcutAddAnother","shortcutReset","resetShortcut","numShortcuts","filter","commandList","concat","contextMenu","reduce","result","Platform","getErrorRow","_a","document","getElementById","click","getCategoryCell","getLabelCell","getResetShortCutLink","getSourceCell","getOptionalSelectorCell","getClassNameForShortCuts","nonEmptyKeys","getToggleInputReplaceMethod","location","Left","Right","getDisplayReplaceInput","getOrDiplayIfNeeded","getShortCutAsInput","getShortCutForDisplayOnly","map","keyBinding","index","isLocationBeingEdited","getLocationFromIndex","getDivForKey","getAddLink","getInputBoxWhenToggled","getShortCutsCell","onContextMenu","persist","ShortcutList","widgetHeight","borderTop","borderTopColor","borderTopWidth","shortcuts","TopStyle","TopNavStyle","alignItems","boxSizing","SymbolsStyle","SymbolsSmallStyle","SymbolsRowStyle","justifyContent","marginBottom","SearchContainerStyle","textAlign","SearchStyle","AdvancedOptionsContainerStyle","AdvancedOptionsStyle","AdvancedOptionsSmallStyle","AdvancedOptionsLinkStyle","size","textDecoration","HeaderRowContainerStyle","paddingRight","HeaderRowStyle","fontWeight","commandIconStyle","altIconStyle","controlIconStyle","HeaderStyle","CurrentHeaderStyle","SortButtonStyle","transform","ShortcutTitleItem","title","toLowerCase","active","updateSort","CommandIDs","resetAll","Symbols","getRegularSymbols","getSmallSymbols","getTinySymbols","AdvancedOptions","toggleSelectors","resetShortcuts","TopNav","getSize","addMenuCommands","menu","createMenu","addItem","getShortCutTitleItem","currentSort","onChange","updateSearchQuery","fuzzySearch","item","query","score","Infinity","indices","rgx","rgxMatch","exec","match","StringExt","pivot","j","ArrayExt","a","b","categoryIndices","slice","labelIndices","i","n","matchType","ShortcutUI","searchQuery","target","filteredShortcutList","searchFilterShortcuts","shortcutList","sortShortcuts","settings","getAllShortCutSettings","user","removeShortCut","_refreshShortcutList","shortcutObject","userShortcuts","newUserShortcuts","found","set","newShortcut","errorRow","splice","forEach","commandIDs","open","clientX","clientY","shortcutsFetched","componentDidMount","shortcutObjects","composite","currentCount","getLabel","userSetting","keyTo","getShortcutObjects","getKeyBindingsUsed","items","replace","scores","itemList","matchItems","filterCritera","sort","compareA","compareB","getExternalForJupyterLab","settingRegistry","app","commands","shortcutPluginLocation","reload","remove","Menu","options","requires","ISettingRegistry","optional","ITranslator","IFormComponentRegistry","activate","registry","editorRegistry","translator_","nullTranslator","canonical","loaded","populate","schema","listCommands","properties","default","plugins","plugin","acc","val","some","cmd","CommandRegistry","localeCompare","description","addRenderer","renderShortCut","assign","pluginChanged","connect","sender","oldShortcuts","newShortcuts","undefined","JSONExt","compose","_b","_c","_d","defaults","data","SettingRegistry","fetch","raw","version","Private","loadShortcuts","changed","error","console","autoStart","disposables","dispose","isArray","normalizeOptions","add","addKeyBinding","DisposableSet"],"sourceRoot":""}