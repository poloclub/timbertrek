{"version":3,"file":"6553.e130913.js","mappings":"iOAGA,IAAIA,EAAW,EAIf,MAAMC,EAAaC,OAAOC,OAAO,MAM3BC,EAAkB,CACpB,4BACA,sBACA,qBACA,qBACA,WACA,iBACA,oBACA,eACA,UACA,oBACA,gBACA,OACA,YACA,gBACA,cACA,gBACA,aACA,cACA,YACA,cACA,kBACA,mBACA,oBACA,WACA,eACA,gBACA,iBACA,aACA,cACA,UACA,QACA,UACA,WACA,SACA,UACA,OAEA,eACA,gBACA,eACA,mBACA,oBACA,oBACA,iBACA,gBAGJ,IAAK,MAAMC,KAAYD,EACnB,IAAK,MAAME,IAAU,CAAC,WAAY,OAAQ,QAAS,MAAO,IACtDL,EAAWK,EAASD,IAAY,EA8BxC,SAASE,EAAcC,EAAKC,GACxB,OAAIA,GAA0B,iBAAVA,IAAuBR,EAAWO,GAC3C,GAAGA,KAAOC,MAEd,GAAGD,KAAOC,IAKrB,SAASC,EAAWD,GAChB,OAAOA,EAAME,MAAK,CAACC,EAAGC,IAAOD,EAAE,GAAKC,EAAE,GAAK,GAAK,IA8BpD,SAASC,EAAoBC,GACzB,OAAOA,EACFC,KAAI,EAAEC,EAAMR,KACRS,MAAMC,QAAQV,GAEZA,EAAMO,KAAII,GAAKb,EAAcU,EAAMG,KAAIC,KAAK,KADxCd,EAAcU,EAAMR,KAG9BY,KAAK,KAKd,SAASC,EAAYC,EAAUC,GAC3B,OAA+B,IAA3BD,EAASE,QAAQ,KACV,GAAGD,KAAUD,IACjBA,EAASG,QAAQ,KAAMF,GAKlC,SAASG,EAAQJ,EAAUK,EAAQC,EAAWC,EAAYN,GACtD,MAAM,MAAEO,EAAK,OAAEC,EAAM,SAAEC,GA9C3B,SAAqBL,EAAQM,GACzB,MAAMnB,EAAa,GACboB,EAAe,GAErB,IAAK,MAAM3B,KAAON,OAAOkC,KAAKR,GAAS,CACnC,MAAMX,EAAOT,EAAI6B,OACX5B,EAAQmB,EAAOpB,GACM,KAAvBS,EAAKqB,WAAW,IAA8B,MAAT7B,IAChB,iBAAVA,GAAuBS,MAAMC,QAAQV,GAI5CM,EAAWwB,KAAK,EA7CbC,EA6CwBvB,EA5ChCuB,EACFd,QAAQ,UAAWe,GAAM,IAAIA,EAAEC,kBAC/BhB,QAAQ,OAAQ,SA0CyBjB,IAHlC0B,EAAaI,KAAK,CAACtB,EAAMR,KA1CzC,IAAmB+B,EAiDf,MAAO,CACHT,MAAOjB,EAAoBJ,EAAWK,IACtCiB,OAAQE,EAAkBC,EAAezB,EAAWyB,GACpDF,WAAYL,EAAOe,SA2BaC,CAAYhB,EAAqB,KAAbL,GACxD,IAAIsB,EAAMd,EACV,GAA+B,KAA3BR,EAASe,WAAW,GAAmB,CACvC,MAAMQ,EAAQ,CACVvB,SAAAA,EACAK,OAAQ,GACRmB,MAAO,GACPhB,MAAOP,EAAS,GAAKO,GAEzBF,EAAUU,KAAKO,GAEXf,GAASP,GACTsB,EAAMlB,OAAOW,KAAK,CAAEhB,SAAUC,EAAQO,MAAAA,EAAOE,SAAAA,IAEjD,IAAK,MAAOhB,EAAMR,KAAUuB,EACxBa,GAAO5B,EAAOU,EAAQV,EAAMR,EAAOqC,EAAMC,MAAOD,EAAMlB,OAAQJ,OAGjE,CACD,MAAMhB,EAAMgB,EAASF,EAAYC,EAAUC,GAAUD,EACjDQ,GACAD,EAAWS,KAAK,CAAEhB,SAAUf,EAAKuB,MAAAA,EAAOE,SAAAA,IAC5C,IAAK,MAAOhB,EAAMR,KAAUuB,EACxBa,GAAO5B,EAAOU,EAAQV,EAAMR,EAAOoB,EAAWC,EAAYtB,GAGlE,OAAOqC,EAKX,SAASG,EAAeC,EAAOJ,EAAKhB,EAAWC,EAAYoB,EAAWC,GAClE,IAAK,MAAM,SAAE5B,EAAQ,MAAEQ,EAAK,SAAEE,KAAcH,EAAY,CACpD,MAAMtB,EAAM2C,EAAU7B,EAAYC,EAAU2B,GAAa3B,EACnD6B,EAAKnB,EACL,SAASjC,GAAUqD,SAAS,MAC5B,MAAMR,MAAQd,IACduB,EAAO,IAAIC,EAAMxB,EAAOqB,GAC9BE,EAAKE,IAAI,IAAIC,EAASjD,EAAK,MAAMqC,MAAQrC,MACzCyC,EAAMO,IAAIF,GAEd,IAAK,MAAM,SAAE/B,EAAQ,MAAEQ,EAAK,MAAEgB,EAAK,OAAEnB,KAAYC,EAAW,CACxD,MAAMyB,EAAO,IAAII,EAAKnC,EAAUQ,EAAO,MAAMc,MAAQtB,MAAaQ,KAClEiB,EAAeM,EAAMT,EAAKE,EAAOnB,EAAQsB,EAAWC,GACpDF,EAAMO,IAAIF,IAMlB,SAASjC,EAAKsC,GACV,IAAIC,EAAM,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC5BD,GAAOD,EAAIE,GACf,OAAOD,EAKX,MAAMG,EAAc,CAChBP,IAAK,OACLQ,OAAQ,OACRC,OAAQ,QAKL,MAAMC,EACTC,YAAYC,EAAUL,GAClBM,KAAKD,QAAUA,EACfC,KAAKC,MAAQ,GACbD,KAAKE,SAAW,EAChBF,KAAKG,MAAQ,GACbH,KAAKI,UAAYvE,OAAOC,OAAO,MAC/BkE,KAAKK,UAAYxE,OAAOC,OAAO,MAEnCqD,IAAIzB,GACA,MAAM4C,EAAQN,KAAKK,UAAU3C,EAAMqB,KAAO,EACpCE,EAAOe,KAAKI,UAAU1C,EAAMqB,KAAOrB,EAAM6C,QAE/C,GADAP,KAAKK,UAAU3C,EAAMqB,IAAMuB,EAAQ,EACrB,IAAVA,EACAN,KAAKI,UAAUnB,EAAKF,IAAME,EAC1Be,KAAKG,MAAMjC,KAAKe,EAAKF,IACrBiB,KAAKC,MAAM/B,KAAKe,EAAKuB,aACrBR,KAAKE,WACLF,KAAKD,QAAQZ,IAAIF,EAAMe,KAAKG,MAAMV,OAAS,QAE1C,GAAIR,aAAgBY,GAASnC,aAAiBmC,EAAO,CACtD,MAAMY,EAAWT,KAAKG,MAAM/C,QAAQM,EAAMqB,IACpC2B,EAAmBzB,EAAKiB,SAC9BjB,EAAK0B,MAAMjD,GACPuB,EAAKiB,WAAaQ,IAClBV,KAAKC,MAAMW,OAAOH,EAAU,EAAGxB,EAAKuB,aACpCR,KAAKE,WACLF,KAAKD,QAAQJ,OAAOV,EAAMwB,EAAUA,KAIhDb,OAAOlC,GACH,MAAM4C,EAAQN,KAAKK,UAAU3C,EAAMqB,IACnC,GAAIuB,EAAO,CACPN,KAAKK,UAAU3C,EAAMqB,IAAMuB,EAAQ,EACnC,MAAMrB,EAAOe,KAAKI,UAAU1C,EAAMqB,IAC5B8B,EAAQb,KAAKG,MAAM/C,QAAQ6B,EAAKF,IACtC,GAAc,IAAVuB,SACON,KAAKK,UAAU3C,EAAMqB,WACrBiB,KAAKI,UAAU1C,EAAMqB,IAC5BiB,KAAKG,MAAMS,OAAOC,EAAO,GACzBb,KAAKC,MAAMW,OAAOC,EAAO,GACzBb,KAAKE,WACLF,KAAKD,QAAQH,OAAOX,EAAM4B,QAEzB,GAAI5B,aAAgBY,GAASnC,aAAiBmC,EAAO,CACtD,MAAMiB,EAAe7B,EAAKiB,SAC1BjB,EAAK8B,QAAQrD,GACTuB,EAAKiB,WAAaY,IAClBd,KAAKC,MAAMW,OAAOC,EAAO,EAAG5B,EAAKuB,aACjCR,KAAKE,WACLF,KAAKD,QAAQJ,OAAOV,EAAM4B,EAAOA,MAKjDG,SACI,OAAOhB,KAAKG,MAAMxD,KAAIR,GAAO6D,KAAKI,UAAUjE,KAEhDwE,MAAM/B,GACF,IAAK,MAAMK,KAAQL,EAAMoC,SACrBhB,KAAKb,IAAIF,GACb,OAAOe,KAEXe,QAAQnC,GACJ,IAAK,MAAMK,KAAQL,EAAMoC,SACrBhB,KAAKJ,OAAOX,GAChB,OAAOe,KAEXO,QACI,OAAO,IAAIV,GAAQc,MAAMX,OAM1B,MAAMZ,EACTU,YAAY5C,EAAU6B,GAClBiB,KAAK9C,SAAWA,EAChB8C,KAAKjB,GAAKA,EAEdyB,YACI,OAAOR,KAAK9C,SAEhBqD,QACI,OAAOP,MAMR,MAAMd,UAAcW,EACvBC,YAAYpC,EAAOqB,GACfkC,QACAjB,KAAKtC,MAAQA,EACbsC,KAAKjB,GAAKA,EAEdyB,YACI,MAAO,GAAGR,KAAKC,MAAMjD,KAAK,QAAQgD,KAAKtC,SAE3C6C,QACI,OAAO,IAAIrB,EAAMc,KAAKtC,MAAOsC,KAAKjB,IAAI4B,MAAMX,OAM7C,MAAMX,UAAaQ,EACtBC,YAAYoB,EAAMxD,EAAOqB,GACrBkC,QACAjB,KAAKkB,KAAOA,EACZlB,KAAKtC,MAAQA,EACbsC,KAAKjB,GAAKA,EAEdyB,YACI,MAAO,GAAGR,KAAKkB,QAAQlB,KAAKtC,QAAQV,EAAKgD,KAAKC,UAElDM,QACI,OAAO,IAAIlB,EAAKW,KAAKkB,KAAMlB,KAAKtC,MAAOsC,KAAKjB,IAAI4B,MAAMX,OAG9D,SAAS7D,EAAIqC,EAAKjB,GAGV,MAFQ,IApQhB,SAAoB4D,GAChB,IAAI/E,EAAQ,KACRgF,EAAMD,EAAI1B,OACd,KAAO2B,KACHhF,EAAiB,GAARA,EAAc+E,EAAIlD,WAAWmD,GAC1C,OAAQhF,IAAU,GAAG4C,SAAS,IA+PdqC,CAAW7C,KAQxB,MAAM8C,UAAkBzB,EAC3BC,YAAYf,EAAIgB,GACZkB,MAAMlB,GACNC,KAAKjB,GAAKA,EAEdwC,cAAchE,GACV,MAAMC,EAAY,GACZC,EAAa,GACbe,EAAMlB,EAAQ,IAAKC,EAAQC,EAAWC,GACtCsB,EAAK5C,EAAIqC,GAGf,OADAG,EAAeqB,KAAMxB,EAAKhB,EAAWC,EADpB,IAA4CsB,KACF,GACpDA,EAEXyC,kBAAkBC,GACd,OAAOzB,KAAK0B,iBAAiB,aAAcD,GAE/CC,iBAAiBzF,EAAQsB,GACrB,MAAMC,EAAY,GACZC,EAAa,GACbe,EAAMlB,EAAQ,GAAIC,EAAQC,EAAWC,GACrCsB,EAAK5C,EAAIqC,GAET0C,EAAO,IAAI7B,EADA,GAAGpD,KAAkD8C,IACtC,GAAI,MAAMP,MAAQvC,KAGlD,OAFA0C,EAAeuC,EAAM1C,EAAKhB,EAAWC,EAAY,IAAI,GACrDuC,KAAKb,IAAI+B,GACFnC,EAEX4C,aAAaT,EAAM3D,GACf,MAAMC,EAAY,GACZC,EAAa,GAEnBkB,EAAeqB,KADH1C,EAAQ4D,EAAM3D,EAAQC,EAAWC,GACnBD,EAAWC,EAAY,IAAI,GAEzDmE,YAAYrE,GACR,OAAOyC,KAAK2B,aAAa,GAAIpE,GAEjCiD,YACI,OAAOxD,EAAKgD,KAAKC,OAErBM,QACI,OAAO,IAAIe,EAAUtB,KAAKjB,GAAIiB,KAAKD,SAASY,MAAMX,OAMnD,SAASlE,EAAOiE,GACnB,OAAO,IAAIuB,EAAU,OAAO3F,GAAUqD,SAAS,MAAOe,K,sTCzYnD,SAAS8B,EAAgBC,GAE5B,IAAIvE,EAAS,GACb,IAAK,IAAIpB,KAAO2F,EAAQ,CAEpB,IAAIC,EAAMD,EAAO3F,GAEjB,GAAY,UAARA,EAAiB,CACjB,IAAIwB,EAASoE,EACb,IAAK,IAAI7E,KAAYS,EAAQ,CACzB,IAAIqE,EAAgBrE,EAAOT,GAC3BK,EAAOL,GAAY2E,EAAgBG,QAG1B,eAAR7F,EACLoB,EAAO0E,aAAeF,EAGtBxE,EAAOpB,GAAO4F,EAGtB,OAAOxE,EC1BJ,IAAI2E,EAAuC,oBAA1BC,sBAKlB,SAAUC,GAAM,OAAOC,WAAWD,IAKhB,oBAAXE,OACHH,sBACAA,sBAAsBI,KAAKD,QAI9B,SAASE,IAEZ,IADA,IAAIA,EAAU,GACLC,EAAK,EAAGA,EAAKC,UAAUjD,OAAQgD,IACpCD,EAAQC,GAAMC,UAAUD,GAE5B,OAAOD,EACF7F,KAAI,SAAUgG,GAAK,OAAOA,GAAkB,iBAANA,EAAiB9G,OAAOkC,KAAK4E,GAAGhG,KAAI,SAAUR,GAAO,QAASwG,EAAExG,IAAQA,KAAU,CAACwG,MACzHC,QAAO,SAAUC,EAAWF,GAAK,OAAOE,EAAUC,OAAOH,KAAO,IAChEI,QAAO,SAAUJ,GAAK,QAASA,KAC/B3F,KAAK,KAMP,SAASgG,IAEZ,IADA,IAAIC,EAAU,GACLR,EAAK,EAAGA,EAAKC,UAAUjD,OAAQgD,IACpCQ,EAAQR,GAAMC,UAAUD,GAI5B,IADA,IAAIS,EAAS,GACJC,EAAK,EAAGC,EAAYH,EAASE,EAAKC,EAAU3D,OAAQ0D,IAAM,CAC/D,IAAIrB,EAASsB,EAAUD,GACvB,GAAc,MAAVrB,IAA6B,IAAXA,EAGtB,IAAK,IAAI3F,KAAO2F,EAAQ,CAEpB,IAAIC,EAAMD,EAAO3F,IACZ4F,GAAe,IAARA,KAIA,UAAR5F,GAAmB4F,EACnBmB,EAAO/G,GAAO+G,EAAc,MAAIF,EAAOE,EAAc,MAAGnB,GAAOA,GAGnC,IAAtB5F,EAAIiB,QAAQ,MAAyC,IAA1BjB,EAAIiB,QAAQ,UAC7C8F,EAAO/G,GAAO+G,EAAO/G,GAAO6G,EAAOE,EAAO/G,GAAM4F,GAAOA,EAGvDmB,EAAO/G,GAAO4F,IAI1B,OAAOmB,EAUJ,IAAIG,EAAQ,SAAUC,GAGzB,IAFA,IAAIH,EACAF,EAAU,GACLR,EAAK,EAAGA,EAAKC,UAAUjD,OAAQgD,IACpCQ,EAAQR,EAAK,GAAKC,UAAUD,GAEhC,IAAIc,EAAqB,GACrBD,EAAWE,MACXD,EAAmBrF,KAAKoF,EAAWE,MACnCF,EAAWG,aACXF,EAAmBrF,KAAK,iBAAmBoF,EAAWG,YAAc,KACpEH,EAAWI,UACXH,EAAmBrF,KAAK,eAAiByF,EAAYL,EAAWI,UAAY,KAC5EJ,EAAWM,UACXL,EAAmBrF,KAAK,eAAiByF,EAAYL,EAAWM,UAAY,KAC5EN,EAAWO,WACXN,EAAmBrF,KAAK,gBAAkByF,EAAYL,EAAWO,WAAa,KAC9EP,EAAWQ,WACXP,EAAmBrF,KAAK,gBAAkByF,EAAYL,EAAWQ,WAAa,KAClF,IAAIC,EAAmB,UAAYR,EAAmBvG,KAAK,SACvD8E,EAAS,CACTkC,OAAQb,EAAK,GACTA,EAAGY,GAAoBf,EAAOiB,WAAM,EAAQhB,GAC5CE,IAER,OAAOrB,GAEP6B,EAAc,SAAUvH,GACxB,MAAwB,iBAAVA,EAAqBA,EAAQA,EAAQ,MC/FnD8H,EAAkB,WAAc,OAAO,YAIvCC,EAA2B,WAC3B,SAASA,EAAUhB,GACf,IAAIiB,EAAQpE,KACRqE,EAAkBlB,EAAGkB,gBAOzBrE,KAAKsE,OAAS,SAAUC,GACfA,IAGLH,EAAMI,MAAQD,GAAkB,GAChCH,EAAMK,mBAAoB,EAC1BL,EAAMM,kBAKV1E,KAAK2E,QAAU,SAAUzH,GAErB,IADA,IAAI+F,EAAU,GACLR,EAAK,EAAGA,EAAKC,UAAUjD,OAAQgD,IACpCQ,EAAQR,EAAK,GAAKC,UAAUD,GAEhC,IAAIlF,EAASsE,EAAgBmB,EAAOiB,WAAM,EAAQhB,IAClDmB,EAAMQ,WAAWjD,aAAazE,EAAUK,GACxC6G,EAAMM,iBAQV1E,KAAK6E,kBAAoB,WACrB,IAAIC,EAASV,EAAMW,UACdD,IAGLA,EAAOE,YAAcZ,EAAM5D,cAK/BR,KAAKiF,SAAW,WAEZ,IADA,IAAIA,EAAW,GACNxC,EAAK,EAAGA,EAAKC,UAAUjD,OAAQgD,IACpCwC,EAASxC,GAAMC,UAAUD,GAG7B,IADA,IAAIyC,EAAYd,EAAMQ,WACbzB,EAAK,EAAGgC,EAAKF,EAAU9B,EAAKgC,EAAG1F,OAAQ0D,IAAM,CAClD,IAAIiC,EAAOD,EAAGhC,GACd+B,EAAUvD,aAAa,aAAcyD,GAEzChB,EAAMM,iBAMV1E,KAAKQ,UAAY,WACb,OAAQ4D,EAAMI,MAAQ,IAAMJ,EAAMQ,WAAWpE,aAKjDR,KAAKyB,UAAY,SAAU4D,GACvB,IAAI5D,EFjDT,SAA4B4D,GAC/B,IAAInC,EAAS,GACb,IAAK,IAAIoC,KAAUD,EACA,eAAXC,IACApC,EAAOoC,GAAUD,EAAOC,IAMhC,OAHID,EAAOE,aACPrC,EAAOjB,aAAeoD,EAAOE,YAE1BrC,EEuCiBsC,CAAmBH,GAE/BI,EAAgBrB,EAAMQ,WAAWpD,kBAAkBC,GAEvD,OADA2C,EAAMM,gBACCe,GAKXzF,KAAK0F,OAAS,WAEV,IAAIR,EAAYhB,IAChBE,EAAMQ,WAAaM,EACnBd,EAAMuB,uBAAyBT,EAAUhF,SAEzCkE,EAAMI,KAAO,GACbJ,EAAMK,mBAAoB,EAE1B,IAAIK,EAASV,EAAMW,UACfD,IACAA,EAAOE,YAAc,KAI7BhF,KAAK4F,gBAAkB,SAAUC,GAEzBzB,EAAM0B,OACN1B,EAAM0B,KAAKd,YAAc,IAE7BZ,EAAM0B,KAAOD,EAEbzB,EAAMS,qBAOV7E,KAAK+F,WAAa,SAAUvD,GAGxB,IAFA,IACIU,EAAS,GACJT,EAAK,EAAGuD,EAFAnK,OAAOoK,oBAAoBzD,GAEAC,EAAKuD,EAAavG,OAAQgD,IAAM,CACxE,IAAI5D,EAAYmH,EAAavD,GACzByD,EAAW1D,EAAQ3D,GACnBqH,IACAA,EAASX,WAAa1G,EACtBqE,EAAOrE,GAAauF,EAAM1G,MAAMwI,IAGxC,OAAOhD,GAEX,IAAIgC,EAAYhB,IAChBlE,KAAKmG,iBAAmB9B,EACxBrE,KAAK4E,WAAaM,EAClBlF,KAAK2F,uBAAyBT,EAAUhF,SACxCF,KAAKoG,SAAW,EAChBpG,KAAKyE,mBAAoB,EACzBzE,KAAKwE,KAAO,GACZxE,KAAK8F,UAAOO,EAEZrG,KAAKtC,MAAQsC,KAAKtC,MAAM6E,KAAKvC,MAiDjC,OA5CAmE,EAAUmC,UAAUC,cAAgB,SAAUnE,GAC1C,IAAIgC,EAAQpE,KACZA,KAAKoG,WACL,IAAII,EAAUxG,KAAKoG,SACnBlE,GAAI,WACIsE,IAAYpC,EAAMgC,UAGtBhE,QAGR+B,EAAUmC,UAAUvB,QAAU,WAC1B,GAAI/E,KAAK8F,KACL,OAAO9F,KAAK8F,KAEhB,GAAI9F,KAAKmG,iBAAkB,CACvB,IAAIN,EAAwB,oBAAXvD,OACX,CAAE0C,YAAa,IACfyB,SAASC,cAAc,SAK7B,MAJwB,oBAAbD,UACPA,SAASE,KAAKC,YAAYf,GAE9B7F,KAAK8F,KAAOD,EACLA,IAKf1B,EAAUmC,UAAU5B,cAAgB,WAChC,IAAIN,EAAQpE,KACRE,EAAWF,KAAK4E,WAAW1E,SAC3B2G,EAAe7G,KAAK2F,wBACnB3F,KAAKyE,mBAAqBvE,IAAa2G,KAG5C7G,KAAK2F,uBAAyBzF,EAC9BF,KAAKyE,mBAAoB,EACzBzE,KAAKuG,eAAc,WAAc,OAAOnC,EAAMS,yBAElDV,EAAUmC,UAAU5I,MAAQ,WACxB,IAAImB,EAAYmB,KAAK4E,WAAWrD,cAAcM,EAAgBmB,EAAOiB,WAAMoC,EAAW3D,aAEtF,OADA1C,KAAK0E,gBACE7F,GAEJsF,EAlLmB,G,WCE1B2C,EAAK,IAAI3C,EAAU,CAAEE,iBAAiB,IAE/BuB,EAAkBkB,EAAGlB,gBAOrBtB,EAASwC,EAAGxC,OAIZK,EAAUmC,EAAGnC,QAMbE,EAAoBiC,EAAGjC,kBAIvBI,EAAW6B,EAAG7B,SAIdzE,EAAYsG,EAAGtG,UAIfiB,EAAYqF,EAAGrF,UAIfiE,EAASoB,EAAGpB,OAIZhI,EAAQoJ,EAAGpJ,MAMXqI,EAAae,EAAGf,WASpB,SAASgB,EAAgBjC,GAC5B,IAAIkC,EAAW,IAAI7C,EAAU,CAAEE,iBAAiB,IAIhD,OAHIS,GACAkC,EAASpB,gBAAgBd,GAEtBkC,I","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/free-style/dist.es2015/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/typestyle/lib.es2015/internal/formatting.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/typestyle/lib.es2015/internal/utilities.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/typestyle/lib.es2015/internal/typestyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/typestyle/lib.es2015/index.js"],"sourcesContent":["/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\nconst CSS_NUMBER = Object.create(null);\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER_KEYS = [\n    \"animation-iteration-count\",\n    \"border-image-outset\",\n    \"border-image-slice\",\n    \"border-image-width\",\n    \"box-flex\",\n    \"box-flex-group\",\n    \"box-ordinal-group\",\n    \"column-count\",\n    \"columns\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"flex\",\n    \"flex-grow\",\n    \"flex-positive\",\n    \"flex-shrink\",\n    \"flex-negative\",\n    \"flex-order\",\n    \"font-weight\",\n    \"grid-area\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-span\",\n    \"grid-column-start\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-span\",\n    \"grid-row-start\",\n    \"line-clamp\",\n    \"line-height\",\n    \"opacity\",\n    \"order\",\n    \"orphans\",\n    \"tab-size\",\n    \"widows\",\n    \"z-index\",\n    \"zoom\",\n    // SVG properties.\n    \"fill-opacity\",\n    \"flood-opacity\",\n    \"stop-opacity\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\"\n];\n// Add vendor prefixes to all unit-less properties.\nfor (const property of CSS_NUMBER_KEYS) {\n    for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n        CSS_NUMBER[prefix + property] = true;\n    }\n}\n/**\n * Escape a CSS class name.\n */\nfunction escape(str) {\n    return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate(propertyName) {\n    return propertyName\n        .replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`)\n        .replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n/**\n * Generate a hash value from a string.\n */\nfunction stringHash(str) {\n    let value = 5381;\n    let len = str.length;\n    while (len--)\n        value = (value * 33) ^ str.charCodeAt(len);\n    return (value >>> 0).toString(36);\n}\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString(key, value) {\n    if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n        return `${key}:${value}px`;\n    }\n    return `${key}:${value}`;\n}\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples(value) {\n    return value.sort((a, b) => (a[0] > b[0] ? 1 : -1));\n}\n/**\n * Categorize user styles.\n */\nfunction parseStyles(styles, hasNestedStyles) {\n    const properties = [];\n    const nestedStyles = [];\n    // Sort keys before adding to styles.\n    for (const key of Object.keys(styles)) {\n        const name = key.trim();\n        const value = styles[key];\n        if (name.charCodeAt(0) !== 36 /* $ */ && value != null) {\n            if (typeof value === \"object\" && !Array.isArray(value)) {\n                nestedStyles.push([name, value]);\n            }\n            else {\n                properties.push([hyphenate(name), value]);\n            }\n        }\n    }\n    return {\n        style: stringifyProperties(sortTuples(properties)),\n        nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n        isUnique: !!styles.$unique\n    };\n}\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties(properties) {\n    return properties\n        .map(([name, value]) => {\n        if (!Array.isArray(value))\n            return styleToString(name, value);\n        return value.map(x => styleToString(name, x)).join(\";\");\n    })\n        .join(\";\");\n}\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate(selector, parent) {\n    if (selector.indexOf(\"&\") === -1)\n        return `${parent} ${selector}`;\n    return selector.replace(/&/g, parent);\n}\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize(selector, styles, rulesList, stylesList, parent) {\n    const { style, nested, isUnique } = parseStyles(styles, selector !== \"\");\n    let pid = style;\n    if (selector.charCodeAt(0) === 64 /* @ */) {\n        const child = {\n            selector,\n            styles: [],\n            rules: [],\n            style: parent ? \"\" : style\n        };\n        rulesList.push(child);\n        // Nested styles support (e.g. `.foo > @media > .bar`).\n        if (style && parent) {\n            child.styles.push({ selector: parent, style, isUnique });\n        }\n        for (const [name, value] of nested) {\n            pid += name + stylize(name, value, child.rules, child.styles, parent);\n        }\n    }\n    else {\n        const key = parent ? interpolate(selector, parent) : selector;\n        if (style)\n            stylesList.push({ selector: key, style, isUnique });\n        for (const [name, value] of nested) {\n            pid += name + stylize(name, value, rulesList, stylesList, key);\n        }\n    }\n    return pid;\n}\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {\n    for (const { selector, style, isUnique } of stylesList) {\n        const key = isStyle ? interpolate(selector, className) : selector;\n        const id = isUnique\n            ? `u\\0${(++uniqueId).toString(36)}`\n            : `s\\0${pid}\\0${style}`;\n        const item = new Style(style, id);\n        item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n        cache.add(item);\n    }\n    for (const { selector, style, rules, styles } of rulesList) {\n        const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n        composeStylize(item, pid, rules, styles, className, isStyle);\n        cache.add(item);\n    }\n}\n/**\n * Cache to list to styles.\n */\nfunction join(arr) {\n    let res = \"\";\n    for (let i = 0; i < arr.length; i++)\n        res += arr[i];\n    return res;\n}\n/**\n * Noop changes.\n */\nconst noopChanges = {\n    add: () => undefined,\n    change: () => undefined,\n    remove: () => undefined\n};\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache {\n    constructor(changes = noopChanges) {\n        this.changes = changes;\n        this.sheet = [];\n        this.changeId = 0;\n        this._keys = [];\n        this._children = Object.create(null);\n        this._counters = Object.create(null);\n    }\n    add(style) {\n        const count = this._counters[style.id] || 0;\n        const item = this._children[style.id] || style.clone();\n        this._counters[style.id] = count + 1;\n        if (count === 0) {\n            this._children[item.id] = item;\n            this._keys.push(item.id);\n            this.sheet.push(item.getStyles());\n            this.changeId++;\n            this.changes.add(item, this._keys.length - 1);\n        }\n        else if (item instanceof Cache && style instanceof Cache) {\n            const curIndex = this._keys.indexOf(style.id);\n            const prevItemChangeId = item.changeId;\n            item.merge(style);\n            if (item.changeId !== prevItemChangeId) {\n                this.sheet.splice(curIndex, 1, item.getStyles());\n                this.changeId++;\n                this.changes.change(item, curIndex, curIndex);\n            }\n        }\n    }\n    remove(style) {\n        const count = this._counters[style.id];\n        if (count) {\n            this._counters[style.id] = count - 1;\n            const item = this._children[style.id];\n            const index = this._keys.indexOf(item.id);\n            if (count === 1) {\n                delete this._counters[style.id];\n                delete this._children[style.id];\n                this._keys.splice(index, 1);\n                this.sheet.splice(index, 1);\n                this.changeId++;\n                this.changes.remove(item, index);\n            }\n            else if (item instanceof Cache && style instanceof Cache) {\n                const prevChangeId = item.changeId;\n                item.unmerge(style);\n                if (item.changeId !== prevChangeId) {\n                    this.sheet.splice(index, 1, item.getStyles());\n                    this.changeId++;\n                    this.changes.change(item, index, index);\n                }\n            }\n        }\n    }\n    values() {\n        return this._keys.map(key => this._children[key]);\n    }\n    merge(cache) {\n        for (const item of cache.values())\n            this.add(item);\n        return this;\n    }\n    unmerge(cache) {\n        for (const item of cache.values())\n            this.remove(item);\n        return this;\n    }\n    clone() {\n        return new Cache().merge(this);\n    }\n}\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector {\n    constructor(selector, id) {\n        this.selector = selector;\n        this.id = id;\n    }\n    getStyles() {\n        return this.selector;\n    }\n    clone() {\n        return this;\n    }\n}\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache {\n    constructor(style, id) {\n        super();\n        this.style = style;\n        this.id = id;\n    }\n    getStyles() {\n        return `${this.sheet.join(\",\")}{${this.style}}`;\n    }\n    clone() {\n        return new Style(this.style, this.id).merge(this);\n    }\n}\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache {\n    constructor(rule, style, id) {\n        super();\n        this.rule = rule;\n        this.style = style;\n        this.id = id;\n    }\n    getStyles() {\n        return `${this.rule}{${this.style}${join(this.sheet)}}`;\n    }\n    clone() {\n        return new Rule(this.rule, this.style, this.id).merge(this);\n    }\n}\nfunction key(pid, styles) {\n    const key = `f${stringHash(pid)}`;\n    if (process.env.NODE_ENV === \"production\" || !styles.$displayName)\n        return key;\n    return `${styles.$displayName}_${key}`;\n}\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache {\n    constructor(id, changes) {\n        super(changes);\n        this.id = id;\n    }\n    registerStyle(styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(\"&\", styles, rulesList, stylesList);\n        const id = key(pid, styles);\n        const selector = `.${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n        composeStylize(this, pid, rulesList, stylesList, selector, true);\n        return id;\n    }\n    registerKeyframes(keyframes) {\n        return this.registerHashRule(\"@keyframes\", keyframes);\n    }\n    registerHashRule(prefix, styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(\"\", styles, rulesList, stylesList);\n        const id = key(pid, styles);\n        const selector = `${prefix} ${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n        const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n        composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n        this.add(rule);\n        return id;\n    }\n    registerRule(rule, styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(rule, styles, rulesList, stylesList);\n        composeStylize(this, pid, rulesList, stylesList, \"\", false);\n    }\n    registerCss(styles) {\n        return this.registerRule(\"\", styles);\n    }\n    getStyles() {\n        return join(this.sheet);\n    }\n    clone() {\n        return new FreeStyle(this.id, this.changes).merge(this);\n    }\n}\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create(changes) {\n    return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}\n//# sourceMappingURL=index.js.map","/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\nexport function convertToStyles(object) {\n    /** The final result we will return */\n    var styles = {};\n    for (var key in object) {\n        /** Grab the value upfront */\n        var val = object[key];\n        /** TypeStyle configuration options */\n        if (key === '$nest') {\n            var nested = val;\n            for (var selector in nested) {\n                var subproperties = nested[selector];\n                styles[selector] = convertToStyles(subproperties);\n            }\n        }\n        else if (key === '$debugName') {\n            styles.$displayName = val;\n        }\n        else {\n            styles[key] = val;\n        }\n    }\n    return styles;\n}\n// todo: better name here\nexport function convertToKeyframes(frames) {\n    var result = {};\n    for (var offset in frames) {\n        if (offset !== '$debugName') {\n            result[offset] = frames[offset];\n        }\n    }\n    if (frames.$debugName) {\n        result.$displayName = frames.$debugName;\n    }\n    return result;\n}\n","/** Raf for node + browser */\nexport var raf = typeof requestAnimationFrame === 'undefined'\n    /**\n     * Make sure setTimeout is always invoked with\n     * `this` set to `window` or `global` automatically\n     **/\n    ? function (cb) { return setTimeout(cb); }\n    /**\n     * Make sure window.requestAnimationFrame is always invoked with `this` window\n     * We might have raf without window in case of `raf/polyfill` (recommended by React)\n     **/\n    : typeof window === 'undefined'\n        ? requestAnimationFrame\n        : requestAnimationFrame.bind(window);\n/**\n * Utility to join classes conditionally\n */\nexport function classes() {\n    var classes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        classes[_i] = arguments[_i];\n    }\n    return classes\n        .map(function (c) { return c && typeof c === 'object' ? Object.keys(c).map(function (key) { return !!c[key] && key; }) : [c]; })\n        .reduce(function (flattened, c) { return flattened.concat(c); }, [])\n        .filter(function (c) { return !!c; })\n        .join(' ');\n}\n/**\n * Merges various styles into a single style object.\n * Note: if two objects have the same property the last one wins\n */\nexport function extend() {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    /** The final result we will return */\n    var result = {};\n    for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {\n        var object = objects_1[_a];\n        if (object == null || object === false) {\n            continue;\n        }\n        for (var key in object) {\n            /** Falsy values except a explicit 0 is ignored */\n            var val = object[key];\n            if (!val && val !== 0) {\n                continue;\n            }\n            /** if nested media or pseudo selector */\n            if (key === '$nest' && val) {\n                result[key] = result['$nest'] ? extend(result['$nest'], val) : val;\n            }\n            /** if freestyle sub key that needs merging. We come here due to our recursive calls */\n            else if ((key.indexOf('&') !== -1 || key.indexOf('@media') === 0)) {\n                result[key] = result[key] ? extend(result[key], val) : val;\n            }\n            else {\n                result[key] = val;\n            }\n        }\n    }\n    return result;\n}\n/**\n * Utility to help customize styles with media queries. e.g.\n * ```\n * style(\n *  media({maxWidth:500}, {color:'red'})\n * )\n * ```\n */\nexport var media = function (mediaQuery) {\n    var _a;\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    var mediaQuerySections = [];\n    if (mediaQuery.type)\n        mediaQuerySections.push(mediaQuery.type);\n    if (mediaQuery.orientation)\n        mediaQuerySections.push(\"(orientation: \" + mediaQuery.orientation + \")\");\n    if (mediaQuery.minWidth)\n        mediaQuerySections.push(\"(min-width: \" + mediaLength(mediaQuery.minWidth) + \")\");\n    if (mediaQuery.maxWidth)\n        mediaQuerySections.push(\"(max-width: \" + mediaLength(mediaQuery.maxWidth) + \")\");\n    if (mediaQuery.minHeight)\n        mediaQuerySections.push(\"(min-height: \" + mediaLength(mediaQuery.minHeight) + \")\");\n    if (mediaQuery.maxHeight)\n        mediaQuerySections.push(\"(max-height: \" + mediaLength(mediaQuery.maxHeight) + \")\");\n    var stringMediaQuery = \"@media \" + mediaQuerySections.join(' and ');\n    var object = {\n        $nest: (_a = {},\n            _a[stringMediaQuery] = extend.apply(void 0, objects),\n            _a)\n    };\n    return object;\n};\nvar mediaLength = function (value) {\n    return typeof value === 'string' ? value : value + \"px\";\n};\n","import * as FreeStyle from \"free-style\";\nimport { convertToStyles, convertToKeyframes } from './formatting';\nimport { extend, raf } from './utilities';\n/**\n * Creates an instance of free style with our options\n */\nvar createFreeStyle = function () { return FreeStyle.create(); };\n/**\n * Maintains a single stylesheet and keeps it in sync with requested styles\n */\nvar TypeStyle = /** @class */ (function () {\n    function TypeStyle(_a) {\n        var _this = this;\n        var autoGenerateTag = _a.autoGenerateTag;\n        /**\n         * Insert `raw` CSS as a string. This is useful for e.g.\n         * - third party CSS that you are customizing with template strings\n         * - generating raw CSS in JavaScript\n         * - reset libraries like normalize.css that you can use without loaders\n         */\n        this.cssRaw = function (mustBeValidCSS) {\n            if (!mustBeValidCSS) {\n                return;\n            }\n            _this._raw += mustBeValidCSS || '';\n            _this._pendingRawChange = true;\n            _this._styleUpdated();\n        };\n        /**\n         * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n         */\n        this.cssRule = function (selector) {\n            var objects = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                objects[_i - 1] = arguments[_i];\n            }\n            var styles = convertToStyles(extend.apply(void 0, objects));\n            _this._freeStyle.registerRule(selector, styles);\n            _this._styleUpdated();\n            return;\n        };\n        /**\n         * Renders styles to the singleton tag imediately\n         * NOTE: You should only call it on initial render to prevent any non CSS flash.\n         * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n         **/\n        this.forceRenderStyles = function () {\n            var target = _this._getTag();\n            if (!target) {\n                return;\n            }\n            target.textContent = _this.getStyles();\n        };\n        /**\n         * Utility function to register an @font-face\n         */\n        this.fontFace = function () {\n            var fontFace = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                fontFace[_i] = arguments[_i];\n            }\n            var freeStyle = _this._freeStyle;\n            for (var _a = 0, _b = fontFace; _a < _b.length; _a++) {\n                var face = _b[_a];\n                freeStyle.registerRule('@font-face', face);\n            }\n            _this._styleUpdated();\n            return;\n        };\n        /**\n         * Allows use to use the stylesheet in a node.js environment\n         */\n        this.getStyles = function () {\n            return (_this._raw || '') + _this._freeStyle.getStyles();\n        };\n        /**\n         * Takes keyframes and returns a generated animationName\n         */\n        this.keyframes = function (frames) {\n            var keyframes = convertToKeyframes(frames);\n            // TODO: replace $debugName with display name\n            var animationName = _this._freeStyle.registerKeyframes(keyframes);\n            _this._styleUpdated();\n            return animationName;\n        };\n        /**\n         * Helps with testing. Reinitializes FreeStyle + raw\n         */\n        this.reinit = function () {\n            /** reinit freestyle */\n            var freeStyle = createFreeStyle();\n            _this._freeStyle = freeStyle;\n            _this._lastFreeStyleChangeId = freeStyle.changeId;\n            /** reinit raw */\n            _this._raw = '';\n            _this._pendingRawChange = false;\n            /** Clear any styles that were flushed */\n            var target = _this._getTag();\n            if (target) {\n                target.textContent = '';\n            }\n        };\n        /** Sets the target tag where we write the css on style updates */\n        this.setStylesTarget = function (tag) {\n            /** Clear any data in any previous tag */\n            if (_this._tag) {\n                _this._tag.textContent = '';\n            }\n            _this._tag = tag;\n            /** This special time buffer immediately */\n            _this.forceRenderStyles();\n        };\n        /**\n         * Takes an object where property names are ideal class names and property values are CSSProperties, and\n         * returns an object where property names are the same ideal class names and the property values are\n         * the actual generated class names using the ideal class name as the $debugName\n         */\n        this.stylesheet = function (classes) {\n            var classNames = Object.getOwnPropertyNames(classes);\n            var result = {};\n            for (var _i = 0, classNames_1 = classNames; _i < classNames_1.length; _i++) {\n                var className = classNames_1[_i];\n                var classDef = classes[className];\n                if (classDef) {\n                    classDef.$debugName = className;\n                    result[className] = _this.style(classDef);\n                }\n            }\n            return result;\n        };\n        var freeStyle = createFreeStyle();\n        this._autoGenerateTag = autoGenerateTag;\n        this._freeStyle = freeStyle;\n        this._lastFreeStyleChangeId = freeStyle.changeId;\n        this._pending = 0;\n        this._pendingRawChange = false;\n        this._raw = '';\n        this._tag = undefined;\n        // rebind prototype to TypeStyle.  It might be better to do a function() { return this.style.apply(this, arguments)}\n        this.style = this.style.bind(this);\n    }\n    /**\n     * Only calls cb all sync operations settle\n     */\n    TypeStyle.prototype._afterAllSync = function (cb) {\n        var _this = this;\n        this._pending++;\n        var pending = this._pending;\n        raf(function () {\n            if (pending !== _this._pending) {\n                return;\n            }\n            cb();\n        });\n    };\n    TypeStyle.prototype._getTag = function () {\n        if (this._tag) {\n            return this._tag;\n        }\n        if (this._autoGenerateTag) {\n            var tag = typeof window === 'undefined'\n                ? { textContent: '' }\n                : document.createElement('style');\n            if (typeof document !== 'undefined') {\n                document.head.appendChild(tag);\n            }\n            this._tag = tag;\n            return tag;\n        }\n        return undefined;\n    };\n    /** Checks if the style tag needs updating and if so queues up the change */\n    TypeStyle.prototype._styleUpdated = function () {\n        var _this = this;\n        var changeId = this._freeStyle.changeId;\n        var lastChangeId = this._lastFreeStyleChangeId;\n        if (!this._pendingRawChange && changeId === lastChangeId) {\n            return;\n        }\n        this._lastFreeStyleChangeId = changeId;\n        this._pendingRawChange = false;\n        this._afterAllSync(function () { return _this.forceRenderStyles(); });\n    };\n    TypeStyle.prototype.style = function () {\n        var className = this._freeStyle.registerStyle(convertToStyles(extend.apply(undefined, arguments)));\n        this._styleUpdated();\n        return className;\n    };\n    return TypeStyle;\n}());\nexport { TypeStyle };\n","import { TypeStyle } from './internal/typestyle';\nexport { TypeStyle };\n/**\n * All the CSS types in the 'types' namespace\n */\nimport * as types from './types';\nexport { types };\n/**\n * Export certain utilities\n */\nexport { extend, classes, media } from './internal/utilities';\n/** Zero configuration, default instance of TypeStyle */\nvar ts = new TypeStyle({ autoGenerateTag: true });\n/** Sets the target tag where we write the css on style updates */\nexport var setStylesTarget = ts.setStylesTarget;\n/**\n * Insert `raw` CSS as a string. This is useful for e.g.\n * - third party CSS that you are customizing with template strings\n * - generating raw CSS in JavaScript\n * - reset libraries like normalize.css that you can use without loaders\n */\nexport var cssRaw = ts.cssRaw;\n/**\n * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n */\nexport var cssRule = ts.cssRule;\n/**\n * Renders styles to the singleton tag imediately\n * NOTE: You should only call it on initial render to prevent any non CSS flash.\n * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n **/\nexport var forceRenderStyles = ts.forceRenderStyles;\n/**\n * Utility function to register an @font-face\n */\nexport var fontFace = ts.fontFace;\n/**\n * Allows use to use the stylesheet in a node.js environment\n */\nexport var getStyles = ts.getStyles;\n/**\n * Takes keyframes and returns a generated animationName\n */\nexport var keyframes = ts.keyframes;\n/**\n * Helps with testing. Reinitializes FreeStyle + raw\n */\nexport var reinit = ts.reinit;\n/**\n * Takes CSSProperties and return a generated className you can use on your component\n */\nexport var style = ts.style;\n/**\n * Takes an object where property names are ideal class names and property values are CSSProperties, and\n * returns an object where property names are the same ideal class names and the property values are\n * the actual generated class names using the ideal class name as the $debugName\n */\nexport var stylesheet = ts.stylesheet;\n/**\n * Creates a new instance of TypeStyle separate from the default instance.\n *\n * - Use this for creating a different typestyle instance for a shadow dom component.\n * - Use this if you don't want an auto tag generated and you just want to collect the CSS.\n *\n * NOTE: styles aren't shared between different instances.\n */\nexport function createTypeStyle(target) {\n    var instance = new TypeStyle({ autoGenerateTag: false });\n    if (target) {\n        instance.setStylesTarget(target);\n    }\n    return instance;\n}\n"],"names":["uniqueId","CSS_NUMBER","Object","create","CSS_NUMBER_KEYS","property","prefix","styleToString","key","value","sortTuples","sort","a","b","stringifyProperties","properties","map","name","Array","isArray","x","join","interpolate","selector","parent","indexOf","replace","stylize","styles","rulesList","stylesList","style","nested","isUnique","hasNestedStyles","nestedStyles","keys","trim","charCodeAt","push","propertyName","m","toLowerCase","$unique","parseStyles","pid","child","rules","composeStylize","cache","className","isStyle","id","toString","item","Style","add","Selector","Rule","arr","res","i","length","noopChanges","change","remove","Cache","constructor","changes","this","sheet","changeId","_keys","_children","_counters","count","clone","getStyles","curIndex","prevItemChangeId","merge","splice","index","prevChangeId","unmerge","values","super","rule","str","len","stringHash","FreeStyle","registerStyle","registerKeyframes","keyframes","registerHashRule","registerRule","registerCss","convertToStyles","object","val","subproperties","$displayName","raf","requestAnimationFrame","cb","setTimeout","window","bind","classes","_i","arguments","c","reduce","flattened","concat","filter","extend","objects","result","_a","objects_1","media","mediaQuery","mediaQuerySections","type","orientation","minWidth","mediaLength","maxWidth","minHeight","maxHeight","stringMediaQuery","$nest","apply","createFreeStyle","TypeStyle","_this","autoGenerateTag","cssRaw","mustBeValidCSS","_raw","_pendingRawChange","_styleUpdated","cssRule","_freeStyle","forceRenderStyles","target","_getTag","textContent","fontFace","freeStyle","_b","face","frames","offset","$debugName","convertToKeyframes","animationName","reinit","_lastFreeStyleChangeId","setStylesTarget","tag","_tag","stylesheet","classNames_1","getOwnPropertyNames","classDef","_autoGenerateTag","_pending","undefined","prototype","_afterAllSync","pending","document","createElement","head","appendChild","lastChangeId","ts","createTypeStyle","instance"],"sourceRoot":""}