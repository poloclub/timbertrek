{"version":3,"file":"1337.07b9cea.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/running/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module running\n */\nimport { Dialog, ReactWidget, showDialog, ToolbarButtonComponent, UseSignal } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { closeIcon, refreshIcon } from '@jupyterlab/ui-components';\nimport { Token } from '@lumino/coreutils';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport * as React from 'react';\n/**\n * The class name added to a running widget.\n */\nconst RUNNING_CLASS = 'jp-RunningSessions';\n/**\n * The class name added to a running widget header.\n */\nconst HEADER_CLASS = 'jp-RunningSessions-header';\n/**\n * The class name added to the running terminal sessions section.\n */\nconst SECTION_CLASS = 'jp-RunningSessions-section';\n/**\n * The class name added to the running sessions section header.\n */\nconst SECTION_HEADER_CLASS = 'jp-RunningSessions-sectionHeader';\n/**\n * The class name added to a section container.\n */\nconst CONTAINER_CLASS = 'jp-RunningSessions-sectionContainer';\n/**\n * The class name added to the running kernel sessions section list.\n */\nconst LIST_CLASS = 'jp-RunningSessions-sectionList';\n/**\n * The class name added to the running sessions items.\n */\nconst ITEM_CLASS = 'jp-RunningSessions-item';\n/**\n * The class name added to a running session item label.\n */\nconst ITEM_LABEL_CLASS = 'jp-RunningSessions-itemLabel';\n/**\n * The class name added to a running session item detail.\n */\nconst ITEM_DETAIL_CLASS = 'jp-RunningSessions-itemDetail';\n/**\n * The class name added to a running session item shutdown button.\n */\nconst SHUTDOWN_BUTTON_CLASS = 'jp-RunningSessions-itemShutdown';\n/**\n * The class name added to a running session item shutdown button.\n */\nconst SHUTDOWN_ALL_BUTTON_CLASS = 'jp-RunningSessions-shutdownAll';\n/* tslint:disable */\n/**\n * The running sessions token.\n */\nexport const IRunningSessionManagers = new Token('@jupyterlab/running:IRunningSessionManagers');\nexport class RunningSessionManagers {\n    constructor() {\n        this._managers = [];\n    }\n    /**\n     * Add a running item manager.\n     *\n     * @param manager - The running item manager.\n     *\n     */\n    add(manager) {\n        this._managers.push(manager);\n        return new DisposableDelegate(() => {\n            const i = this._managers.indexOf(manager);\n            if (i > -1) {\n                this._managers.splice(i, 1);\n            }\n        });\n    }\n    /**\n     * Return an iterator of launcher items.\n     */\n    items() {\n        return this._managers;\n    }\n}\nfunction Item(props) {\n    var _a;\n    const { runningItem } = props;\n    const icon = runningItem.icon();\n    const detail = (_a = runningItem.detail) === null || _a === void 0 ? void 0 : _a.call(runningItem);\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    const shutdownLabel = props.shutdownLabel || trans.__('Shut Down');\n    const shutdownItemIcon = props.shutdownItemIcon || closeIcon;\n    return (React.createElement(\"li\", { className: ITEM_CLASS },\n        React.createElement(icon.react, { tag: \"span\", stylesheet: \"runningItem\" }),\n        React.createElement(\"span\", { className: ITEM_LABEL_CLASS, title: runningItem.labelTitle ? runningItem.labelTitle() : '', onClick: () => runningItem.open() }, runningItem.label()),\n        detail && React.createElement(\"span\", { className: ITEM_DETAIL_CLASS }, detail),\n        React.createElement(ToolbarButtonComponent, { className: SHUTDOWN_BUTTON_CLASS, icon: shutdownItemIcon, onClick: () => runningItem.shutdown(), tooltip: shutdownLabel })));\n}\nfunction ListView(props) {\n    return (React.createElement(\"ul\", { className: LIST_CLASS }, props.runningItems.map((item, i) => (React.createElement(Item, { key: i, runningItem: item, shutdownLabel: props.shutdownLabel, shutdownItemIcon: props.shutdownItemIcon, translator: props.translator })))));\n}\nfunction List(props) {\n    return (React.createElement(UseSignal, { signal: props.manager.runningChanged }, () => (React.createElement(ListView, { runningItems: props.manager.running(), shutdownLabel: props.shutdownLabel, shutdownAllLabel: props.shutdownAllLabel, shutdownItemIcon: props.manager.shutdownItemIcon, translator: props.translator }))));\n}\n/**\n * The Section component contains the shared look and feel for an interactive\n * list of kernels and sessions.\n *\n * It is specialized for each based on its props.\n */\nfunction Section(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    const shutdownAllLabel = props.manager.shutdownAllLabel || trans.__('Shut Down All');\n    const shutdownTitle = `${shutdownAllLabel}?`;\n    const shutdownAllConfirmationText = props.manager.shutdownAllConfirmationText ||\n        `${shutdownAllLabel} ${props.manager.name}`;\n    function onShutdown() {\n        void showDialog({\n            title: shutdownTitle,\n            body: shutdownAllConfirmationText,\n            buttons: [\n                Dialog.cancelButton({ label: trans.__('Cancel') }),\n                Dialog.warnButton({ label: shutdownAllLabel })\n            ]\n        }).then(result => {\n            if (result.button.accept) {\n                props.manager.shutdownAll();\n            }\n        });\n    }\n    return (React.createElement(\"div\", { className: SECTION_CLASS },\n        React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: `${SECTION_HEADER_CLASS} jp-stack-panel-header` },\n                React.createElement(\"h2\", null, props.manager.name),\n                React.createElement(UseSignal, { signal: props.manager.runningChanged }, () => {\n                    const disabled = props.manager.running().length === 0;\n                    return (React.createElement(\"button\", { className: `${SHUTDOWN_ALL_BUTTON_CLASS} jp-mod-styled ${disabled && 'jp-mod-disabled'}`, disabled: disabled, onClick: onShutdown }, shutdownAllLabel));\n                })),\n            React.createElement(\"div\", { className: CONTAINER_CLASS },\n                React.createElement(List, { manager: props.manager, shutdownLabel: props.manager.shutdownLabel, shutdownAllLabel: shutdownAllLabel, translator: props.translator })))));\n}\nfunction RunningSessionsComponent(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: HEADER_CLASS },\n            React.createElement(ToolbarButtonComponent, { tooltip: trans.__('Refresh List'), icon: refreshIcon, onClick: () => props.managers.items().forEach(manager => manager.refreshRunning()) })),\n        props.managers.items().map(manager => (React.createElement(Section, { key: manager.name, manager: manager, translator: props.translator })))));\n}\n/**\n * A class that exposes the running terminal and kernel sessions.\n */\nexport class RunningSessions extends ReactWidget {\n    /**\n     * Construct a new running widget.\n     */\n    constructor(managers, translator) {\n        super();\n        this.managers = managers;\n        this.translator = translator || nullTranslator;\n        // this can't be in the react element, because then it would be too nested\n        this.addClass(RUNNING_CLASS);\n    }\n    render() {\n        return (React.createElement(RunningSessionsComponent, { managers: this.managers, translator: this.translator }));\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["IRunningSessionManagers","Token","RunningSessionManagers","constructor","this","_managers","add","manager","push","DisposableDelegate","i","indexOf","splice","items","Item","props","_a","runningItem","icon","detail","call","trans","translator","nullTranslator","load","shutdownLabel","__","shutdownItemIcon","closeIcon","className","react","tag","stylesheet","title","labelTitle","onClick","open","label","ToolbarButtonComponent","shutdown","tooltip","ListView","runningItems","map","item","key","List","UseSignal","signal","runningChanged","running","shutdownAllLabel","Section","shutdownTitle","shutdownAllConfirmationText","name","onShutdown","showDialog","body","buttons","Dialog","then","result","button","accept","shutdownAll","disabled","length","RunningSessionsComponent","refreshIcon","managers","forEach","refreshRunning","RunningSessions","ReactWidget","super","addClass","render"],"sourceRoot":""}