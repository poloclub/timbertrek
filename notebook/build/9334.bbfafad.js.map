{"version":3,"file":"9334.bbfafad.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/mock-socket/dist/mock-socket.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.Mock = global.Mock || {})));\n}(this, (function (exports) { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nvar requiresPort = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) { return false; }\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\nvar has = Object.prototype.hasOwnProperty;\nvar undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) { continue; }\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) { prefix = '?'; }\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) { continue; }\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nvar stringify = querystringify;\nvar parse = querystring;\n\nvar querystringify_1 = {\n\tstringify: stringify,\n\tparse: parse\n};\n\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\nvar protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i;\nvar whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]';\nvar left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') { globalVar = window; }\n  else if (typeof commonjsGlobal !== 'undefined') { globalVar = commonjsGlobal; }\n  else if (typeof self !== 'undefined') { globalVar = self; }\n  else { globalVar = {}; }\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) { delete finaldestination[key]; }\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) { continue; }\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4];\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') { return base; }\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) { unshift = true; }\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) { path.unshift(''); }\n  if (last === '.' || last === '..') { path.push(''); }\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) { parser = querystringify_1.parse; }\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    url.protocol === 'file:' ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) { url[key] = url[key].toLowerCase(); }\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) { url.query = parser(url.query); }\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!requiresPort(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || querystringify_1.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!requiresPort(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) { value += ':'+ url.port; }\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) { url[ins[1]] = url[ins[1]].toLowerCase(); }\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) { stringify = querystringify_1.stringify; }\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') { protocol += ':'; }\n\n  var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) { result += ':'+ url.password; }\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) { result += '?' !== query.charAt(0) ? '?'+ query : query; }\n\n  if (url.hash) { result += url.hash; }\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = querystringify_1;\n\nvar urlParse = Url;\n\n/*\n * This delay allows the thread to finish assigning its on* methods\n * before invoking the delay callback. This is purely a timing hack.\n * http://geekabyte.blogspot.com/2014/01/javascript-effect-of-setting-settimeout.html\n *\n * @param {callback: function} the callback which will be invoked after the timeout\n * @parma {context: object} the context in which to invoke the function\n */\nfunction delay(callback, context) {\n  setTimeout(function (timeoutContext) { return callback.call(timeoutContext); }, 4, context);\n}\n\nfunction log(method, message) {\n  /* eslint-disable no-console */\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'test') {\n    console[method].call(null, message);\n  }\n  /* eslint-enable no-console */\n}\n\nfunction reject(array, callback) {\n  if ( array === void 0 ) array = [];\n\n  var results = [];\n  array.forEach(function (itemInArray) {\n    if (!callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\nfunction filter(array, callback) {\n  if ( array === void 0 ) array = [];\n\n  var results = [];\n  array.forEach(function (itemInArray) {\n    if (callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\n/*\n * EventTarget is an interface implemented by objects that can\n * receive events and may have listeners for them.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n */\nvar EventTarget = function EventTarget() {\n  this.listeners = {};\n};\n\n/*\n * Ties a listener function to an event type which can later be invoked via the\n * dispatchEvent method.\n *\n * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n */\nEventTarget.prototype.addEventListener = function addEventListener (type, listener /* , useCapture */) {\n  if (typeof listener === 'function') {\n    if (!Array.isArray(this.listeners[type])) {\n      this.listeners[type] = [];\n    }\n\n    // Only add the same function once\n    if (filter(this.listeners[type], function (item) { return item === listener; }).length === 0) {\n      this.listeners[type].push(listener);\n    }\n  }\n};\n\n/*\n * Removes the listener so it will no longer be invoked via the dispatchEvent method.\n *\n * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n */\nEventTarget.prototype.removeEventListener = function removeEventListener (type, removingListener /* , useCapture */) {\n  var arrayOfListeners = this.listeners[type];\n  this.listeners[type] = reject(arrayOfListeners, function (listener) { return listener === removingListener; });\n};\n\n/*\n * Invokes all listener functions that are listening to the given event.type property. Each\n * listener will be passed the event as the first argument.\n *\n * @param {object} event - event object which will be passed to all listeners of the event.type property\n */\nEventTarget.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n    var customArguments = [], len = arguments.length - 1;\n    while ( len-- > 0 ) customArguments[ len ] = arguments[ len + 1 ];\n\n  var eventName = event.type;\n  var listeners = this.listeners[eventName];\n\n  if (!Array.isArray(listeners)) {\n    return false;\n  }\n\n  listeners.forEach(function (listener) {\n    if (customArguments.length > 0) {\n      listener.apply(this$1, customArguments);\n    } else {\n      listener.call(this$1, event);\n    }\n  });\n\n  return true;\n};\n\nfunction trimQueryPartFromURL(url) {\n  var queryIndex = url.indexOf('?');\n  return queryIndex >= 0 ? url.slice(0, queryIndex) : url;\n}\n\n/*\n * The network bridge is a way for the mock websocket object to 'communicate' with\n * all available servers. This is a singleton object so it is important that you\n * clean up urlMap whenever you are finished.\n */\nvar NetworkBridge = function NetworkBridge() {\n  this.urlMap = {};\n};\n\n/*\n * Attaches a websocket object to the urlMap hash so that it can find the server\n * it is connected to and the server in turn can find it.\n *\n * @param {object} websocket - websocket object to add to the urlMap hash\n * @param {string} url\n */\nNetworkBridge.prototype.attachWebSocket = function attachWebSocket (websocket, url) {\n  var serverURL = trimQueryPartFromURL(url);\n  var connectionLookup = this.urlMap[serverURL];\n\n  if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) === -1) {\n    connectionLookup.websockets.push(websocket);\n    return connectionLookup.server;\n  }\n};\n\n/*\n * Attaches a websocket to a room\n */\nNetworkBridge.prototype.addMembershipToRoom = function addMembershipToRoom (websocket, room) {\n  var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n\n  if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) !== -1) {\n    if (!connectionLookup.roomMemberships[room]) {\n      connectionLookup.roomMemberships[room] = [];\n    }\n\n    connectionLookup.roomMemberships[room].push(websocket);\n  }\n};\n\n/*\n * Attaches a server object to the urlMap hash so that it can find a websockets\n * which are connected to it and so that websockets can in turn can find it.\n *\n * @param {object} server - server object to add to the urlMap hash\n * @param {string} url\n */\nNetworkBridge.prototype.attachServer = function attachServer (server, url) {\n  var serverUrl = trimQueryPartFromURL(url);\n  var connectionLookup = this.urlMap[serverUrl];\n\n  if (!connectionLookup) {\n    this.urlMap[serverUrl] = {\n      server: server,\n      websockets: [],\n      roomMemberships: {}\n    };\n\n    return server;\n  }\n};\n\n/*\n * Finds the server which is 'running' on the given url.\n *\n * @param {string} url - the url to use to find which server is running on it\n */\nNetworkBridge.prototype.serverLookup = function serverLookup (url) {\n  var serverURL = trimQueryPartFromURL(url);\n  var connectionLookup = this.urlMap[serverURL];\n\n  if (connectionLookup) {\n    return connectionLookup.server;\n  }\n};\n\n/*\n * Finds all websockets which is 'listening' on the given url.\n *\n * @param {string} url - the url to use to find all websockets which are associated with it\n * @param {string} room - if a room is provided, will only return sockets in this room\n * @param {class} broadcaster - socket that is broadcasting and is to be excluded from the lookup\n */\nNetworkBridge.prototype.websocketsLookup = function websocketsLookup (url, room, broadcaster) {\n  var serverURL = trimQueryPartFromURL(url);\n  var websockets;\n  var connectionLookup = this.urlMap[serverURL];\n\n  websockets = connectionLookup ? connectionLookup.websockets : [];\n\n  if (room) {\n    var members = connectionLookup.roomMemberships[room];\n    websockets = members || [];\n  }\n\n  return broadcaster ? websockets.filter(function (websocket) { return websocket !== broadcaster; }) : websockets;\n};\n\n/*\n * Removes the entry associated with the url.\n *\n * @param {string} url\n */\nNetworkBridge.prototype.removeServer = function removeServer (url) {\n  delete this.urlMap[trimQueryPartFromURL(url)];\n};\n\n/*\n * Removes the individual websocket from the map of associated websockets.\n *\n * @param {object} websocket - websocket object to remove from the url map\n * @param {string} url\n */\nNetworkBridge.prototype.removeWebSocket = function removeWebSocket (websocket, url) {\n  var serverURL = trimQueryPartFromURL(url);\n  var connectionLookup = this.urlMap[serverURL];\n\n  if (connectionLookup) {\n    connectionLookup.websockets = reject(connectionLookup.websockets, function (socket) { return socket === websocket; });\n  }\n};\n\n/*\n * Removes a websocket from a room\n */\nNetworkBridge.prototype.removeMembershipFromRoom = function removeMembershipFromRoom (websocket, room) {\n  var connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n  var memberships = connectionLookup.roomMemberships[room];\n\n  if (connectionLookup && memberships !== null) {\n    connectionLookup.roomMemberships[room] = reject(memberships, function (socket) { return socket === websocket; });\n  }\n};\n\nvar networkBridge = new NetworkBridge(); // Note: this is a singleton\n\n/*\n * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n */\nvar CLOSE_CODES = {\n  CLOSE_NORMAL: 1000,\n  CLOSE_GOING_AWAY: 1001,\n  CLOSE_PROTOCOL_ERROR: 1002,\n  CLOSE_UNSUPPORTED: 1003,\n  CLOSE_NO_STATUS: 1005,\n  CLOSE_ABNORMAL: 1006,\n  UNSUPPORTED_DATA: 1007,\n  POLICY_VIOLATION: 1008,\n  CLOSE_TOO_LARGE: 1009,\n  MISSING_EXTENSION: 1010,\n  INTERNAL_ERROR: 1011,\n  SERVICE_RESTART: 1012,\n  TRY_AGAIN_LATER: 1013,\n  TLS_HANDSHAKE: 1015\n};\n\nvar ERROR_PREFIX = {\n  CONSTRUCTOR_ERROR: \"Failed to construct 'WebSocket':\",\n  CLOSE_ERROR: \"Failed to execute 'close' on 'WebSocket':\",\n  EVENT: {\n    CONSTRUCT: \"Failed to construct 'Event':\",\n    MESSAGE: \"Failed to construct 'MessageEvent':\",\n    CLOSE: \"Failed to construct 'CloseEvent':\"\n  }\n};\n\nvar EventPrototype = function EventPrototype () {};\n\nEventPrototype.prototype.stopPropagation = function stopPropagation () {};\nEventPrototype.prototype.stopImmediatePropagation = function stopImmediatePropagation () {};\n\n// if no arguments are passed then the type is set to \"undefined\" on\n// chrome and safari.\nEventPrototype.prototype.initEvent = function initEvent (type, bubbles, cancelable) {\n    if ( type === void 0 ) type = 'undefined';\n    if ( bubbles === void 0 ) bubbles = false;\n    if ( cancelable === void 0 ) cancelable = false;\n\n  this.type = \"\" + type;\n  this.bubbles = Boolean(bubbles);\n  this.cancelable = Boolean(cancelable);\n};\n\nvar Event = (function (EventPrototype$$1) {\n  function Event(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(((ERROR_PREFIX.EVENT_ERROR) + \" 1 argument required, but only 0 present.\"));\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(((ERROR_PREFIX.EVENT_ERROR) + \" parameter 2 ('eventInitDict') is not an object.\"));\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n\n    this.type = \"\" + type;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.cancelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n  }\n\n  if ( EventPrototype$$1 ) Event.__proto__ = EventPrototype$$1;\n  Event.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  Event.prototype.constructor = Event;\n\n  return Event;\n}(EventPrototype));\n\nvar MessageEvent = (function (EventPrototype$$1) {\n  function MessageEvent(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(((ERROR_PREFIX.EVENT.MESSAGE) + \" 1 argument required, but only 0 present.\"));\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(((ERROR_PREFIX.EVENT.MESSAGE) + \" parameter 2 ('eventInitDict') is not an object\"));\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n    var data = eventInitConfig.data;\n    var origin = eventInitConfig.origin;\n    var lastEventId = eventInitConfig.lastEventId;\n    var ports = eventInitConfig.ports;\n\n    this.type = \"\" + type;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.origin = \"\" + origin;\n    this.ports = typeof ports === 'undefined' ? null : ports;\n    this.data = typeof data === 'undefined' ? null : data;\n    this.lastEventId = \"\" + (lastEventId || '');\n  }\n\n  if ( EventPrototype$$1 ) MessageEvent.__proto__ = EventPrototype$$1;\n  MessageEvent.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  MessageEvent.prototype.constructor = MessageEvent;\n\n  return MessageEvent;\n}(EventPrototype));\n\nvar CloseEvent = (function (EventPrototype$$1) {\n  function CloseEvent(type, eventInitConfig) {\n    if ( eventInitConfig === void 0 ) eventInitConfig = {};\n\n    EventPrototype$$1.call(this);\n\n    if (!type) {\n      throw new TypeError(((ERROR_PREFIX.EVENT.CLOSE) + \" 1 argument required, but only 0 present.\"));\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(((ERROR_PREFIX.EVENT.CLOSE) + \" parameter 2 ('eventInitDict') is not an object\"));\n    }\n\n    var bubbles = eventInitConfig.bubbles;\n    var cancelable = eventInitConfig.cancelable;\n    var code = eventInitConfig.code;\n    var reason = eventInitConfig.reason;\n    var wasClean = eventInitConfig.wasClean;\n\n    this.type = \"\" + type;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.cancelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.code = typeof code === 'number' ? parseInt(code, 10) : 0;\n    this.reason = \"\" + (reason || '');\n    this.wasClean = wasClean ? Boolean(wasClean) : false;\n  }\n\n  if ( EventPrototype$$1 ) CloseEvent.__proto__ = EventPrototype$$1;\n  CloseEvent.prototype = Object.create( EventPrototype$$1 && EventPrototype$$1.prototype );\n  CloseEvent.prototype.constructor = CloseEvent;\n\n  return CloseEvent;\n}(EventPrototype));\n\n/*\n * Creates an Event object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config you will need to pass type and optionally target\n */\nfunction createEvent(config) {\n  var type = config.type;\n  var target = config.target;\n  var eventObject = new Event(type);\n\n  if (target) {\n    eventObject.target = target;\n    eventObject.srcElement = target;\n    eventObject.currentTarget = target;\n  }\n\n  return eventObject;\n}\n\n/*\n * Creates a MessageEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type, origin, data and optionally target\n */\nfunction createMessageEvent(config) {\n  var type = config.type;\n  var origin = config.origin;\n  var data = config.data;\n  var target = config.target;\n  var messageEvent = new MessageEvent(type, {\n    data: data,\n    origin: origin\n  });\n\n  if (target) {\n    messageEvent.target = target;\n    messageEvent.srcElement = target;\n    messageEvent.currentTarget = target;\n  }\n\n  return messageEvent;\n}\n\n/*\n * Creates a CloseEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type and optionally target, code, and reason\n */\nfunction createCloseEvent(config) {\n  var code = config.code;\n  var reason = config.reason;\n  var type = config.type;\n  var target = config.target;\n  var wasClean = config.wasClean;\n\n  if (!wasClean) {\n    wasClean = code === CLOSE_CODES.CLOSE_NORMAL || code === CLOSE_CODES.CLOSE_NO_STATUS;\n  }\n\n  var closeEvent = new CloseEvent(type, {\n    code: code,\n    reason: reason,\n    wasClean: wasClean\n  });\n\n  if (target) {\n    closeEvent.target = target;\n    closeEvent.srcElement = target;\n    closeEvent.currentTarget = target;\n  }\n\n  return closeEvent;\n}\n\nfunction closeWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket$1.CLOSING;\n\n  var server = networkBridge.serverLookup(context.url);\n  var closeEvent = createCloseEvent({\n    type: 'close',\n    target: context.target,\n    code: code,\n    reason: reason\n  });\n\n  delay(function () {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket$1.CLOSED;\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n\nfunction failWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket$1.CLOSING;\n\n  var server = networkBridge.serverLookup(context.url);\n  var closeEvent = createCloseEvent({\n    type: 'close',\n    target: context.target,\n    code: code,\n    reason: reason,\n    wasClean: false\n  });\n\n  var errorEvent = createEvent({\n    type: 'error',\n    target: context.target\n  });\n\n  delay(function () {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket$1.CLOSED;\n    context.dispatchEvent(errorEvent);\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n\nfunction normalizeSendData(data) {\n  if (Object.prototype.toString.call(data) !== '[object Blob]' && !(data instanceof ArrayBuffer)) {\n    data = String(data);\n  }\n\n  return data;\n}\n\nvar proxies = new WeakMap();\n\nfunction proxyFactory(target) {\n  if (proxies.has(target)) {\n    return proxies.get(target);\n  }\n\n  var proxy = new Proxy(target, {\n    get: function get(obj, prop) {\n      if (prop === 'close') {\n        return function close(options) {\n          if ( options === void 0 ) options = {};\n\n          var code = options.code || CLOSE_CODES.CLOSE_NORMAL;\n          var reason = options.reason || '';\n\n          closeWebSocketConnection(proxy, code, reason);\n        };\n      }\n\n      if (prop === 'send') {\n        return function send(data) {\n          data = normalizeSendData(data);\n\n          target.dispatchEvent(\n            createMessageEvent({\n              type: 'message',\n              data: data,\n              origin: this.url,\n              target: target\n            })\n          );\n        };\n      }\n\n      if (prop === 'on') {\n        return function onWrapper(type, cb) {\n          target.addEventListener((\"server::\" + type), cb);\n        };\n      }\n\n      if (prop === 'target') {\n        return target;\n      }\n\n      return obj[prop];\n    }\n  });\n  proxies.set(target, proxy);\n\n  return proxy;\n}\n\nfunction lengthInUtf8Bytes(str) {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  var m = encodeURIComponent(str).match(/%[89ABab]/g);\n  return str.length + (m ? m.length : 0);\n}\n\nfunction urlVerification(url) {\n  var urlRecord = new urlParse(url);\n  var pathname = urlRecord.pathname;\n  var protocol = urlRecord.protocol;\n  var hash = urlRecord.hash;\n\n  if (!url) {\n    throw new TypeError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" 1 argument required, but only 0 present.\"));\n  }\n\n  if (!pathname) {\n    urlRecord.pathname = '/';\n  }\n\n  if (protocol === '') {\n    throw new SyntaxError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The URL '\" + (urlRecord.toString()) + \"' is invalid.\"));\n  }\n\n  if (protocol !== 'ws:' && protocol !== 'wss:') {\n    throw new SyntaxError(\n      ((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The URL's scheme must be either 'ws' or 'wss'. '\" + protocol + \"' is not allowed.\")\n    );\n  }\n\n  if (hash !== '') {\n    /* eslint-disable max-len */\n    throw new SyntaxError(\n      ((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The URL contains a fragment identifier ('\" + hash + \"'). Fragment identifiers are not allowed in WebSocket URLs.\")\n    );\n    /* eslint-enable max-len */\n  }\n\n  return urlRecord.toString();\n}\n\nfunction protocolVerification(protocols) {\n  if ( protocols === void 0 ) protocols = [];\n\n  if (!Array.isArray(protocols) && typeof protocols !== 'string') {\n    throw new SyntaxError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The subprotocol '\" + (protocols.toString()) + \"' is invalid.\"));\n  }\n\n  if (typeof protocols === 'string') {\n    protocols = [protocols];\n  }\n\n  var uniq = protocols\n    .map(function (p) { return ({ count: 1, protocol: p }); })\n    .reduce(function (a, b) {\n      a[b.protocol] = (a[b.protocol] || 0) + b.count;\n      return a;\n    }, {});\n\n  var duplicates = Object.keys(uniq).filter(function (a) { return uniq[a] > 1; });\n\n  if (duplicates.length > 0) {\n    throw new SyntaxError(((ERROR_PREFIX.CONSTRUCTOR_ERROR) + \" The subprotocol '\" + (duplicates[0]) + \"' is duplicated.\"));\n  }\n\n  return protocols;\n}\n\n/*\n * The main websocket class which is designed to mimick the native WebSocket class as close\n * as possible.\n *\n * https://html.spec.whatwg.org/multipage/web-sockets.html\n */\nvar WebSocket$1 = (function (EventTarget$$1) {\n  function WebSocket(url, protocols) {\n    EventTarget$$1.call(this);\n\n    this.url = urlVerification(url);\n    protocols = protocolVerification(protocols);\n    this.protocol = protocols[0] || '';\n\n    this.binaryType = 'blob';\n    this.readyState = WebSocket.CONNECTING;\n\n    var client = proxyFactory(this);\n    var server = networkBridge.attachWebSocket(client, this.url);\n\n    /*\n     * This delay is needed so that we dont trigger an event before the callbacks have been\n     * setup. For example:\n     *\n     * var socket = new WebSocket('ws://localhost');\n     *\n     * If we dont have the delay then the event would be triggered right here and this is\n     * before the onopen had a chance to register itself.\n     *\n     * socket.onopen = () => { // this would never be called };\n     *\n     * and with the delay the event gets triggered here after all of the callbacks have been\n     * registered :-)\n     */\n    delay(function delayCallback() {\n      if (server) {\n        if (\n          server.options.verifyClient &&\n          typeof server.options.verifyClient === 'function' &&\n          !server.options.verifyClient()\n        ) {\n          this.readyState = WebSocket.CLOSED;\n\n          log(\n            'error',\n            (\"WebSocket connection to '\" + (this.url) + \"' failed: HTTP Authentication failed; no valid credentials available\")\n          );\n\n          networkBridge.removeWebSocket(client, this.url);\n          this.dispatchEvent(createEvent({ type: 'error', target: this }));\n          this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n        } else {\n          if (server.options.selectProtocol && typeof server.options.selectProtocol === 'function') {\n            var selectedProtocol = server.options.selectProtocol(protocols);\n            var isFilled = selectedProtocol !== '';\n            var isRequested = protocols.indexOf(selectedProtocol) !== -1;\n            if (isFilled && !isRequested) {\n              this.readyState = WebSocket.CLOSED;\n\n              log('error', (\"WebSocket connection to '\" + (this.url) + \"' failed: Invalid Sub-Protocol\"));\n\n              networkBridge.removeWebSocket(client, this.url);\n              this.dispatchEvent(createEvent({ type: 'error', target: this }));\n              this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n              return;\n            }\n            this.protocol = selectedProtocol;\n          }\n          this.readyState = WebSocket.OPEN;\n          this.dispatchEvent(createEvent({ type: 'open', target: this }));\n          server.dispatchEvent(createEvent({ type: 'connection' }), client);\n        }\n      } else {\n        this.readyState = WebSocket.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n\n        log('error', (\"WebSocket connection to '\" + (this.url) + \"' failed\"));\n      }\n    }, this);\n  }\n\n  if ( EventTarget$$1 ) WebSocket.__proto__ = EventTarget$$1;\n  WebSocket.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  WebSocket.prototype.constructor = WebSocket;\n\n  var prototypeAccessors = { onopen: {},onmessage: {},onclose: {},onerror: {} };\n\n  prototypeAccessors.onopen.get = function () {\n    return this.listeners.open;\n  };\n\n  prototypeAccessors.onmessage.get = function () {\n    return this.listeners.message;\n  };\n\n  prototypeAccessors.onclose.get = function () {\n    return this.listeners.close;\n  };\n\n  prototypeAccessors.onerror.get = function () {\n    return this.listeners.error;\n  };\n\n  prototypeAccessors.onopen.set = function (listener) {\n    delete this.listeners.open;\n    this.addEventListener('open', listener);\n  };\n\n  prototypeAccessors.onmessage.set = function (listener) {\n    delete this.listeners.message;\n    this.addEventListener('message', listener);\n  };\n\n  prototypeAccessors.onclose.set = function (listener) {\n    delete this.listeners.close;\n    this.addEventListener('close', listener);\n  };\n\n  prototypeAccessors.onerror.set = function (listener) {\n    delete this.listeners.error;\n    this.addEventListener('error', listener);\n  };\n\n  WebSocket.prototype.send = function send (data) {\n    var this$1 = this;\n\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      throw new Error('WebSocket is already in CLOSING or CLOSED state');\n    }\n\n    // TODO: handle bufferedAmount\n\n    var messageEvent = createMessageEvent({\n      type: 'server::message',\n      origin: this.url,\n      data: normalizeSendData(data)\n    });\n\n    var server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      delay(function () {\n        this$1.dispatchEvent(messageEvent, data);\n      }, server);\n    }\n  };\n\n  WebSocket.prototype.close = function close (code, reason) {\n    if (code !== undefined) {\n      if (typeof code !== 'number' || (code !== 1000 && (code < 3000 || code > 4999))) {\n        throw new TypeError(\n          ((ERROR_PREFIX.CLOSE_ERROR) + \" The code must be either 1000, or between 3000 and 4999. \" + code + \" is neither.\")\n        );\n      }\n    }\n\n    if (reason !== undefined) {\n      var length = lengthInUtf8Bytes(reason);\n\n      if (length > 123) {\n        throw new SyntaxError(((ERROR_PREFIX.CLOSE_ERROR) + \" The message must not be greater than 123 bytes.\"));\n      }\n    }\n\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      return;\n    }\n\n    var client = proxyFactory(this);\n    if (this.readyState === WebSocket.CONNECTING) {\n      failWebSocketConnection(client, code || CLOSE_CODES.CLOSE_ABNORMAL, reason);\n    } else {\n      closeWebSocketConnection(client, code || CLOSE_CODES.CLOSE_NO_STATUS, reason);\n    }\n  };\n\n  Object.defineProperties( WebSocket.prototype, prototypeAccessors );\n\n  return WebSocket;\n}(EventTarget));\n\nWebSocket$1.CONNECTING = 0;\nWebSocket$1.prototype.CONNECTING = WebSocket$1.CONNECTING;\nWebSocket$1.OPEN = 1;\nWebSocket$1.prototype.OPEN = WebSocket$1.OPEN;\nWebSocket$1.CLOSING = 2;\nWebSocket$1.prototype.CLOSING = WebSocket$1.CLOSING;\nWebSocket$1.CLOSED = 3;\nWebSocket$1.prototype.CLOSED = WebSocket$1.CLOSED;\n\nvar dedupe = function (arr) { return arr.reduce(function (deduped, b) {\n    if (deduped.indexOf(b) > -1) { return deduped; }\n    return deduped.concat(b);\n  }, []); };\n\nfunction retrieveGlobalObject() {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  return typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this;\n}\n\nvar defaultOptions = {\n  mock: true,\n  verifyClient: null,\n  selectProtocol: null\n};\n\nvar Server$1 = (function (EventTarget$$1) {\n  function Server(url, options) {\n    if ( options === void 0 ) options = defaultOptions;\n\n    EventTarget$$1.call(this);\n    var urlRecord = new urlParse(url);\n\n    if (!urlRecord.pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    this.url = urlRecord.toString();\n\n    this.originalWebSocket = null;\n    var server = networkBridge.attachServer(this, this.url);\n\n    if (!server) {\n      this.dispatchEvent(createEvent({ type: 'error' }));\n      throw new Error('A mock server is already listening on this url');\n    }\n\n    this.options = Object.assign({}, defaultOptions, options);\n\n    if (this.options.mock) {\n      this.mockWebsocket();\n    }\n  }\n\n  if ( EventTarget$$1 ) Server.__proto__ = EventTarget$$1;\n  Server.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  Server.prototype.constructor = Server;\n\n  /*\n   * Attaches the mock websocket object to the global object\n   */\n  Server.prototype.mockWebsocket = function mockWebsocket () {\n    var globalObj = retrieveGlobalObject();\n\n    this.originalWebSocket = globalObj.WebSocket;\n    globalObj.WebSocket = WebSocket$1;\n  };\n\n  /*\n   * Removes the mock websocket object from the global object\n   */\n  Server.prototype.restoreWebsocket = function restoreWebsocket () {\n    var globalObj = retrieveGlobalObject();\n\n    if (this.originalWebSocket !== null) {\n      globalObj.WebSocket = this.originalWebSocket;\n    }\n\n    this.originalWebSocket = null;\n  };\n\n  /**\n   * Removes itself from the urlMap so another server could add itself to the url.\n   * @param {function} callback - The callback is called when the server is stopped\n   */\n  Server.prototype.stop = function stop (callback) {\n    if ( callback === void 0 ) callback = function () {};\n\n    if (this.options.mock) {\n      this.restoreWebsocket();\n    }\n\n    networkBridge.removeServer(this.url);\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n  };\n\n  /*\n   * This is the main function for the mock server to subscribe to the on events.\n   *\n   * ie: mockServer.on('connection', function() { console.log('a mock client connected'); });\n   *\n   * @param {string} type - The event key to subscribe to. Valid keys are: connection, message, and close.\n   * @param {function} callback - The callback which should be called when a certain event is fired.\n   */\n  Server.prototype.on = function on (type, callback) {\n    this.addEventListener(type, callback);\n  };\n\n  /*\n   * Closes the connection and triggers the onclose method of all listening\n   * websockets. After that it removes itself from the urlMap so another server\n   * could add itself to the url.\n   *\n   * @param {object} options\n   */\n  Server.prototype.close = function close (options) {\n    if ( options === void 0 ) options = {};\n\n    var code = options.code;\n    var reason = options.reason;\n    var wasClean = options.wasClean;\n    var listeners = networkBridge.websocketsLookup(this.url);\n\n    // Remove server before notifications to prevent immediate reconnects from\n    // socket onclose handlers\n    networkBridge.removeServer(this.url);\n\n    listeners.forEach(function (socket) {\n      socket.readyState = WebSocket$1.CLOSED;\n      socket.dispatchEvent(\n        createCloseEvent({\n          type: 'close',\n          target: socket.target,\n          code: code || CLOSE_CODES.CLOSE_NORMAL,\n          reason: reason || '',\n          wasClean: wasClean\n        })\n      );\n    });\n\n    this.dispatchEvent(createCloseEvent({ type: 'close' }), this);\n  };\n\n  /*\n   * Sends a generic message event to all mock clients.\n   */\n  Server.prototype.emit = function emit (event, data, options) {\n    var this$1 = this;\n    if ( options === void 0 ) options = {};\n\n    var websockets = options.websockets;\n\n    if (!websockets) {\n      websockets = networkBridge.websocketsLookup(this.url);\n    }\n\n    if (typeof options !== 'object' || arguments.length > 3) {\n      data = Array.prototype.slice.call(arguments, 1, arguments.length);\n      data = data.map(function (item) { return normalizeSendData(item); });\n    } else {\n      data = normalizeSendData(data);\n    }\n\n    websockets.forEach(function (socket) {\n      if (Array.isArray(data)) {\n        socket.dispatchEvent.apply(\n          socket, [ createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket.target\n          }) ].concat( data )\n        );\n      } else {\n        socket.dispatchEvent(\n          createMessageEvent({\n            type: event,\n            data: data,\n            origin: this$1.url,\n            target: socket.target\n          })\n        );\n      }\n    });\n  };\n\n  /*\n   * Returns an array of websockets which are listening to this server\n   * TOOD: this should return a set and not be a method\n   */\n  Server.prototype.clients = function clients () {\n    return networkBridge.websocketsLookup(this.url);\n  };\n\n  /*\n   * Prepares a method to submit an event to members of the room\n   *\n   * e.g. server.to('my-room').emit('hi!');\n   */\n  Server.prototype.to = function to (room, broadcaster, broadcastList) {\n    var this$1 = this;\n    if ( broadcastList === void 0 ) broadcastList = [];\n\n    var self = this;\n    var websockets = dedupe(broadcastList.concat(networkBridge.websocketsLookup(this.url, room, broadcaster)));\n\n    return {\n      to: function (chainedRoom, chainedBroadcaster) { return this$1.to.call(this$1, chainedRoom, chainedBroadcaster, websockets); },\n      emit: function emit(event, data) {\n        self.emit(event, data, { websockets: websockets });\n      }\n    };\n  };\n\n  /*\n   * Alias for Server.to\n   */\n  Server.prototype.in = function in$1 () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return this.to.apply(null, args);\n  };\n\n  /*\n   * Simulate an event from the server to the clients. Useful for\n   * simulating errors.\n   */\n  Server.prototype.simulate = function simulate (event) {\n    var listeners = networkBridge.websocketsLookup(this.url);\n\n    if (event === 'error') {\n      listeners.forEach(function (socket) {\n        socket.readyState = WebSocket$1.CLOSED;\n        socket.dispatchEvent(createEvent({ type: 'error' }));\n      });\n    }\n  };\n\n  return Server;\n}(EventTarget));\n\n/*\n * Alternative constructor to support namespaces in socket.io\n *\n * http://socket.io/docs/rooms-and-namespaces/#custom-namespaces\n */\nServer$1.of = function of(url) {\n  return new Server$1(url);\n};\n\n/*\n * The socket-io class is designed to mimick the real API as closely as possible.\n *\n * http://socket.io/docs/\n */\nvar SocketIO$1 = (function (EventTarget$$1) {\n  function SocketIO(url, protocol) {\n    var this$1 = this;\n    if ( url === void 0 ) url = 'socket.io';\n    if ( protocol === void 0 ) protocol = '';\n\n    EventTarget$$1.call(this);\n\n    this.binaryType = 'blob';\n    var urlRecord = new urlParse(url);\n\n    if (!urlRecord.pathname) {\n      urlRecord.pathname = '/';\n    }\n\n    this.url = urlRecord.toString();\n    this.readyState = SocketIO.CONNECTING;\n    this.protocol = '';\n    this.target = this;\n\n    if (typeof protocol === 'string' || (typeof protocol === 'object' && protocol !== null)) {\n      this.protocol = protocol;\n    } else if (Array.isArray(protocol) && protocol.length > 0) {\n      this.protocol = protocol[0];\n    }\n\n    var server = networkBridge.attachWebSocket(this, this.url);\n\n    /*\n     * Delay triggering the connection events so they can be defined in time.\n     */\n    delay(function delayCallback() {\n      if (server) {\n        this.readyState = SocketIO.OPEN;\n        server.dispatchEvent(createEvent({ type: 'connection' }), server, this);\n        server.dispatchEvent(createEvent({ type: 'connect' }), server, this); // alias\n        this.dispatchEvent(createEvent({ type: 'connect', target: this }));\n      } else {\n        this.readyState = SocketIO.CLOSED;\n        this.dispatchEvent(createEvent({ type: 'error', target: this }));\n        this.dispatchEvent(\n          createCloseEvent({\n            type: 'close',\n            target: this,\n            code: CLOSE_CODES.CLOSE_NORMAL\n          })\n        );\n\n        log('error', (\"Socket.io connection to '\" + (this.url) + \"' failed\"));\n      }\n    }, this);\n\n    /**\n      Add an aliased event listener for close / disconnect\n     */\n    this.addEventListener('close', function (event) {\n      this$1.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: event.target,\n          code: event.code\n        })\n      );\n    });\n  }\n\n  if ( EventTarget$$1 ) SocketIO.__proto__ = EventTarget$$1;\n  SocketIO.prototype = Object.create( EventTarget$$1 && EventTarget$$1.prototype );\n  SocketIO.prototype.constructor = SocketIO;\n\n  var prototypeAccessors = { broadcast: {} };\n\n  /*\n   * Closes the SocketIO connection or connection attempt, if any.\n   * If the connection is already CLOSED, this method does nothing.\n   */\n  SocketIO.prototype.close = function close () {\n    if (this.readyState !== SocketIO.OPEN) {\n      return undefined;\n    }\n\n    var server = networkBridge.serverLookup(this.url);\n    networkBridge.removeWebSocket(this, this.url);\n\n    this.readyState = SocketIO.CLOSED;\n    this.dispatchEvent(\n      createCloseEvent({\n        type: 'close',\n        target: this,\n        code: CLOSE_CODES.CLOSE_NORMAL\n      })\n    );\n\n    if (server) {\n      server.dispatchEvent(\n        createCloseEvent({\n          type: 'disconnect',\n          target: this,\n          code: CLOSE_CODES.CLOSE_NORMAL\n        }),\n        server\n      );\n    }\n\n    return this;\n  };\n\n  /*\n   * Alias for Socket#close\n   *\n   * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L383\n   */\n  SocketIO.prototype.disconnect = function disconnect () {\n    return this.close();\n  };\n\n  /*\n   * Submits an event to the server with a payload\n   */\n  SocketIO.prototype.emit = function emit (event) {\n    var data = [], len = arguments.length - 1;\n    while ( len-- > 0 ) data[ len ] = arguments[ len + 1 ];\n\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    var messageEvent = createMessageEvent({\n      type: event,\n      origin: this.url,\n      data: data\n    });\n\n    var server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      server.dispatchEvent.apply(server, [ messageEvent ].concat( data ));\n    }\n\n    return this;\n  };\n\n  /*\n   * Submits a 'message' event to the server.\n   *\n   * Should behave exactly like WebSocket#send\n   *\n   * https://github.com/socketio/socket.io-client/blob/master/lib/socket.js#L113\n   */\n  SocketIO.prototype.send = function send (data) {\n    this.emit('message', data);\n    return this;\n  };\n\n  /*\n   * For broadcasting events to other connected sockets.\n   *\n   * e.g. socket.broadcast.emit('hi!');\n   * e.g. socket.broadcast.to('my-room').emit('hi!');\n   */\n  prototypeAccessors.broadcast.get = function () {\n    if (this.readyState !== SocketIO.OPEN) {\n      throw new Error('SocketIO is already in CLOSING or CLOSED state');\n    }\n\n    var self = this;\n    var server = networkBridge.serverLookup(this.url);\n    if (!server) {\n      throw new Error((\"SocketIO can not find a server at the specified URL (\" + (this.url) + \")\"));\n    }\n\n    return {\n      emit: function emit(event, data) {\n        server.emit(event, data, { websockets: networkBridge.websocketsLookup(self.url, null, self) });\n        return self;\n      },\n      to: function to(room) {\n        return server.to(room, self);\n      },\n      in: function in$1(room) {\n        return server.in(room, self);\n      }\n    };\n  };\n\n  /*\n   * For registering events to be received from the server\n   */\n  SocketIO.prototype.on = function on (type, callback) {\n    this.addEventListener(type, callback);\n    return this;\n  };\n\n  /*\n   * Remove event listener\n   *\n   * https://github.com/component/emitter#emitteroffevent-fn\n   */\n  SocketIO.prototype.off = function off (type, callback) {\n    this.removeEventListener(type, callback);\n  };\n\n  /*\n   * Check if listeners have already been added for an event\n   *\n   * https://github.com/component/emitter#emitterhaslistenersevent\n   */\n  SocketIO.prototype.hasListeners = function hasListeners (type) {\n    var listeners = this.listeners[type];\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n    return !!listeners.length;\n  };\n\n  /*\n   * Join a room on a server\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  SocketIO.prototype.join = function join (room) {\n    networkBridge.addMembershipToRoom(this, room);\n  };\n\n  /*\n   * Get the websocket to leave the room\n   *\n   * http://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n   */\n  SocketIO.prototype.leave = function leave (room) {\n    networkBridge.removeMembershipFromRoom(this, room);\n  };\n\n  SocketIO.prototype.to = function to (room) {\n    return this.broadcast.to(room);\n  };\n\n  SocketIO.prototype.in = function in$1 () {\n    return this.to.apply(null, arguments);\n  };\n\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n  SocketIO.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n    var customArguments = [], len = arguments.length - 1;\n    while ( len-- > 0 ) customArguments[ len ] = arguments[ len + 1 ];\n\n    var eventName = event.type;\n    var listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(function (listener) {\n      if (customArguments.length > 0) {\n        listener.apply(this$1, customArguments);\n      } else {\n        // Regular WebSockets expect a MessageEvent but Socketio.io just wants raw data\n        //  payload instanceof MessageEvent works, but you can't isntance of NodeEvent\n        //  for now we detect if the output has data defined on it\n        listener.call(this$1, event.data ? event.data : event);\n      }\n    });\n  };\n\n  Object.defineProperties( SocketIO.prototype, prototypeAccessors );\n\n  return SocketIO;\n}(EventTarget));\n\nSocketIO$1.CONNECTING = 0;\nSocketIO$1.OPEN = 1;\nSocketIO$1.CLOSING = 2;\nSocketIO$1.CLOSED = 3;\n\n/*\n * Static constructor methods for the IO Socket\n */\nvar IO = function ioConstructor(url, protocol) {\n  return new SocketIO$1(url, protocol);\n};\n\n/*\n * Alias the raw IO() constructor\n */\nIO.connect = function ioConnect(url, protocol) {\n  /* eslint-disable new-cap */\n  return IO(url, protocol);\n  /* eslint-enable new-cap */\n};\n\nvar Server = Server$1;\nvar WebSocket = WebSocket$1;\nvar SocketIO = IO;\n\nexports.Server = Server;\nexports.WebSocket = WebSocket;\nexports.SocketIO = SocketIO;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"names":["exports","commonjsGlobal","window","g","self","requiresPort","port","protocol","split","has","Object","prototype","hasOwnProperty","decode","input","decodeURIComponent","replace","e","encode","encodeURIComponent","querystringify_1","stringify","obj","prefix","value","key","pairs","call","isNaN","push","length","join","parse","query","part","parser","result","exec","slashes","protocolre","left","RegExp","trimLeft","str","toString","rules","address","url","isSpecial","NaN","undefined","ignore","hash","lolcation","loc","location","finaldestination","type","Url","unescape","pathname","test","href","scheme","extractProtocol","rest","match","toLowerCase","forwardSlashes","otherSlashes","slashesCount","slice","this","relative","extracted","instruction","index","instructions","i","indexOf","charAt","base","path","concat","last","unshift","up","splice","resolve","host","hostname","username","password","auth","origin","set","fn","pop","char","ins","qs","urlParse","delay","callback","context","setTimeout","timeoutContext","log","method","message","console","reject","array","results","forEach","itemInArray","EventTarget","listeners","trimQueryPartFromURL","queryIndex","addEventListener","listener","Array","isArray","filter","item","removeEventListener","removingListener","arrayOfListeners","dispatchEvent","event","this$1","customArguments","len","arguments","eventName","apply","NetworkBridge","urlMap","attachWebSocket","websocket","serverURL","connectionLookup","server","websockets","addMembershipToRoom","room","roomMemberships","attachServer","serverUrl","serverLookup","websocketsLookup","broadcaster","removeServer","removeWebSocket","socket","removeMembershipFromRoom","memberships","networkBridge","CLOSE_CODES","ERROR_PREFIX","CONSTRUCTOR_ERROR","CLOSE_ERROR","EVENT","CONSTRUCT","MESSAGE","CLOSE","EventPrototype","stopPropagation","stopImmediatePropagation","initEvent","bubbles","cancelable","Boolean","Event","EventPrototype$$1","eventInitConfig","TypeError","timeStamp","Date","now","target","srcElement","returnValue","isTrusted","eventPhase","defaultPrevented","currentTarget","cancelBubble","__proto__","create","constructor","MessageEvent","data","lastEventId","ports","canncelBubble","CloseEvent","code","reason","wasClean","parseInt","createEvent","config","eventObject","createMessageEvent","messageEvent","createCloseEvent","closeEvent","closeWebSocketConnection","readyState","WebSocket$1","CLOSING","CLOSED","normalizeSendData","ArrayBuffer","String","proxies","WeakMap","proxyFactory","get","proxy","Proxy","prop","options","cb","EventTarget$$1","WebSocket","protocols","urlRecord","SyntaxError","urlVerification","uniq","map","p","count","reduce","a","b","duplicates","keys","protocolVerification","binaryType","CONNECTING","client","verifyClient","selectProtocol","selectedProtocol","isFilled","isRequested","OPEN","prototypeAccessors","onopen","onmessage","onclose","onerror","open","close","error","send","Error","m","errorEvent","failWebSocketConnection","defineProperties","retrieveGlobalObject","defaultOptions","mock","Server$1","Server","originalWebSocket","assign","mockWebsocket","globalObj","restoreWebsocket","stop","on","emit","clients","to","broadcastList","deduped","chainedRoom","chainedBroadcaster","in","args","simulate","of","SocketIO$1","SocketIO","broadcast","disconnect","off","hasListeners","leave","IO","connect","defineProperty","factory"],"sourceRoot":""}