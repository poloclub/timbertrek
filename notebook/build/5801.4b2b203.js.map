{"version":3,"file":"5801.4b2b203.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/contents/lib/drivefs.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/lib/_pypi.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/comlink/dist/esm/comlink.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/lib/kernel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/lib/worker.js"],"sourcesContent":["// Types and implementation inspired from https://github.com/jvilk/BrowserFS\n// LICENSE: https://github.com/jvilk/BrowserFS/blob/8977a704ea469d05daf857e4818bef1f4f498326/LICENSE\n// And from https://github.com/gzuidhof/starboard-notebook\n// LICENSE: https://github.com/gzuidhof/starboard-notebook/blob/cd8d3fc30af4bd29cdd8f6b8c207df8138f5d5dd/LICENSE\nexport const DIR_MODE = 16895; // 040777\nexport const FILE_MODE = 33206; // 100666\nexport const SEEK_CUR = 1;\nexport const SEEK_END = 2;\nexport const DRIVE_SEPARATOR = ':';\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder('utf-8');\n// Mapping flag -> do we need to overwrite the file upon closing it\nconst flagNeedsWrite = {\n    0 /*O_RDONLY*/: false,\n    1 /*O_WRONLY*/: true,\n    2 /*O_RDWR*/: true,\n    64 /*O_CREAT*/: true,\n    65 /*O_WRONLY|O_CREAT*/: true,\n    66 /*O_RDWR|O_CREAT*/: true,\n    129 /*O_WRONLY|O_EXCL*/: true,\n    193 /*O_WRONLY|O_CREAT|O_EXCL*/: true,\n    514 /*O_RDWR|O_TRUNC*/: true,\n    577 /*O_WRONLY|O_CREAT|O_TRUNC*/: true,\n    578 /*O_CREAT|O_RDWR|O_TRUNC*/: true,\n    705 /*O_WRONLY|O_CREAT|O_EXCL|O_TRUNC*/: true,\n    706 /*O_RDWR|O_CREAT|O_EXCL|O_TRUNC*/: true,\n    1024 /*O_APPEND*/: true,\n    1025 /*O_WRONLY|O_APPEND*/: true,\n    1026 /*O_RDWR|O_APPEND*/: true,\n    1089 /*O_WRONLY|O_CREAT|O_APPEND*/: true,\n    1090 /*O_RDWR|O_CREAT|O_APPEND*/: true,\n    1153 /*O_WRONLY|O_EXCL|O_APPEND*/: true,\n    1154 /*O_RDWR|O_EXCL|O_APPEND*/: true,\n    1217 /*O_WRONLY|O_CREAT|O_EXCL|O_APPEND*/: true,\n    1218 /*O_RDWR|O_CREAT|O_EXCL|O_APPEND*/: true,\n    4096 /*O_RDONLY|O_DSYNC*/: true,\n    4098 /*O_RDWR|O_DSYNC*/: true,\n};\nexport class DriveFSEmscriptenStreamOps {\n    constructor(fs) {\n        this.fs = fs;\n    }\n    open(stream) {\n        const path = this.fs.realPath(stream.node);\n        if (this.fs.FS.isFile(stream.node.mode)) {\n            stream.file = this.fs.API.get(path);\n        }\n    }\n    close(stream) {\n        if (!this.fs.FS.isFile(stream.node.mode) || !stream.file) {\n            return;\n        }\n        const path = this.fs.realPath(stream.node);\n        const flags = stream.flags;\n        let parsedFlags = typeof flags === 'string' ? parseInt(flags, 10) : flags;\n        parsedFlags &= 0x1fff;\n        let needsWrite = true;\n        if (parsedFlags in flagNeedsWrite) {\n            needsWrite = flagNeedsWrite[parsedFlags];\n        }\n        if (needsWrite) {\n            this.fs.API.put(path, stream.file);\n            stream.file = undefined;\n        }\n    }\n    read(stream, buffer, offset, length, position) {\n        var _a;\n        if (length <= 0 || stream.file === undefined) {\n            return 0;\n        }\n        const size = Math.min(((_a = stream.file.data.length) !== null && _a !== void 0 ? _a : 0) - position, length);\n        try {\n            buffer.set(stream.file.data.subarray(position, position + size), offset);\n        }\n        catch (e) {\n            throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n        }\n        return size;\n    }\n    write(stream, buffer, offset, length, position) {\n        var _a, _b;\n        if (length <= 0 || stream.file === undefined) {\n            return 0;\n        }\n        stream.node.timestamp = Date.now();\n        try {\n            if (position + length > ((_b = (_a = stream.file) === null || _a === void 0 ? void 0 : _a.data.length) !== null && _b !== void 0 ? _b : 0)) {\n                const oldData = stream.file.data ? stream.file.data : new Uint8Array();\n                stream.file.data = new Uint8Array(position + length);\n                stream.file.data.set(oldData);\n            }\n            stream.file.data.set(buffer.subarray(offset, offset + length), position);\n            return length;\n        }\n        catch (e) {\n            throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n        }\n    }\n    llseek(stream, offset, whence) {\n        let position = offset;\n        if (whence === SEEK_CUR) {\n            position += stream.position;\n        }\n        else if (whence === SEEK_END) {\n            if (this.fs.FS.isFile(stream.node.mode)) {\n                if (stream.file !== undefined) {\n                    position += stream.file.data.length;\n                }\n                else {\n                    throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n                }\n            }\n        }\n        if (position < 0) {\n            throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EINVAL']);\n        }\n        return position;\n    }\n}\nexport class DriveFSEmscriptenNodeOps {\n    constructor(fs) {\n        this.fs = fs;\n    }\n    getattr(node) {\n        return this.fs.API.getattr(this.fs.realPath(node));\n    }\n    setattr(node, attr) {\n        // TODO\n    }\n    lookup(parent, name) {\n        const path = this.fs.PATH.join2(this.fs.realPath(parent), name);\n        const result = this.fs.API.lookup(path);\n        if (!result.ok) {\n            throw this.fs.FS.genericErrors[this.fs.ERRNO_CODES['ENOENT']];\n        }\n        return this.fs.createNode(parent, name, result.mode);\n    }\n    mknod(parent, name, mode, dev) {\n        const path = this.fs.PATH.join2(this.fs.realPath(parent), name);\n        this.fs.API.mknod(path, mode);\n        return this.fs.createNode(parent, name, mode, dev);\n    }\n    rename(oldNode, newDir, newName) {\n        this.fs.API.rename(oldNode.parent\n            ? this.fs.PATH.join2(this.fs.realPath(oldNode.parent), oldNode.name)\n            : oldNode.name, this.fs.PATH.join2(this.fs.realPath(newDir), newName));\n        // Updating the in-memory node\n        oldNode.name = newName;\n        oldNode.parent = newDir;\n    }\n    unlink(parent, name) {\n        this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(parent), name));\n    }\n    rmdir(parent, name) {\n        this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(parent), name));\n    }\n    readdir(node) {\n        return this.fs.API.readdir(this.fs.realPath(node));\n    }\n    symlink(parent, newName, oldPath) {\n        throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n    }\n    readlink(node) {\n        throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n    }\n}\n/**\n * Wrap ServiceWorker requests for an Emscripten-compatible synchronous API.\n */\nexport class ContentsAPI {\n    constructor(baseUrl, driveName, mountpoint, FS, ERRNO_CODES) {\n        this._baseUrl = baseUrl;\n        this._driveName = driveName;\n        this._mountpoint = mountpoint;\n        this.FS = FS;\n        this.ERRNO_CODES = ERRNO_CODES;\n    }\n    request(data) {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', encodeURI(this.endpoint), false);\n        try {\n            xhr.send(JSON.stringify(data));\n        }\n        catch (e) {\n            console.error(e);\n        }\n        if (xhr.status >= 400) {\n            throw new this.FS.ErrnoError(this.ERRNO_CODES['EINVAL']);\n        }\n        return JSON.parse(xhr.responseText);\n    }\n    lookup(path) {\n        return this.request({ method: 'lookup', path: this.normalizePath(path) });\n    }\n    getmode(path) {\n        return Number.parseInt(this.request({ method: 'getmode', path: this.normalizePath(path) }));\n    }\n    mknod(path, mode) {\n        return this.request({\n            method: 'mknod',\n            path: this.normalizePath(path),\n            data: { mode },\n        });\n    }\n    rename(oldPath, newPath) {\n        return this.request({\n            method: 'rename',\n            path: this.normalizePath(oldPath),\n            data: { newPath: this.normalizePath(newPath) },\n        });\n    }\n    readdir(path) {\n        const dirlist = this.request({\n            method: 'readdir',\n            path: this.normalizePath(path),\n        });\n        dirlist.push('.');\n        dirlist.push('..');\n        return dirlist;\n    }\n    rmdir(path) {\n        return this.request({ method: 'rmdir', path: this.normalizePath(path) });\n    }\n    get(path) {\n        const response = this.request({ method: 'get', path: this.normalizePath(path) });\n        const serializedContent = response.content;\n        const format = response.format;\n        switch (format) {\n            case 'json':\n            case 'text':\n                return {\n                    data: encoder.encode(serializedContent),\n                    format,\n                };\n            case 'base64': {\n                const binString = atob(serializedContent);\n                const len = binString.length;\n                const data = new Uint8Array(len);\n                for (let i = 0; i < len; i++) {\n                    data[i] = binString.charCodeAt(i);\n                }\n                return {\n                    data,\n                    format,\n                };\n            }\n            default:\n                throw new this.FS.ErrnoError(this.ERRNO_CODES['ENOENT']);\n        }\n    }\n    put(path, value) {\n        switch (value.format) {\n            case 'json':\n            case 'text':\n                return this.request({\n                    method: 'put',\n                    path: this.normalizePath(path),\n                    data: {\n                        format: value.format,\n                        data: decoder.decode(value.data),\n                    },\n                });\n            case 'base64': {\n                let binary = '';\n                for (let i = 0; i < value.data.byteLength; i++) {\n                    binary += String.fromCharCode(value.data[i]);\n                }\n                return this.request({\n                    method: 'put',\n                    path: this.normalizePath(path),\n                    data: {\n                        format: value.format,\n                        data: btoa(binary),\n                    },\n                });\n            }\n        }\n    }\n    getattr(path) {\n        const stats = this.request({ method: 'getattr', path: this.normalizePath(path) });\n        // Turn datetimes into proper objects\n        stats.atime = new Date(stats.atime);\n        stats.mtime = new Date(stats.mtime);\n        stats.ctime = new Date(stats.ctime);\n        stats.size = stats.size || 0;\n        return stats;\n    }\n    /**\n     * Normalize a Path by making it compliant for the content manager\n     *\n     * @param path: the path relatively to the Emscripten drive\n     */\n    normalizePath(path) {\n        // Remove mountpoint prefix\n        if (path.startsWith(this._mountpoint)) {\n            path = path.slice(this._mountpoint.length);\n        }\n        // Add JupyterLab drive name\n        if (this._driveName) {\n            path = `${this._driveName}${DRIVE_SEPARATOR}${path}`;\n        }\n        return path;\n    }\n    /**\n     * Get the api/drive endpoint\n     */\n    get endpoint() {\n        return `${this._baseUrl}api/drive`;\n    }\n}\nexport class DriveFS {\n    constructor(options) {\n        this.FS = options.FS;\n        this.PATH = options.PATH;\n        this.ERRNO_CODES = options.ERRNO_CODES;\n        this.API = new ContentsAPI(options.baseUrl, options.driveName, options.mountpoint, this.FS, this.ERRNO_CODES);\n        this.driveName = options.driveName;\n        this.node_ops = new DriveFSEmscriptenNodeOps(this);\n        this.stream_ops = new DriveFSEmscriptenStreamOps(this);\n    }\n    mount(mount) {\n        return this.createNode(null, mount.mountpoint, DIR_MODE | 511, 0);\n    }\n    createNode(parent, name, mode, dev) {\n        const FS = this.FS;\n        if (!FS.isDir(mode) && !FS.isFile(mode)) {\n            throw new FS.ErrnoError(this.ERRNO_CODES['EINVAL']);\n        }\n        const node = FS.createNode(parent, name, mode, dev);\n        node.node_ops = this.node_ops;\n        node.stream_ops = this.stream_ops;\n        return node;\n    }\n    getMode(path) {\n        return this.API.getmode(path);\n    }\n    realPath(node) {\n        const parts = [];\n        let currentNode = node;\n        parts.push(currentNode.name);\n        while (currentNode.parent !== currentNode) {\n            currentNode = currentNode.parent;\n            parts.push(currentNode.name);\n        }\n        parts.reverse();\n        return this.PATH.join.apply(null, parts);\n    }\n}\n","// this file is autogenerated from the wheels described in ../package.json\nexport * as allJSONUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/all.json';\nexport * as ipykernelWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/ipykernel-6.9.2-py3-none-any.whl';\nexport * as pipliteWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/piplite-0.1.0b12-py3-none-any.whl';\nexport * as pyoliteWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/pyolite-0.1.0b12-py3-none-any.whl';\nexport * as widgetsnbextensionWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/widgetsnbextension-3.6.0-py3-none-any.whl';\nexport const PIPLITE_WHEEL = 'piplite-0.1.0b12-py3-none-any.whl';\n","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { PromiseDelegate } from '@lumino/coreutils';\nimport { URLExt, PageConfig } from '@jupyterlab/coreutils';\nimport { BaseKernel } from '@jupyterlite/kernel';\nimport { wrap } from 'comlink';\nimport { PIPLITE_WHEEL } from './_pypi';\n/**\n * A kernel that executes Python code with Pyodide.\n */\nexport class PyoliteKernel extends BaseKernel {\n    /**\n     * Instantiate a new PyodideKernel\n     *\n     * @param options The instantiation options for a new PyodideKernel\n     */\n    constructor(options) {\n        super(options);\n        this._ready = new PromiseDelegate();\n        this._worker = this.initWorker(options);\n        this._worker.onmessage = (e) => this._processWorkerMessage(e.data);\n        this._remoteKernel = this.initRemote(options);\n        this._ready.resolve();\n    }\n    /**\n     * Load the worker.\n     *\n     * ### Note\n     *\n     * Subclasses must implement this typographically almost _exactly_ for\n     * webpack to find it.\n     */\n    initWorker(options) {\n        return new Worker(new URL('./comlink.worker.js', import.meta.url), {\n            type: 'module',\n        });\n    }\n    initRemote(options) {\n        const remote = wrap(this._worker);\n        const remoteOptions = this.initRemoteOptions(options);\n        remote.initialize(remoteOptions);\n        return remote;\n    }\n    initRemoteOptions(options) {\n        const { pyodideUrl } = options;\n        const indexUrl = pyodideUrl.slice(0, pyodideUrl.lastIndexOf('/') + 1);\n        const baseUrl = PageConfig.getBaseUrl();\n        const pypi = URLExt.join(baseUrl, 'build/pypi');\n        const pipliteUrls = [...(options.pipliteUrls || []), URLExt.join(pypi, 'all.json')];\n        const pipliteWheelUrl = URLExt.join(pypi, PIPLITE_WHEEL);\n        const disablePyPIFallback = !!options.disablePyPIFallback;\n        return {\n            baseUrl,\n            pyodideUrl,\n            indexUrl,\n            pipliteWheelUrl,\n            pipliteUrls,\n            disablePyPIFallback,\n            location: this.location,\n            mountDrive: options.mountDrive,\n        };\n    }\n    /**\n     * Dispose the kernel.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._worker.terminate();\n        this._worker = null;\n        super.dispose();\n    }\n    /**\n     * A promise that is fulfilled when the kernel is ready.\n     */\n    get ready() {\n        return this._ready.promise;\n    }\n    /**\n     * Process a message coming from the pyodide web worker.\n     *\n     * @param msg The worker message to process.\n     */\n    _processWorkerMessage(msg) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (!msg.type) {\n            return;\n        }\n        switch (msg.type) {\n            case 'stream': {\n                const bundle = (_a = msg.bundle) !== null && _a !== void 0 ? _a : { name: 'stdout', text: '' };\n                this.stream(bundle, msg.parentHeader);\n                break;\n            }\n            case 'input_request': {\n                const bundle = (_b = msg.content) !== null && _b !== void 0 ? _b : { prompt: '', password: false };\n                this.inputRequest(bundle, msg.parentHeader);\n                break;\n            }\n            case 'display_data': {\n                const bundle = (_c = msg.bundle) !== null && _c !== void 0 ? _c : { data: {}, metadata: {}, transient: {} };\n                this.displayData(bundle, msg.parentHeader);\n                break;\n            }\n            case 'update_display_data': {\n                const bundle = (_d = msg.bundle) !== null && _d !== void 0 ? _d : { data: {}, metadata: {}, transient: {} };\n                this.updateDisplayData(bundle, msg.parentHeader);\n                break;\n            }\n            case 'clear_output': {\n                const bundle = (_e = msg.bundle) !== null && _e !== void 0 ? _e : { wait: false };\n                this.clearOutput(bundle, msg.parentHeader);\n                break;\n            }\n            case 'execute_result': {\n                const bundle = (_f = msg.bundle) !== null && _f !== void 0 ? _f : { execution_count: 0, data: {}, metadata: {} };\n                this.publishExecuteResult(bundle, msg.parentHeader);\n                break;\n            }\n            case 'execute_error': {\n                const bundle = (_g = msg.bundle) !== null && _g !== void 0 ? _g : { ename: '', evalue: '', traceback: [] };\n                this.publishExecuteError(bundle, msg.parentHeader);\n                break;\n            }\n            case 'comm_msg':\n            case 'comm_open':\n            case 'comm_close': {\n                this.handleComm(msg.type, msg.content, msg.metadata, msg.buffers, msg.parentHeader);\n                break;\n            }\n        }\n    }\n    /**\n     * Handle a kernel_info_request message\n     */\n    async kernelInfoRequest() {\n        const content = {\n            implementation: 'pyodide',\n            implementation_version: '0.1.0',\n            language_info: {\n                codemirror_mode: {\n                    name: 'python',\n                    version: 3,\n                },\n                file_extension: '.py',\n                mimetype: 'text/x-python',\n                name: 'python',\n                nbconvert_exporter: 'python',\n                pygments_lexer: 'ipython3',\n                version: '3.8',\n            },\n            protocol_version: '5.3',\n            status: 'ok',\n            banner: 'Pyolite: A WebAssembly-powered Python kernel backed by Pyodide',\n            help_links: [\n                {\n                    text: 'Python (WASM) Kernel',\n                    url: 'https://pyodide.org',\n                },\n            ],\n        };\n        return content;\n    }\n    /**\n     * Handle an `execute_request` message\n     *\n     * @param msg The parent message.\n     */\n    async executeRequest(content) {\n        const result = await this._remoteKernel.execute(content, this.parent);\n        result.execution_count = this.executionCount;\n        return result;\n    }\n    /**\n     * Handle an complete_request message\n     *\n     * @param msg The parent message.\n     */\n    async completeRequest(content) {\n        return await this._remoteKernel.complete(content, this.parent);\n    }\n    /**\n     * Handle an `inspect_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async inspectRequest(content) {\n        return await this._remoteKernel.inspect(content, this.parent);\n    }\n    /**\n     * Handle an `is_complete_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async isCompleteRequest(content) {\n        return await this._remoteKernel.isComplete(content, this.parent);\n    }\n    /**\n     * Handle a `comm_info_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async commInfoRequest(content) {\n        return await this._remoteKernel.commInfo(content, this.parent);\n    }\n    /**\n     * Send an `comm_open` message.\n     *\n     * @param msg - The comm_open message.\n     */\n    async commOpen(msg) {\n        return await this._remoteKernel.commOpen(msg, this.parent);\n    }\n    /**\n     * Send an `comm_msg` message.\n     *\n     * @param msg - The comm_msg message.\n     */\n    async commMsg(msg) {\n        return await this._remoteKernel.commMsg(msg, this.parent);\n    }\n    /**\n     * Send an `comm_close` message.\n     *\n     * @param close - The comm_close message.\n     */\n    async commClose(msg) {\n        return await this._remoteKernel.commClose(msg, this.parent);\n    }\n    /**\n     * Send an `input_reply` message.\n     *\n     * @param content - The content of the reply.\n     */\n    async inputReply(content) {\n        return await this._remoteKernel.inputReply(content, this.parent);\n    }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { DriveFS } from '@jupyterlite/contents';\n// TODO Once this https://github.com/pyodide/pyodide/pull/2582/files is released\n// Remove this shameless copy\nconst ERRNO_CODES = {\n    E2BIG: 1,\n    EACCES: 2,\n    EADDRINUSE: 3,\n    EADDRNOTAVAIL: 4,\n    EADV: 122,\n    EAFNOSUPPORT: 5,\n    EAGAIN: 6,\n    EALREADY: 7,\n    EBADE: 113,\n    EBADF: 8,\n    EBADFD: 127,\n    EBADMSG: 9,\n    EBADR: 114,\n    EBADRQC: 103,\n    EBADSLT: 102,\n    EBFONT: 101,\n    EBUSY: 10,\n    ECANCELED: 11,\n    ECHILD: 12,\n    ECHRNG: 106,\n    ECOMM: 124,\n    ECONNABORTED: 13,\n    ECONNREFUSED: 14,\n    ECONNRESET: 15,\n    EDEADLK: 16,\n    EDEADLOCK: 16,\n    EDESTADDRREQ: 17,\n    EDOM: 18,\n    EDOTDOT: 125,\n    EDQUOT: 19,\n    EEXIST: 20,\n    EFAULT: 21,\n    EFBIG: 22,\n    EHOSTDOWN: 142,\n    EHOSTUNREACH: 23,\n    EIDRM: 24,\n    EILSEQ: 25,\n    EINPROGRESS: 26,\n    EINTR: 27,\n    EINVAL: 28,\n    EIO: 29,\n    EISCONN: 30,\n    EISDIR: 31,\n    EL2HLT: 112,\n    EL2NSYNC: 156,\n    EL3HLT: 107,\n    EL3RST: 108,\n    ELIBACC: 129,\n    ELIBBAD: 130,\n    ELIBEXEC: 133,\n    ELIBMAX: 132,\n    ELIBSCN: 131,\n    ELNRNG: 109,\n    ELOOP: 32,\n    EMFILE: 33,\n    EMLINK: 34,\n    EMSGSIZE: 35,\n    EMULTIHOP: 36,\n    ENAMETOOLONG: 37,\n    ENETDOWN: 38,\n    ENETRESET: 39,\n    ENETUNREACH: 40,\n    ENFILE: 41,\n    ENOANO: 104,\n    ENOBUFS: 42,\n    ENOCSI: 111,\n    ENODATA: 116,\n    ENODEV: 43,\n    ENOENT: 44,\n    ENOEXEC: 45,\n    ENOLCK: 46,\n    ENOLINK: 47,\n    ENOMEDIUM: 148,\n    ENOMEM: 48,\n    ENOMSG: 49,\n    ENONET: 119,\n    ENOPKG: 120,\n    ENOPROTOOPT: 50,\n    ENOSPC: 51,\n    ENOSR: 118,\n    ENOSTR: 100,\n    ENOSYS: 52,\n    ENOTBLK: 105,\n    ENOTCONN: 53,\n    ENOTDIR: 54,\n    ENOTEMPTY: 55,\n    ENOTRECOVERABLE: 56,\n    ENOTSOCK: 57,\n    ENOTSUP: 138,\n    ENOTTY: 59,\n    ENOTUNIQ: 126,\n    ENXIO: 60,\n    EOPNOTSUPP: 138,\n    EOVERFLOW: 61,\n    EOWNERDEAD: 62,\n    EPERM: 63,\n    EPFNOSUPPORT: 139,\n    EPIPE: 64,\n    EPROTO: 65,\n    EPROTONOSUPPORT: 66,\n    EPROTOTYPE: 67,\n    ERANGE: 68,\n    EREMCHG: 128,\n    EREMOTE: 121,\n    EROFS: 69,\n    ESHUTDOWN: 140,\n    ESOCKTNOSUPPORT: 137,\n    ESPIPE: 70,\n    ESRCH: 71,\n    ESRMNT: 123,\n    ESTALE: 72,\n    ESTRPIPE: 135,\n    ETIME: 117,\n    ETIMEDOUT: 73,\n    ETOOMANYREFS: 141,\n    ETXTBSY: 74,\n    EUNATCH: 110,\n    EUSERS: 136,\n    EWOULDBLOCK: 6,\n    EXDEV: 75,\n    EXFULL: 115,\n};\nexport class PyoliteRemoteKernel {\n    constructor() {\n        /**\n         * Initialization options.\n         */\n        this._options = null;\n        this._initializer = null;\n        /** TODO: real typing */\n        this._localPath = '';\n        this._driveName = '';\n        this._driveFS = null;\n        this._initialized = new Promise((resolve, reject) => {\n            this._initializer = { resolve, reject };\n        });\n    }\n    /**\n     * Accept the URLs from the host\n     **/\n    async initialize(options) {\n        var _a;\n        this._options = options;\n        if (options.location.includes(':')) {\n            const parts = options.location.split(':');\n            this._driveName = parts[0];\n            this._localPath = parts[1];\n        }\n        else {\n            this._driveName = '';\n            this._localPath = options.location;\n        }\n        await this.initRuntime(options);\n        await this.initFilesystem(options);\n        await this.initPackageManager(options);\n        await this.initKernel(options);\n        await this.initGlobals(options);\n        (_a = this._initializer) === null || _a === void 0 ? void 0 : _a.resolve();\n    }\n    async initRuntime(options) {\n        const { pyodideUrl, indexUrl } = options;\n        if (pyodideUrl.endsWith('.mjs')) {\n            const pyodideModule = await import(/* webpackIgnore: true */ pyodideUrl);\n            this._pyodide = await pyodideModule.loadPyodide({ indexURL: indexUrl });\n        }\n        else {\n            importScripts(pyodideUrl);\n            this._pyodide = await self.loadPyodide({ indexURL: indexUrl });\n        }\n    }\n    async initPackageManager(options) {\n        if (!this._options) {\n            throw new Error('Uninitialized');\n        }\n        const { pipliteWheelUrl, disablePyPIFallback, pipliteUrls } = this._options;\n        // this is the only use of `loadPackage`, allow `piplite` to handle the rest\n        await this._pyodide.loadPackage(['micropip']);\n        // get piplite early enough to impact pyolite dependencies\n        await this._pyodide.runPythonAsync(`\n      import micropip\n      await micropip.install('${pipliteWheelUrl}', keep_going=True)\n      import piplite.piplite\n      piplite.piplite._PIPLITE_DISABLE_PYPI = ${disablePyPIFallback ? 'True' : 'False'}\n      piplite.piplite._PIPLITE_URLS = ${JSON.stringify(pipliteUrls)}\n    `);\n    }\n    async initKernel(options) {\n        // from this point forward, only use piplite\n        await this._pyodide.runPythonAsync(`\n      await piplite.install(['matplotlib', 'ipykernel'], keep_going=True);\n      await piplite.install(['pyolite'], keep_going=True);\n      await piplite.install(['ipython'], keep_going=True);\n      import pyolite\n    `);\n        // cd to the kernel location\n        if (options.mountDrive && this._localPath) {\n            await this._pyodide.runPythonAsync(`\n        import os;\n        os.chdir(\"${this._localPath}\");\n      `);\n        }\n    }\n    async initGlobals(options) {\n        const { globals } = this._pyodide;\n        this._kernel = globals.get('pyolite').kernel_instance.copy();\n        this._stdout_stream = globals.get('pyolite').stdout_stream.copy();\n        this._stderr_stream = globals.get('pyolite').stderr_stream.copy();\n        this._interpreter = this._kernel.interpreter.copy();\n        this._interpreter.send_comm = this.sendComm.bind(this);\n    }\n    /**\n     * Setup custom Emscripten FileSystem\n     */\n    async initFilesystem(options) {\n        if (options.mountDrive) {\n            const mountpoint = '/drive';\n            const { FS } = this._pyodide;\n            const { baseUrl } = options;\n            // TODO Once this https://github.com/pyodide/pyodide/pull/2582/files is released\n            // We'll be able to acces PATH and ERRNO_CODES from this._pyodide directly (not through _module)\n            const driveFS = new DriveFS({\n                FS,\n                PATH: this._pyodide._module.PATH,\n                ERRNO_CODES: ERRNO_CODES,\n                baseUrl,\n                driveName: this._driveName,\n                mountpoint,\n            });\n            FS.mkdir(mountpoint);\n            FS.mount(driveFS, {}, mountpoint);\n            FS.chdir(mountpoint);\n            this._driveFS = driveFS;\n        }\n    }\n    /**\n     * Recursively convert a Map to a JavaScript object\n     * @param obj A Map, Array, or other  object to convert\n     */\n    mapToObject(obj) {\n        const out = obj instanceof Array ? [] : {};\n        obj.forEach((value, key) => {\n            out[key] =\n                value instanceof Map || value instanceof Array\n                    ? this.mapToObject(value)\n                    : value;\n        });\n        return out;\n    }\n    /**\n     * Format the response from the Pyodide evaluation.\n     *\n     * @param res The result object from the Pyodide evaluation\n     */\n    formatResult(res) {\n        if (!this._pyodide.isPyProxy(res)) {\n            return res;\n        }\n        // TODO: this is a bit brittle\n        const m = res.toJs();\n        const results = this.mapToObject(m);\n        return results;\n    }\n    /**\n     * Makes sure pyodide is ready before continuing, and cache the parent message.\n     */\n    async setup(parent) {\n        await this._initialized;\n        this._kernel._parent_header = this._pyodide.toPy(parent);\n    }\n    /**\n     * Execute code with the interpreter.\n     *\n     * @param content The incoming message with the code to execute.\n     */\n    async execute(content, parent) {\n        await this.setup(parent);\n        const publishExecutionResult = (prompt_count, data, metadata) => {\n            const bundle = {\n                execution_count: prompt_count,\n                data: this.formatResult(data),\n                metadata: this.formatResult(metadata),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'execute_result',\n            });\n        };\n        const publishExecutionError = (ename, evalue, traceback) => {\n            const bundle = {\n                ename: ename,\n                evalue: evalue,\n                traceback: traceback,\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'execute_error',\n            });\n        };\n        const clearOutputCallback = (wait) => {\n            const bundle = {\n                wait: this.formatResult(wait),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'clear_output',\n            });\n        };\n        const displayDataCallback = (data, metadata, transient) => {\n            const bundle = {\n                data: this.formatResult(data),\n                metadata: this.formatResult(metadata),\n                transient: this.formatResult(transient),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'display_data',\n            });\n        };\n        const updateDisplayDataCallback = (data, metadata, transient) => {\n            const bundle = {\n                data: this.formatResult(data),\n                metadata: this.formatResult(metadata),\n                transient: this.formatResult(transient),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'update_display_data',\n            });\n        };\n        const publishStreamCallback = (name, text) => {\n            const bundle = {\n                name: this.formatResult(name),\n                text: this.formatResult(text),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'stream',\n            });\n        };\n        this._stdout_stream.publish_stream_callback = publishStreamCallback;\n        this._stderr_stream.publish_stream_callback = publishStreamCallback;\n        this._interpreter.display_pub.clear_output_callback = clearOutputCallback;\n        this._interpreter.display_pub.display_data_callback = displayDataCallback;\n        this._interpreter.display_pub.update_display_data_callback =\n            updateDisplayDataCallback;\n        this._interpreter.displayhook.publish_execution_result = publishExecutionResult;\n        this._interpreter.input = this.input.bind(this);\n        this._interpreter.getpass = this.getpass.bind(this);\n        const res = await this._kernel.run(content.code);\n        const results = this.formatResult(res);\n        if (results['status'] === 'error') {\n            publishExecutionError(results['ename'], results['evalue'], results['traceback']);\n        }\n        return results;\n    }\n    /**\n     * Complete the code submitted by a user.\n     *\n     * @param content The incoming message with the code to complete.\n     */\n    async complete(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.complete(content.code, content.cursor_pos);\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Inspect the code submitted by a user.\n     *\n     * @param content The incoming message with the code to inspect.\n     */\n    async inspect(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.inspect(content.code, content.cursor_pos, content.detail_level);\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Check code for completeness submitted by a user.\n     *\n     * @param content The incoming message with the code to check.\n     */\n    async isComplete(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.is_complete(content.code);\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Respond to the commInfoRequest.\n     *\n     * @param content The incoming message with the comm target name.\n     */\n    async commInfo(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_info(content.target_name);\n        const results = this.formatResult(res);\n        return {\n            comms: results,\n            status: 'ok',\n        };\n    }\n    /**\n     * Respond to the commOpen.\n     *\n     * @param content The incoming message with the comm open.\n     */\n    async commOpen(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_manager.comm_open(this._pyodide.toPy(content));\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Respond to the commMsg.\n     *\n     * @param content The incoming message with the comm msg.\n     */\n    async commMsg(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_manager.comm_msg(this._pyodide.toPy(content));\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Respond to the commClose.\n     *\n     * @param content The incoming message with the comm close.\n     */\n    async commClose(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_manager.comm_close(this._pyodide.toPy(content));\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Resolve the input request by getting back the reply from the main thread\n     *\n     * @param content The incoming message with the reply\n     */\n    async inputReply(content, parent) {\n        await this.setup(parent);\n        this._resolveInputReply(content);\n    }\n    /**\n     * Send a input request to the front-end.\n     *\n     * @param prompt the text to show at the prompt\n     * @param password Is the request for a password?\n     */\n    async sendInputRequest(prompt, password) {\n        const content = {\n            prompt,\n            password,\n        };\n        postMessage({\n            type: 'input_request',\n            parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n            content,\n        });\n    }\n    async getpass(prompt) {\n        prompt = typeof prompt === 'undefined' ? '' : prompt;\n        await this.sendInputRequest(prompt, true);\n        const replyPromise = new Promise((resolve) => {\n            this._resolveInputReply = resolve;\n        });\n        const result = await replyPromise;\n        return result['value'];\n    }\n    async input(prompt) {\n        prompt = typeof prompt === 'undefined' ? '' : prompt;\n        await this.sendInputRequest(prompt, false);\n        const replyPromise = new Promise((resolve) => {\n            this._resolveInputReply = resolve;\n        });\n        const result = await replyPromise;\n        return result['value'];\n    }\n    /**\n     * Send a comm message to the front-end.\n     *\n     * @param type The type of the comm message.\n     * @param content The content.\n     * @param metadata The metadata.\n     * @param ident The ident.\n     * @param buffers The binary buffers.\n     */\n    async sendComm(type, content, metadata, ident, buffers) {\n        postMessage({\n            type: type,\n            content: this.formatResult(content),\n            metadata: this.formatResult(metadata),\n            ident: this.formatResult(ident),\n            buffers: this.formatResult(buffers),\n            parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        });\n    }\n}\n"],"names":["DIR_MODE","FILE_MODE","encoder","TextEncoder","decoder","TextDecoder","flagNeedsWrite","DriveFSEmscriptenStreamOps","constructor","fs","this","open","stream","path","realPath","node","FS","isFile","mode","file","API","get","close","flags","parsedFlags","parseInt","needsWrite","put","undefined","read","buffer","offset","length","position","_a","size","Math","min","data","set","subarray","e","ErrnoError","ERRNO_CODES","write","_b","timestamp","Date","now","oldData","Uint8Array","llseek","whence","DriveFSEmscriptenNodeOps","getattr","setattr","attr","lookup","parent","name","PATH","join2","result","ok","genericErrors","createNode","mknod","dev","rename","oldNode","newDir","newName","unlink","rmdir","readdir","symlink","oldPath","readlink","ContentsAPI","baseUrl","driveName","mountpoint","_baseUrl","_driveName","_mountpoint","request","xhr","XMLHttpRequest","encodeURI","endpoint","send","JSON","stringify","console","error","status","parse","responseText","method","normalizePath","getmode","Number","newPath","dirlist","push","response","serializedContent","content","format","encode","binString","atob","len","i","charCodeAt","value","decode","binary","byteLength","String","fromCharCode","btoa","stats","atime","mtime","ctime","startsWith","slice","DriveFS","options","node_ops","stream_ops","mount","isDir","getMode","parts","currentNode","reverse","join","apply","PIPLITE_WHEEL","proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","serialized","Error","isError","message","stack","Object","assign","ep","self","addEventListener","callback","ev","id","type","argumentList","map","fromWireValue","returnValue","reduce","prop","rawValue","proxy","transfers","transferCache","transfer","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","isMessagePort","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","p","toString","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","msg","fill","floor","random","MAX_SAFE_INTEGER","l","PyoliteKernel","BaseKernel","super","_ready","PromiseDelegate","_worker","initWorker","onmessage","_processWorkerMessage","_remoteKernel","initRemote","Worker","URL","remote","remoteOptions","initRemoteOptions","initialize","pyodideUrl","indexUrl","lastIndexOf","PageConfig","pypi","URLExt","pipliteUrls","pipliteWheelUrl","disablePyPIFallback","location","mountDrive","dispose","isDisposed","terminate","ready","promise","_c","_d","_e","_f","_g","bundle","text","parentHeader","prompt","password","inputRequest","metadata","transient","displayData","updateDisplayData","wait","clearOutput","execution_count","publishExecuteResult","ename","evalue","traceback","publishExecuteError","handleComm","buffers","async","implementation","implementation_version","language_info","codemirror_mode","version","file_extension","mimetype","nbconvert_exporter","pygments_lexer","protocol_version","banner","help_links","url","execute","executionCount","complete","inspect","isComplete","commInfo","commOpen","commMsg","commClose","inputReply","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","PyoliteRemoteKernel","_options","_initializer","_localPath","_driveFS","_initialized","reject","includes","split","initRuntime","initFilesystem","initPackageManager","initKernel","initGlobals","endsWith","pyodideModule","import","_pyodide","loadPyodide","indexURL","importScripts","loadPackage","runPythonAsync","globals","_kernel","kernel_instance","copy","_stdout_stream","stdout_stream","_stderr_stream","stderr_stream","_interpreter","interpreter","send_comm","sendComm","driveFS","_module","mkdir","chdir","mapToObject","out","forEach","key","formatResult","res","isPyProxy","m","toJs","_parent_header","toPy","setup","publishStreamCallback","publish_stream_callback","display_pub","clear_output_callback","display_data_callback","update_display_data_callback","displayhook","publish_execution_result","prompt_count","input","getpass","run","code","results","publishExecutionError","cursor_pos","detail_level","is_complete","comm_info","target_name","comms","comm_manager","comm_open","comm_msg","comm_close","_resolveInputReply","sendInputRequest","replyPromise","ident"],"sourceRoot":""}