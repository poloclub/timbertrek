{"version":3,"file":"3694.04db579.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/application-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { IRouter, ILabShell, } from '@jupyterlab/application';\nimport { Clipboard, ICommandPalette, Dialog, showDialog } from '@jupyterlab/apputils';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { IDocumentProviderFactory, ProviderMock, getAnonymousUserName, getRandomColor, } from '@jupyterlab/docprovider';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { downloadIcon, linkIcon } from '@jupyterlab/ui-components';\nimport { liteIcon, liteWordmark } from '@jupyterlite/ui-components';\nimport { filter, toArray } from '@lumino/algorithm';\nimport { UUID, PromiseDelegate } from '@lumino/coreutils';\nimport { Widget } from '@lumino/widgets';\nimport { getParam } from 'lib0/environment';\nimport { WebrtcProvider } from 'y-webrtc';\nimport { Awareness } from 'y-protocols/awareness';\nimport React from 'react';\n/**\n * The default notebook factory.\n */\nconst NOTEBOOK_FACTORY = 'Notebook';\n/**\n * The editor factory.\n */\nconst EDITOR_FACTORY = 'Editor';\n/**\n * A regular expression to match path to notebooks, documents and consoles\n */\nconst URL_PATTERN = new RegExp('/(lab|notebooks|edit|consoles)\\\\/?');\nclass WebRtcProvider extends WebrtcProvider {\n    constructor(options) {\n        super(`${options.room}${options.path}`, options.ymodel.ydoc, WebRtcProvider.yProviderOptions(options));\n        this._initialRequest = null;\n        this.awareness = options.ymodel.awareness;\n        const color = `#${getParam('--usercolor', getRandomColor().slice(1))}`;\n        const name = getParam('--username', getAnonymousUserName());\n        const currState = this.awareness.getLocalState();\n        // only set if this was not already set by another plugin\n        if (currState && !currState.name) {\n            this.awareness.setLocalStateField('user', {\n                name,\n                color,\n            });\n        }\n    }\n    setPath() {\n        // TODO: this seems super useful\n    }\n    requestInitialContent() {\n        if (this._initialRequest) {\n            return this._initialRequest.promise;\n        }\n        let resolved = false;\n        this._initialRequest = new PromiseDelegate();\n        this.on('synced', (event) => {\n            if (this._initialRequest) {\n                this._initialRequest.resolve(event.synced);\n                resolved = true;\n            }\n        });\n        // similar logic as in the upstream plugin\n        setTimeout(() => {\n            if (!resolved && this._initialRequest) {\n                this._initialRequest.resolve(false);\n            }\n        }, 1000);\n        return this._initialRequest.promise;\n    }\n    putInitializedState() {\n        // no-op\n    }\n    acquireLock() {\n        return Promise.resolve(0);\n    }\n    releaseLock(lock) {\n        // no-op\n    }\n}\n/**\n * A private (so far) namespace for Yjs/WebRTC implementation details\n */\n(function (WebRtcProvider) {\n    /**\n     * Re-map Lab provider options to yjs ones.\n     */\n    function yProviderOptions(options) {\n        return {\n            signaling: options.signalingUrls && options.signalingUrls.length\n                ? options.signalingUrls\n                : [\n                    'wss://signaling.yjs.dev',\n                    'wss://y-webrtc-signaling-eu.herokuapp.com',\n                    'wss://y-webrtc-signaling-us.herokuapp.com',\n                ],\n            password: null,\n            awareness: new Awareness(options.ymodel.ydoc),\n            maxConns: 20 + Math.floor(Math.random() * 15),\n            filterBcConns: true,\n            peerOpts: {}, // simple-peer options. See https://github.com/feross/simple-peer#peer--new-peeropts\n        };\n    }\n    WebRtcProvider.yProviderOptions = yProviderOptions;\n})(WebRtcProvider || (WebRtcProvider = {}));\n/**\n * The command IDs used by the application extension.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.about = 'application:about';\n    CommandIDs.docmanagerDownload = 'docmanager:download';\n    CommandIDs.filebrowserDownload = 'filebrowser:download';\n    CommandIDs.copyShareableLink = 'filebrowser:share-main';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Add a command to show an About dialog.\n */\nconst about = {\n    id: '@jupyterlite/application-extension:about',\n    autoStart: true,\n    requires: [ITranslator],\n    optional: [ICommandPalette, IMainMenu],\n    activate: (app, translator, palette, menu) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const category = trans.__('Help');\n        commands.addCommand(CommandIDs.about, {\n            label: trans.__('About %1', app.name),\n            execute: () => {\n                const versionNumber = trans.__('Version %1', app.version);\n                const versionInfo = (React.createElement(\"span\", { className: \"jp-About-version-info\" },\n                    React.createElement(\"span\", { className: \"jp-About-version\" }, versionNumber)));\n                const title = (React.createElement(\"span\", { className: \"jp-About-header\" },\n                    React.createElement(\"div\", { className: \"jp-About-header-info\" },\n                        React.createElement(liteWordmark.react, { height: \"auto\", width: \"196px\" }),\n                        versionInfo)));\n                // Create the body of the about dialog\n                const jupyterliteURL = 'https://github.com/jupyterlite/jupyterlite';\n                const contributorsURL = 'https://github.com/jupyterlite/jupyterlite/graphs/contributors';\n                const externalLinks = (React.createElement(\"span\", { className: \"jp-About-externalLinks\" },\n                    React.createElement(\"a\", { href: contributorsURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('CONTRIBUTOR LIST')),\n                    React.createElement(\"a\", { href: jupyterliteURL, target: \"_blank\", rel: \"noopener noreferrer\", className: \"jp-Button-flat\" }, trans.__('JUPYTERLITE ON GITHUB'))));\n                const copyright = (React.createElement(\"span\", { className: \"jp-About-copyright\" }, trans.__('© 2021 JupyterLite Contributors')));\n                const body = (React.createElement(\"div\", { className: \"jp-About-body\" },\n                    externalLinks,\n                    copyright));\n                return showDialog({\n                    title,\n                    body,\n                    buttons: [\n                        Dialog.createButton({\n                            label: trans.__('Dismiss'),\n                            className: 'jp-About-button jp-mod-reject jp-mod-styled',\n                        }),\n                    ],\n                });\n            },\n        });\n        if (palette) {\n            palette.addItem({ command: CommandIDs.about, category });\n        }\n        if (menu) {\n            menu.helpMenu.addGroup([{ command: CommandIDs.about }], 0);\n        }\n    },\n};\n/**\n * An alternative document provider plugin\n */\nconst docProviderPlugin = {\n    id: '@jupyterlite/application-extension:docprovider',\n    provides: IDocumentProviderFactory,\n    activate: (app) => {\n        const roomName = getParam('--room', '').trim();\n        const host = window.location.host;\n        // enable if both the page config option (deployment wide) and the room name (user) are defined\n        const collaborative = PageConfig.getOption('collaborative') === 'true' && roomName;\n        const signalingUrls = JSON.parse(PageConfig.getOption('fullWebRtcSignalingUrls') || 'null');\n        // default to a random id to not collaborate with others by default\n        const room = `${host}-${roomName || UUID.uuid4()}`;\n        const factory = (options) => {\n            return collaborative\n                ? new WebRtcProvider({\n                    room,\n                    ...options,\n                    ...(signalingUrls && signalingUrls.length ? { signalingUrls } : {}),\n                })\n                : new ProviderMock();\n        };\n        return factory;\n    },\n};\n/**\n * A plugin providing download commands in the file menu and command palette.\n */\nconst downloadPlugin = {\n    id: '@jupyterlite/application-extension:download',\n    autoStart: true,\n    requires: [ITranslator, IDocumentManager],\n    optional: [ICommandPalette, IFileBrowserFactory],\n    activate: (app, translator, docManager, palette, factory) => {\n        const trans = translator.load('jupyterlab');\n        const { commands, serviceManager, shell } = app;\n        const { contents } = serviceManager;\n        const isEnabled = () => {\n            const { currentWidget } = shell;\n            return !!(currentWidget && docManager.contextForWidget(currentWidget));\n        };\n        const downloadContent = (content, path) => {\n            const element = document.createElement('a');\n            element.href = `data:text/json;charset=utf-8,${encodeURIComponent(content)}`;\n            element.download = path;\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n        };\n        const formatContent = async (path) => {\n            const model = await contents.get(path, { content: true });\n            if (model.type === 'notebook' || model.mimetype.indexOf('json') !== -1) {\n                return JSON.stringify(model.content, null, 2);\n            }\n            return model.content;\n        };\n        commands.addCommand(CommandIDs.docmanagerDownload, {\n            label: trans.__('Download'),\n            caption: trans.__('Download the file to your computer'),\n            isEnabled,\n            execute: async () => {\n                // Checks that shell.currentWidget is valid:\n                const current = shell.currentWidget;\n                if (!isEnabled() || !current) {\n                    return;\n                }\n                const context = docManager.contextForWidget(current);\n                if (!context) {\n                    return showDialog({\n                        title: trans.__('Cannot Download'),\n                        body: trans.__('No context found for current widget!'),\n                        buttons: [Dialog.okButton({ label: trans.__('OK') })],\n                    });\n                }\n                const content = await formatContent(context.path);\n                downloadContent(content, context.path);\n            },\n        });\n        const category = trans.__('File Operations');\n        if (palette) {\n            palette.addItem({ command: CommandIDs.docmanagerDownload, category });\n        }\n        if (factory) {\n            const { tracker } = factory;\n            commands.addCommand(CommandIDs.filebrowserDownload, {\n                execute: async () => {\n                    const widget = tracker.currentWidget;\n                    if (!widget) {\n                        return;\n                    }\n                    const selected = toArray(widget.selectedItems());\n                    selected.forEach(async (item) => {\n                        if (item.type === 'directory') {\n                            return;\n                        }\n                        const content = await formatContent(item.path);\n                        downloadContent(content, item.name);\n                    });\n                },\n                icon: downloadIcon.bindprops({ stylesheet: 'menuItem' }),\n                label: trans.__('Download'),\n            });\n        }\n    },\n};\n/**\n * The main application icon.\n */\nconst liteLogo = {\n    id: '@jupyterlite/application-extension:logo',\n    // marking as optional to not throw errors in retro\n    optional: [ILabShell],\n    autoStart: true,\n    activate: (app, labShell) => {\n        if (!labShell) {\n            return;\n        }\n        const logo = new Widget();\n        liteIcon.element({\n            container: logo.node,\n            elementPosition: 'center',\n            margin: '2px 2px 2px 8px',\n            height: 'auto',\n            width: '16px',\n        });\n        logo.id = 'jp-MainLogo';\n        labShell.add(logo, 'top', { rank: 0 });\n    },\n};\n/**\n * A plugin to trigger a refresh of the commands when the shell layout changes.\n */\nconst notifyCommands = {\n    id: '@jupyterlite/application-extension:notify-commands',\n    autoStart: true,\n    optional: [ILabShell],\n    activate: (app, labShell) => {\n        if (labShell) {\n            labShell.layoutModified.connect(() => {\n                app.commands.notifyCommandChanged();\n            });\n        }\n    },\n};\n/**\n * A custom opener plugin to pass the path to documents as\n * query string parameters.\n */\nconst opener = {\n    id: '@jupyterlite/application-extension:opener',\n    autoStart: true,\n    requires: [IRouter, IDocumentManager],\n    activate: (app, router, docManager) => {\n        const { commands } = app;\n        const command = 'router:tree';\n        commands.addCommand(command, {\n            execute: (args) => {\n                var _a;\n                const parsed = args;\n                // use request to do the matching\n                const { request, search } = parsed;\n                const matches = (_a = request.match(URL_PATTERN)) !== null && _a !== void 0 ? _a : [];\n                if (!matches) {\n                    return;\n                }\n                const urlParams = new URLSearchParams(search);\n                const paths = urlParams.getAll('path');\n                if (!paths) {\n                    return;\n                }\n                const files = paths.map((path) => decodeURIComponent(path));\n                app.restored.then(() => {\n                    const page = PageConfig.getOption('retroPage');\n                    const [file] = files;\n                    switch (page) {\n                        case 'consoles': {\n                            commands.execute('console:create', { path: file });\n                            return;\n                        }\n                        case 'notebooks': {\n                            docManager.open(file, NOTEBOOK_FACTORY, undefined, {\n                                ref: '_noref',\n                            });\n                            return;\n                        }\n                        case 'edit': {\n                            docManager.open(file, EDITOR_FACTORY, undefined, {\n                                ref: '_noref',\n                            });\n                            return;\n                        }\n                        default: {\n                            // open all files in the lab interface\n                            files.forEach((file) => docManager.open(file));\n                            const url = new URL(URLExt.join(PageConfig.getBaseUrl(), request));\n                            // only remove the path (to keep extra parameters like the RTC room)\n                            url.searchParams.delete('path');\n                            const { pathname, search } = url;\n                            router.navigate(`${pathname}${search}`, { skipRouting: true });\n                            break;\n                        }\n                    }\n                });\n            },\n        });\n        router.register({ command, pattern: URL_PATTERN });\n    },\n};\n/**\n * A custom plugin to share a link to a file.\n *\n * This url can be used to open a particular file in JupyterLab.\n * It also adds the corresponding room if RTC is enabled.\n *\n */\nconst shareFile = {\n    id: '@jupyterlite/application-extension:share-file',\n    requires: [IFileBrowserFactory, ITranslator],\n    autoStart: true,\n    activate: (app, factory, translator) => {\n        const trans = translator.load('jupyterlab');\n        const { commands } = app;\n        const { tracker } = factory;\n        const roomName = getParam('--room', '').trim();\n        const collaborative = PageConfig.getOption('collaborative') === 'true' && roomName;\n        commands.addCommand(CommandIDs.copyShareableLink, {\n            execute: () => {\n                const widget = tracker.currentWidget;\n                if (!widget) {\n                    return;\n                }\n                const url = new URL(URLExt.join(PageConfig.getBaseUrl(), 'lab'));\n                const models = toArray(filter(widget.selectedItems(), (item) => item.type !== 'directory'));\n                models.forEach((model) => {\n                    url.searchParams.append('path', model.path);\n                });\n                if (collaborative) {\n                    url.searchParams.append('room', roomName);\n                }\n                Clipboard.copyToSystem(url.href);\n            },\n            isVisible: () => !!tracker.currentWidget &&\n                toArray(tracker.currentWidget.selectedItems()).length >= 1,\n            icon: linkIcon.bindprops({ stylesheet: 'menuItem' }),\n            label: trans.__('Copy Shareable Link'),\n        });\n    },\n};\nconst plugins = [\n    about,\n    docProviderPlugin,\n    downloadPlugin,\n    liteLogo,\n    notifyCommands,\n    opener,\n    shareFile,\n];\nexport default plugins;\n"],"names":["URL_PATTERN","RegExp","WebRtcProvider","WebrtcProvider","constructor","options","super","room","path","ymodel","ydoc","yProviderOptions","this","_initialRequest","awareness","color","getRandomColor","slice","name","getAnonymousUserName","currState","getLocalState","setLocalStateField","setPath","requestInitialContent","promise","resolved","PromiseDelegate","on","event","resolve","synced","setTimeout","putInitializedState","acquireLock","Promise","releaseLock","lock","CommandIDs","signaling","signalingUrls","length","password","maxConns","Math","floor","random","filterBcConns","peerOpts","about","docmanagerDownload","filebrowserDownload","copyShareableLink","id","autoStart","requires","ITranslator","optional","ICommandPalette","IMainMenu","activate","app","translator","palette","menu","commands","trans","load","category","__","addCommand","label","execute","versionNumber","version","versionInfo","className","title","liteWordmark","height","width","externalLinks","href","target","rel","copyright","body","showDialog","buttons","Dialog","addItem","command","helpMenu","addGroup","provides","IDocumentProviderFactory","roomName","trim","host","window","location","collaborative","PageConfig","JSON","parse","UUID","ProviderMock","IDocumentManager","IFileBrowserFactory","docManager","factory","serviceManager","shell","contents","isEnabled","currentWidget","contextForWidget","downloadContent","content","element","document","createElement","encodeURIComponent","download","appendChild","click","removeChild","formatContent","async","model","get","type","mimetype","indexOf","stringify","caption","current","context","tracker","widget","toArray","selectedItems","forEach","item","icon","downloadIcon","stylesheet","ILabShell","labShell","logo","Widget","liteIcon","container","node","elementPosition","margin","add","rank","layoutModified","connect","notifyCommandChanged","IRouter","router","args","_a","parsed","request","search","match","paths","URLSearchParams","getAll","files","map","decodeURIComponent","restored","then","page","file","open","undefined","ref","url","URL","URLExt","searchParams","delete","pathname","navigate","skipRouting","register","pattern","filter","append","Clipboard","isVisible","linkIcon"],"sourceRoot":""}